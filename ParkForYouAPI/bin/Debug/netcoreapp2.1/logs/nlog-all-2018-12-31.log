2018-12-31 11:40:50.7652||INFO|Quartz.Util.DBConnectionManager|Registering datasource 'SR-53\MSSQL' with db provider: 'Quartz.Impl.AdoJobStore.Common.DbProvider' 
2018-12-31 11:40:50.8624||INFO|Quartz.Impl.StdSchedulerFactory|Using object serializer: Quartz.Simpl.JsonObjectSerializer, Quartz.Serialization.Json 
2018-12-31 11:40:50.8933||DEBUG|Quartz.Simpl.TaskSchedulingThreadPool|TaskSchedulingThreadPool configured with max concurrency of 10 and TaskScheduler ThreadPoolTaskScheduler. 
2018-12-31 11:40:50.9262||INFO|Quartz.Core.SchedulerSignalerImpl|Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl 
2018-12-31 11:40:50.9811||INFO|Quartz.Core.QuartzScheduler|Quartz Scheduler v.3.0.7.0 created. 
2018-12-31 11:40:50.9939||DEBUG|Quartz.Impl.AdoJobStore.StdAdoDelegate|Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.SimpleTriggerPersistenceDelegate 
2018-12-31 11:40:50.9939||DEBUG|Quartz.Impl.AdoJobStore.StdAdoDelegate|Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CronTriggerPersistenceDelegate 
2018-12-31 11:40:50.9939||DEBUG|Quartz.Impl.AdoJobStore.StdAdoDelegate|Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CalendarIntervalTriggerPersistenceDelegate 
2018-12-31 11:40:50.9939||DEBUG|Quartz.Impl.AdoJobStore.StdAdoDelegate|Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.DailyTimeIntervalTriggerPersistenceDelegate 
2018-12-31 11:40:50.9990||INFO|Quartz.Impl.AdoJobStore.JobStoreTX|Using thread monitor-based data access locking (synchronization). 
2018-12-31 11:40:50.9990||INFO|Quartz.Impl.AdoJobStore.JobStoreTX|JobStoreTX initialized. 
2018-12-31 11:40:50.9990||INFO|Quartz.Core.QuartzScheduler|Scheduler meta-data: Quartz Scheduler (v3.0.7.0) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'Quartz.Core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'Quartz.Simpl.DefaultThreadPool' - with 10 threads.
  Using job-store 'Quartz.Impl.AdoJobStore.JobStoreTX' - which supports persistence. and is not clustered.
 
2018-12-31 11:40:50.9990||INFO|Quartz.Impl.StdSchedulerFactory|Quartz scheduler 'QuartzScheduler' initialized 
2018-12-31 11:40:51.0157||INFO|Quartz.Impl.StdSchedulerFactory|Quartz scheduler version: 3.0.7.0 
2018-12-31 11:40:51.0157||INFO|Quartz.Core.QuartzScheduler|JobFactory set to: BackgroundSchedulers.JobFactory 
2018-12-31 11:40:51.0451||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' is desired by: 603aae0f-4a46-4280-b083-b4576f78fac0 
2018-12-31 11:40:51.0467||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' is being obtained: 603aae0f-4a46-4280-b083-b4576f78fac0 
2018-12-31 11:40:51.0467||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' given to: 603aae0f-4a46-4280-b083-b4576f78fac0 
2018-12-31 11:40:51.2116||DEBUG|Quartz.SQL|Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2) 
2018-12-31 11:40:51.2989||DEBUG|Quartz.SQL|Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2) 
2018-12-31 11:40:51.3150||INFO|Quartz.Impl.AdoJobStore.JobStoreTX|Freed 0 triggers from 'acquired' / 'blocked' state. 
2018-12-31 11:40:51.3150||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:40:51.3495||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 11:40:51.3602||DEBUG|Quartz.SQL|Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND INSTANCE_NAME = @instanceName AND REQUESTS_RECOVERY = @requestsRecovery 
2018-12-31 11:40:51.3780||INFO|Quartz.Impl.AdoJobStore.JobStoreTX|Recovering 0 jobs that were in-progress at the time of the last shut-down. 
2018-12-31 11:40:51.3780||INFO|Quartz.Impl.AdoJobStore.JobStoreTX|Recovery complete. 
2018-12-31 11:40:51.3780||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state 
2018-12-31 11:40:51.3986||INFO|Quartz.Impl.AdoJobStore.JobStoreTX|Removed 0 'complete' triggers. 
2018-12-31 11:40:51.3986||DEBUG|Quartz.SQL|Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' 
2018-12-31 11:40:51.4137||INFO|Quartz.Impl.AdoJobStore.JobStoreTX|Removed 0 stale fired job entries. 
2018-12-31 11:40:51.4208||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' returned by: 603aae0f-4a46-4280-b083-b4576f78fac0 
2018-12-31 11:40:51.4385||INFO|Quartz.Core.QuartzScheduler|Scheduler QuartzScheduler_$_NON_CLUSTERED started. 
2018-12-31 11:40:51.4555||DEBUG|Quartz.Impl.AdoJobStore.MisfireHandler|Scanning for misfires... 
2018-12-31 11:40:51.4759||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:40:51.5189||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 
2018-12-31 11:40:51.5505||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 11:40:51.5505||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 11:40:57.9215||INFO|Quartz.Core.QuartzScheduler|JobFactory set to: BackgroundSchedulers.JobFactory 
2018-12-31 11:40:57.9215||INFO|Quartz.Core.QuartzScheduler|Scheduler QuartzScheduler_$_NON_CLUSTERED started. 
2018-12-31 11:40:57.9215||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:40:57.9436||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 11:40:58.0429||DEBUG|Components.Services.Implementation.Logging|Message=[Login process started.], EmailAddress=[], Method=[Login], LineNumber=[366] 
2018-12-31 11:40:58.0429||DEBUG|Components.Services.Implementation.Logging|Message=[Getting user with the username: +923028417241], EmailAddress=[], Method=[Login], LineNumber=[368] 
2018-12-31 11:40:58.5834||DEBUG|Components.Services.Implementation.Logging|Message=[Password sign for the user with the username: +923028417241], EmailAddress=[], Method=[Login], LineNumber=[372] 
2018-12-31 11:40:58.5834||DEBUG|Components.Services.Implementation.Logging|Message=[Getting roles of the user.], EmailAddress=[], Method=[Login], LineNumber=[376] 
2018-12-31 11:40:58.6756||DEBUG|Components.Services.Implementation.Logging|Message=[Generating token of user with the username: +923028417241 and role: User], EmailAddress=[], Method=[Login], LineNumber=[378] 
2018-12-31 11:40:58.7020||DEBUG|Components.Services.Implementation.Logging|Message=[Login process ended.], EmailAddress=[], Method=[Login], LineNumber=[389] 
2018-12-31 11:41:11.5496||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:41:11.5851||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 11:41:19.8252||DEBUG|Components.Services.Implementation.Logging|Message=[Start parking process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[92] 
2018-12-31 11:41:19.8252||DEBUG|Components.Services.Implementation.Logging|Message=[Getting device information with the mobileNumber: +923028417241], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[104] 
2018-12-31 11:41:20.0680||DEBUG|Components.Services.Implementation.Logging|Message=[Getting user setting with the mobileNumber: +923028417241], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[109] 
2018-12-31 11:41:20.1012||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information: +923028417241], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[114] 
2018-12-31 11:41:20.1245||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parking lot with the Id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[119] 
2018-12-31 11:41:20.1245||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 11:41:20.1477||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 11:41:20.1685||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 11:41:20.1897||DEBUG|Components.Services.Implementation.Logging|Message=[Parking vendor index is: 0], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[125] 
2018-12-31 11:41:20.1897||DEBUG|Components.Services.Implementation.Logging|Message=[Getting user card information with the cardId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[127] 
2018-12-31 11:41:20.1897||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user card with the cardId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[128] 
2018-12-31 11:41:20.2137||DEBUG|Components.Services.Implementation.Logging|Message=[Getting vehicle information with the mobileNumber: +923028417241], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[132] 
2018-12-31 11:41:20.2391||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parking information with the parkingId: 0], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[138] 
2018-12-31 11:41:20.2603||DEBUG|Components.Services.Implementation.Logging|Message=[Parking total price is of: 10], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[207] 
2018-12-31 11:41:20.2649||DEBUG|Components.Services.Implementation.Logging|Message=[Calculated price of minutes 1 is 0.1666666666666666666666666667: ], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[210] 
2018-12-31 11:41:20.2649||DEBUG|Components.Services.Implementation.Logging|Message=[Adding the new parking in the system.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[261] 
2018-12-31 11:41:20.3884||DEBUG|Components.Services.Implementation.Logging|Message=[Background service register event.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[266] 
2018-12-31 11:41:20.4071||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' is desired by: 68fccb1a-3a43-46aa-8901-9b4fb3141448 
2018-12-31 11:41:20.4071||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' is being obtained: 68fccb1a-3a43-46aa-8901-9b4fb3141448 
2018-12-31 11:41:20.4071||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' given to: 68fccb1a-3a43-46aa-8901-9b4fb3141448 
2018-12-31 11:41:20.4223||DEBUG|Quartz.SQL|Prepared SQL: SELECT JOB_NAME FROM QRTZ_JOB_DETAILS WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup 
2018-12-31 11:41:20.4607||DEBUG|Quartz.SQL|Prepared SQL: INSERT INTO QRTZ_JOB_DETAILS (SCHED_NAME, JOB_NAME, JOB_GROUP, DESCRIPTION, JOB_CLASS_NAME, IS_DURABLE, IS_NONCONCURRENT, IS_UPDATE_DATA, REQUESTS_RECOVERY, JOB_DATA)  VALUES('QuartzScheduler', @jobName, @jobGroup, @jobDescription, @jobType, @jobDurable, @jobVolatile, @jobStateful, @jobRequestsRecovery, @jobDataMap) 
2018-12-31 11:41:20.4789||DEBUG|Components.Services.Implementation.Logging|Message=[Start parking process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[290] 
2018-12-31 11:41:20.5016||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup 
2018-12-31 11:41:20.5404||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_GROUP FROM QRTZ_PAUSED_TRIGGER_GRPS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_GROUP = @triggerGroup 
2018-12-31 11:41:20.5570||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_GROUP FROM QRTZ_PAUSED_TRIGGER_GRPS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_GROUP = @triggerGroup 
2018-12-31 11:41:20.5774||DEBUG|Quartz.SQL|Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup 
2018-12-31 11:41:20.6046||DEBUG|Quartz.SQL|Prepared SQL: INSERT INTO QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP, JOB_NAME, JOB_GROUP, DESCRIPTION, NEXT_FIRE_TIME, PREV_FIRE_TIME, TRIGGER_STATE, TRIGGER_TYPE, START_TIME, END_TIME, CALENDAR_NAME, MISFIRE_INSTR, JOB_DATA, PRIORITY)  
                        VALUES('QuartzScheduler', @triggerName, @triggerGroup, @triggerJobName, @triggerJobGroup, @triggerDescription, @triggerNextFireTime, @triggerPreviousFireTime, @triggerState, @triggerType, @triggerStartTime, @triggerEndTime, @triggerCalendarName, @triggerMisfireInstruction, @triggerJobJobDataMap, @triggerPriority) 
2018-12-31 11:41:20.6233||DEBUG|Quartz.SQL|Prepared SQL: INSERT INTO QRTZ_SIMPLE_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP, REPEAT_COUNT, REPEAT_INTERVAL, TIMES_TRIGGERED)  VALUES('QuartzScheduler', @triggerName, @triggerGroup, @triggerRepeatCount, @triggerRepeatInterval, @triggerTimesTriggered) 
2018-12-31 11:41:20.6379||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' returned by: 68fccb1a-3a43-46aa-8901-9b4fb3141448 
2018-12-31 11:41:20.6426||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:41:20.6594||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 11:41:33.4185||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:41:33.4362||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 11:41:47.3792||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:41:47.3982||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 11:41:51.4567||DEBUG|Quartz.Impl.AdoJobStore.MisfireHandler|Scanning for misfires... 
2018-12-31 11:41:51.4567||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 
2018-12-31 11:41:51.4859||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 11:42:01.4414||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:42:01.4585||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 11:42:15.1520||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:42:15.1846||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 11:42:29.2262||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:42:29.2585||DEBUG|Quartz.SQL|Prepared SQL: SELECT JOB_NAME,JOB_GROUP,DESCRIPTION,NEXT_FIRE_TIME,PREV_FIRE_TIME,TRIGGER_TYPE,START_TIME,END_TIME,CALENDAR_NAME,MISFIRE_INSTR,PRIORITY,JOB_DATA FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup 
2018-12-31 11:42:29.2910||DEBUG|Quartz.SQL|Prepared SQL: SELECT * FROM QRTZ_SIMPLE_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup 
2018-12-31 11:42:29.3128||DEBUG|Quartz.SQL|Prepared SQL: SELECT JOB_NAME,JOB_GROUP,DESCRIPTION,JOB_CLASS_NAME,IS_DURABLE,REQUESTS_RECOVERY,JOB_DATA FROM QRTZ_JOB_DETAILS WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup 
2018-12-31 11:42:29.3365||DEBUG|Quartz.SQL|Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup AND TRIGGER_STATE = @oldState AND NEXT_FIRE_TIME = @nextFireTime 
2018-12-31 11:42:29.3560||DEBUG|Quartz.SQL|Prepared SQL: INSERT INTO QRTZ_FIRED_TRIGGERS (SCHED_NAME, ENTRY_ID, TRIGGER_NAME, TRIGGER_GROUP, INSTANCE_NAME, FIRED_TIME, SCHED_TIME, STATE, JOB_NAME, JOB_GROUP, IS_NONCONCURRENT, REQUESTS_RECOVERY, PRIORITY) VALUES('QuartzScheduler', @triggerEntryId, @triggerName, @triggerGroup, @triggerInstanceName, @triggerFireTime, @triggerScheduledTime, @triggerState, @triggerJobName, @triggerJobGroup, @triggerJobStateful, @triggerJobRequestsRecovery, @triggerPriority) 
2018-12-31 11:42:29.3702||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 1 triggers 
2018-12-31 11:42:30.3954||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' is desired by: 6d39dcf9-1ca5-4660-9a87-a6a8d9eb0e9a 
2018-12-31 11:42:30.3954||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' is being obtained: 6d39dcf9-1ca5-4660-9a87-a6a8d9eb0e9a 
2018-12-31 11:42:30.3954||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' given to: 6d39dcf9-1ca5-4660-9a87-a6a8d9eb0e9a 
2018-12-31 11:42:30.4279||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_STATE FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup 
2018-12-31 11:42:30.4525||DEBUG|Quartz.SQL|Prepared SQL: SELECT JOB_NAME,JOB_GROUP,DESCRIPTION,JOB_CLASS_NAME,IS_DURABLE,REQUESTS_RECOVERY,JOB_DATA FROM QRTZ_JOB_DETAILS WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup 
2018-12-31 11:42:30.4922||DEBUG|Quartz.SQL|Prepared SQL: UPDATE QRTZ_FIRED_TRIGGERS SET INSTANCE_NAME = @instanceName, FIRED_TIME = @firedTime, SCHED_TIME = @scheduledTime, STATE = @entryState, JOB_NAME = @jobName, JOB_GROUP = @jobGroup, IS_NONCONCURRENT = @isNonConcurrent, REQUESTS_RECOVERY = @requestsRecover WHERE SCHED_NAME = 'QuartzScheduler' AND ENTRY_ID = @entryId 
2018-12-31 11:42:30.5115||DEBUG|Quartz.SQL|Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @state WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup AND TRIGGER_STATE = @oldState 
2018-12-31 11:42:30.5332||DEBUG|Quartz.SQL|Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @state WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup AND TRIGGER_STATE = @oldState 
2018-12-31 11:42:30.5541||DEBUG|Quartz.SQL|Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @state WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup AND TRIGGER_STATE = @oldState 
2018-12-31 11:42:30.5743||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup 
2018-12-31 11:42:30.5925||DEBUG|Quartz.SQL|Prepared SQL: UPDATE QRTZ_TRIGGERS SET JOB_NAME = @triggerJobName, JOB_GROUP = @triggerJobGroup, DESCRIPTION = @triggerDescription, NEXT_FIRE_TIME = @triggerNextFireTime, PREV_FIRE_TIME = @triggerPreviousFireTime, 
                        TRIGGER_STATE = @triggerState, TRIGGER_TYPE = @triggerType, START_TIME = @triggerStartTime, END_TIME = @triggerEndTime, CALENDAR_NAME = @triggerCalendarName, MISFIRE_INSTR = @triggerMisfireInstruction, PRIORITY = @triggerPriority
                    WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup 
2018-12-31 11:42:30.6125||DEBUG|Quartz.SQL|Prepared SQL: UPDATE QRTZ_SIMPLE_TRIGGERS SET REPEAT_COUNT = @triggerRepeatCount, REPEAT_INTERVAL = @triggerRepeatInterval, TIMES_TRIGGERED = @triggerTimesTriggered WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup 
2018-12-31 11:42:30.6263||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' returned by: 6d39dcf9-1ca5-4660-9a87-a6a8d9eb0e9a 
2018-12-31 11:42:30.6263||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:42:30.6561||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 11:42:30.6853||DEBUG|Quartz.Core.JobRunShell|Calling Execute on job DEFAULT.AutoStopParking2 
2018-12-31 11:42:30.6914||DEBUG|Components.Services.Implementation.Logging|Message=[Auto stop parking process started.], EmailAddress=[], Method=[Execute], LineNumber=[54] 
2018-12-31 11:42:30.6914||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parking with the parkingId: 2], EmailAddress=[], Method=[Execute], LineNumber=[59] 
2018-12-31 11:42:30.7095||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the parkingLotId: 1], EmailAddress=[], Method=[Execute], LineNumber=[64] 
2018-12-31 11:42:30.7095||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[], Method=[Get], LineNumber=[50] 
2018-12-31 11:42:30.7201||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[], Method=[Get], LineNumber=[56] 
2018-12-31 11:42:30.7201||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[], Method=[Get], LineNumber=[66] 
2018-12-31 11:42:30.7389||DEBUG|Components.Services.Implementation.Logging|Message=[Parking vendor index is: 0], EmailAddress=[], Method=[Execute], LineNumber=[70] 
2018-12-31 11:42:30.7389||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user card information with the cardId: 1], EmailAddress=[], Method=[Execute], LineNumber=[72] 
2018-12-31 11:42:30.7389||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user card with the cardId: 1], EmailAddress=[], Method=[Get], LineNumber=[128] 
2018-12-31 11:42:30.7502||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user setting with the mobileNumber: +923028417241], EmailAddress=[], Method=[Execute], LineNumber=[77] 
2018-12-31 11:42:30.7502||DEBUG|Components.Services.Implementation.Logging|Message=[Getting user profile infomation with the mobileNumber: +923028417241], EmailAddress=[], Method=[Execute], LineNumber=[82] 
2018-12-31 11:42:30.7706||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the device information with the mobileNumber: +923028417241], EmailAddress=[], Method=[Execute], LineNumber=[87] 
2018-12-31 11:42:30.7812||DEBUG|Components.Services.Implementation.Logging|Message=[Stop Time: 12/31/2018 6:42:19 AM], EmailAddress=[], Method=[Execute], LineNumber=[96] 
2018-12-31 11:42:30.7812||DEBUG|Components.Services.Implementation.Logging|Message=[Total seconds is: 60], EmailAddress=[], Method=[Execute], LineNumber=[98] 
2018-12-31 11:42:30.7812||DEBUG|Components.Services.Implementation.Logging|Message=[Going to deposit the amount with the cardNumber: 1000-0000-0000-0008], EmailAddress=[], Method=[Execute], LineNumber=[112] 
2018-12-31 11:42:30.8138||DEBUG|Components.Services.Implementation.Logging|Message=[Going to deposit the initial payment.], EmailAddress=[], Method=[_GetInitialParkingPaymentModel], LineNumber=[119] 
2018-12-31 11:42:32.4517||DEBUG|Components.Services.Implementation.Logging|Message=[Initial payment deposited.], EmailAddress=[], Method=[_GetInitialParkingPaymentModel], LineNumber=[135] 
2018-12-31 11:42:32.4594||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the authorize payment url.], EmailAddress=[], Method=[_GetParkingAuthorizeUrl], LineNumber=[165] 
2018-12-31 11:42:33.2712||DEBUG|Components.Services.Implementation.Logging|Message=[Authorize payment url fetched.], EmailAddress=[], Method=[_GetParkingAuthorizeUrl], LineNumber=[180] 
2018-12-31 11:42:33.2812||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the session from the quickpay.], EmailAddress=[], Method=[_GetPaidParkingSession], LineNumber=[187] 
2018-12-31 11:42:35.6920||DEBUG|Components.Services.Implementation.Logging|Message=[Session fetched from the quickpay.], EmailAddress=[], Method=[_GetPaidParkingSession], LineNumber=[199] 
2018-12-31 11:42:35.6920||DEBUG|Components.Services.Implementation.Logging|Message=[Going to process the card for the payment.], EmailAddress=[], Method=[_ProcessCard], LineNumber=[207] 
2018-12-31 11:42:37.3714||DEBUG|Components.Services.Implementation.Logging|Message=[Processed card for the payment has been successfully done.], EmailAddress=[], Method=[_ProcessCard], LineNumber=[227] 
2018-12-31 11:42:37.3714||DEBUG|Components.Services.Implementation.Logging|Message=[Going to get the payment details.], EmailAddress=[], Method=[_GetPaymentDetails], LineNumber=[142] 
2018-12-31 11:42:38.0258||DEBUG|Components.Services.Implementation.Logging|Message=[Payment details fetched.], EmailAddress=[], Method=[_GetPaymentDetails], LineNumber=[159] 
2018-12-31 11:42:38.0258||DEBUG|Components.Services.Implementation.Logging|Message=[Updating the parking status to stop with the parkingId: 2], EmailAddress=[], Method=[Execute], LineNumber=[120] 
2018-12-31 11:42:38.0953||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking with the parkingId: 2], EmailAddress=[], Method=[Execute], LineNumber=[123] 
2018-12-31 11:42:38.1267||DEBUG|Components.Services.Implementation.Logging|Message=[Notification Url is: https://onesignal.com/api/v1/notifications], EmailAddress=[], Method=[RegisterPushNotification], LineNumber=[38] 
2018-12-31 11:42:38.1267||DEBUG|Components.Services.Implementation.Logging|Message=[App Id is: d9fb09ac-446b-46f2-bd8b-d9aa8f4f78c8], EmailAddress=[], Method=[RegisterPushNotification], LineNumber=[39] 
2018-12-31 11:42:38.1267||DEBUG|Components.Services.Implementation.Logging|Message=[Sender Id: 2f57ffac-813e-4c06-85f3-f6f258e57d85], EmailAddress=[], Method=[RegisterPushNotification], LineNumber=[40] 
2018-12-31 11:42:39.0766||DEBUG|Components.Services.Implementation.Logging|Message=[Push is send to one signal], EmailAddress=[], Method=[RegisterPushNotification], LineNumber=[63] 
2018-12-31 11:42:39.0776||DEBUG|Components.Services.Implementation.Logging|Message=[Json is received from the server], EmailAddress=[], Method=[RegisterPushNotification], LineNumber=[65] 
2018-12-31 11:42:39.0776||DEBUG|Components.Services.Implementation.Logging|Message=[Successfully deserialized the json], EmailAddress=[], Method=[RegisterPushNotification], LineNumber=[68] 
2018-12-31 11:42:39.0776||DEBUG|Components.Services.Implementation.Logging|Message=[Auto stop parking process ended.], EmailAddress=[], Method=[Execute], LineNumber=[182] 
2018-12-31 11:42:39.0776||DEBUG|Quartz.Core.JobRunShell|Trigger instruction : DeleteTrigger 
2018-12-31 11:42:39.1015||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' is desired by: 5d071944-b472-4be0-9e41-3a4570804fbb 
2018-12-31 11:42:39.1015||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' is being obtained: 5d071944-b472-4be0-9e41-3a4570804fbb 
2018-12-31 11:42:39.1015||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' given to: 5d071944-b472-4be0-9e41-3a4570804fbb 
2018-12-31 11:42:39.1178||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_STATE, NEXT_FIRE_TIME, JOB_NAME, JOB_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup 
2018-12-31 11:42:39.1492||DEBUG|Quartz.SQL|Prepared SQL: DELETE FROM QRTZ_SIMPLE_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup 
2018-12-31 11:42:39.1721||DEBUG|Quartz.SQL|Prepared SQL: DELETE FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup 
2018-12-31 11:42:39.1915||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup 
2018-12-31 11:42:39.2113||DEBUG|Quartz.SQL|Prepared SQL: DELETE FROM QRTZ_JOB_DETAILS WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup 
2018-12-31 11:42:39.2113||DEBUG|Quartz.Impl.AdoJobStore.StdAdoDelegate|Deleting job: DEFAULT.AutoStopParking2 
2018-12-31 11:42:39.2279||DEBUG|Quartz.SQL|Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @state WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup AND TRIGGER_STATE = @oldState 
2018-12-31 11:42:39.2495||DEBUG|Quartz.SQL|Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @state WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup AND TRIGGER_STATE = @oldState 
2018-12-31 11:42:39.2736||DEBUG|Quartz.SQL|Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND ENTRY_ID = @triggerEntryId 
2018-12-31 11:42:39.2921||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' returned by: 5d071944-b472-4be0-9e41-3a4570804fbb 
2018-12-31 11:42:39.2921||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:42:39.3101||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 11:42:51.4588||DEBUG|Quartz.Impl.AdoJobStore.MisfireHandler|Scanning for misfires... 
2018-12-31 11:42:51.4588||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 
2018-12-31 11:42:51.4802||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:42:51.4979||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 11:42:51.5016||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 11:43:06.4715||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:43:06.4990||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 11:43:19.6780||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:43:19.7097||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 11:43:33.8653||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:43:33.8931||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 11:43:46.2378||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:43:46.2587||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 11:43:51.4802||DEBUG|Quartz.Impl.AdoJobStore.MisfireHandler|Scanning for misfires... 
2018-12-31 11:43:51.4831||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 
2018-12-31 11:43:51.4831||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 11:44:00.0699||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:44:00.0982||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 11:44:12.4224||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:44:12.4406||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 11:44:27.3200||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:44:27.3480||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 11:44:39.6834||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:44:39.7003||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 11:44:51.4931||DEBUG|Quartz.Impl.AdoJobStore.MisfireHandler|Scanning for misfires... 
2018-12-31 11:44:51.4931||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 
2018-12-31 11:44:51.5174||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 11:44:53.8313||DEBUG|Components.Services.Implementation.Logging|Message=[Start parking process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[92] 
2018-12-31 11:44:53.8313||DEBUG|Components.Services.Implementation.Logging|Message=[Getting device information with the mobileNumber: +923028417241], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[104] 
2018-12-31 11:44:53.8521||DEBUG|Components.Services.Implementation.Logging|Message=[Getting user setting with the mobileNumber: +923028417241], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[109] 
2018-12-31 11:44:53.8731||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:44:53.8759||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information: +923028417241], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[114] 
2018-12-31 11:44:53.9142||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 11:44:53.9142||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parking lot with the Id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[119] 
2018-12-31 11:44:53.9142||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 11:44:53.9462||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 11:44:53.9672||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 11:44:53.9872||DEBUG|Components.Services.Implementation.Logging|Message=[Parking vendor index is: 0], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[125] 
2018-12-31 11:44:53.9872||DEBUG|Components.Services.Implementation.Logging|Message=[Getting user card information with the cardId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[127] 
2018-12-31 11:44:53.9872||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user card with the cardId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[128] 
2018-12-31 11:44:54.0092||DEBUG|Components.Services.Implementation.Logging|Message=[Getting vehicle information with the mobileNumber: +923028417241], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[132] 
2018-12-31 11:44:54.0310||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parking information with the parkingId: 0], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[138] 
2018-12-31 11:44:54.0587||DEBUG|Components.Services.Implementation.Logging|Message=[Parking total price is of: 10], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[207] 
2018-12-31 11:44:54.0587||DEBUG|Components.Services.Implementation.Logging|Message=[Calculated price of minutes 1 is 0.1666666666666666666666666667: ], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[210] 
2018-12-31 11:44:54.0587||DEBUG|Components.Services.Implementation.Logging|Message=[Adding the new parking in the system.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[261] 
2018-12-31 11:44:54.1496||DEBUG|Components.Services.Implementation.Logging|Message=[Background service register event.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[266] 
2018-12-31 11:44:54.1496||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' is desired by: a25bbc3e-4616-48e5-b513-f2c7c527133b 
2018-12-31 11:44:54.1496||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' is being obtained: a25bbc3e-4616-48e5-b513-f2c7c527133b 
2018-12-31 11:44:54.1496||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' given to: a25bbc3e-4616-48e5-b513-f2c7c527133b 
2018-12-31 11:44:54.1554||DEBUG|Quartz.SQL|Prepared SQL: SELECT JOB_NAME FROM QRTZ_JOB_DETAILS WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup 
2018-12-31 11:44:54.1769||DEBUG|Components.Services.Implementation.Logging|Message=[Start parking process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[290] 
2018-12-31 11:44:54.1988||DEBUG|Quartz.SQL|Prepared SQL: INSERT INTO QRTZ_JOB_DETAILS (SCHED_NAME, JOB_NAME, JOB_GROUP, DESCRIPTION, JOB_CLASS_NAME, IS_DURABLE, IS_NONCONCURRENT, IS_UPDATE_DATA, REQUESTS_RECOVERY, JOB_DATA)  VALUES('QuartzScheduler', @jobName, @jobGroup, @jobDescription, @jobType, @jobDurable, @jobVolatile, @jobStateful, @jobRequestsRecovery, @jobDataMap) 
2018-12-31 11:44:54.2365||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup 
2018-12-31 11:44:54.2514||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_GROUP FROM QRTZ_PAUSED_TRIGGER_GRPS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_GROUP = @triggerGroup 
2018-12-31 11:44:54.2651||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_GROUP FROM QRTZ_PAUSED_TRIGGER_GRPS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_GROUP = @triggerGroup 
2018-12-31 11:44:54.2804||DEBUG|Quartz.SQL|Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup 
2018-12-31 11:44:54.2970||DEBUG|Quartz.SQL|Prepared SQL: INSERT INTO QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP, JOB_NAME, JOB_GROUP, DESCRIPTION, NEXT_FIRE_TIME, PREV_FIRE_TIME, TRIGGER_STATE, TRIGGER_TYPE, START_TIME, END_TIME, CALENDAR_NAME, MISFIRE_INSTR, JOB_DATA, PRIORITY)  
                        VALUES('QuartzScheduler', @triggerName, @triggerGroup, @triggerJobName, @triggerJobGroup, @triggerDescription, @triggerNextFireTime, @triggerPreviousFireTime, @triggerState, @triggerType, @triggerStartTime, @triggerEndTime, @triggerCalendarName, @triggerMisfireInstruction, @triggerJobJobDataMap, @triggerPriority) 
2018-12-31 11:44:54.3132||DEBUG|Quartz.SQL|Prepared SQL: INSERT INTO QRTZ_SIMPLE_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP, REPEAT_COUNT, REPEAT_INTERVAL, TIMES_TRIGGERED)  VALUES('QuartzScheduler', @triggerName, @triggerGroup, @triggerRepeatCount, @triggerRepeatInterval, @triggerTimesTriggered) 
2018-12-31 11:44:54.3132||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' returned by: a25bbc3e-4616-48e5-b513-f2c7c527133b 
2018-12-31 11:44:54.3132||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:44:54.3432||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 11:45:07.1917||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:45:07.2192||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 11:45:21.3781||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:45:21.4063||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 11:45:35.0016||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:45:35.0319||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 11:45:49.2388||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:45:49.2659||DEBUG|Quartz.SQL|Prepared SQL: SELECT JOB_NAME,JOB_GROUP,DESCRIPTION,NEXT_FIRE_TIME,PREV_FIRE_TIME,TRIGGER_TYPE,START_TIME,END_TIME,CALENDAR_NAME,MISFIRE_INSTR,PRIORITY,JOB_DATA FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup 
2018-12-31 11:45:49.2889||DEBUG|Quartz.SQL|Prepared SQL: SELECT * FROM QRTZ_SIMPLE_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup 
2018-12-31 11:45:49.3023||DEBUG|Quartz.SQL|Prepared SQL: SELECT JOB_NAME,JOB_GROUP,DESCRIPTION,JOB_CLASS_NAME,IS_DURABLE,REQUESTS_RECOVERY,JOB_DATA FROM QRTZ_JOB_DETAILS WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup 
2018-12-31 11:45:49.3165||DEBUG|Quartz.SQL|Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup AND TRIGGER_STATE = @oldState AND NEXT_FIRE_TIME = @nextFireTime 
2018-12-31 11:45:49.3352||DEBUG|Quartz.SQL|Prepared SQL: INSERT INTO QRTZ_FIRED_TRIGGERS (SCHED_NAME, ENTRY_ID, TRIGGER_NAME, TRIGGER_GROUP, INSTANCE_NAME, FIRED_TIME, SCHED_TIME, STATE, JOB_NAME, JOB_GROUP, IS_NONCONCURRENT, REQUESTS_RECOVERY, PRIORITY) VALUES('QuartzScheduler', @triggerEntryId, @triggerName, @triggerGroup, @triggerInstanceName, @triggerFireTime, @triggerScheduledTime, @triggerState, @triggerJobName, @triggerJobGroup, @triggerJobStateful, @triggerJobRequestsRecovery, @triggerPriority) 
2018-12-31 11:45:49.3476||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 1 triggers 
2018-12-31 11:45:51.4997||DEBUG|Quartz.Impl.AdoJobStore.MisfireHandler|Scanning for misfires... 
2018-12-31 11:45:51.4997||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 
2018-12-31 11:45:51.5234||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 11:46:04.1513||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' is desired by: a2e314d4-165c-413d-9e06-a6be7e03a2f9 
2018-12-31 11:46:04.1513||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' is being obtained: a2e314d4-165c-413d-9e06-a6be7e03a2f9 
2018-12-31 11:46:04.1601||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' given to: a2e314d4-165c-413d-9e06-a6be7e03a2f9 
2018-12-31 11:46:04.1722||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_STATE FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup 
2018-12-31 11:46:04.1897||DEBUG|Quartz.SQL|Prepared SQL: SELECT JOB_NAME,JOB_GROUP,DESCRIPTION,JOB_CLASS_NAME,IS_DURABLE,REQUESTS_RECOVERY,JOB_DATA FROM QRTZ_JOB_DETAILS WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup 
2018-12-31 11:46:04.2034||DEBUG|Quartz.SQL|Prepared SQL: UPDATE QRTZ_FIRED_TRIGGERS SET INSTANCE_NAME = @instanceName, FIRED_TIME = @firedTime, SCHED_TIME = @scheduledTime, STATE = @entryState, JOB_NAME = @jobName, JOB_GROUP = @jobGroup, IS_NONCONCURRENT = @isNonConcurrent, REQUESTS_RECOVERY = @requestsRecover WHERE SCHED_NAME = 'QuartzScheduler' AND ENTRY_ID = @entryId 
2018-12-31 11:46:04.2187||DEBUG|Quartz.SQL|Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @state WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup AND TRIGGER_STATE = @oldState 
2018-12-31 11:46:04.2391||DEBUG|Quartz.SQL|Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @state WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup AND TRIGGER_STATE = @oldState 
2018-12-31 11:46:04.2593||DEBUG|Quartz.SQL|Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @state WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup AND TRIGGER_STATE = @oldState 
2018-12-31 11:46:04.2793||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup 
2018-12-31 11:46:04.2912||DEBUG|Quartz.SQL|Prepared SQL: UPDATE QRTZ_TRIGGERS SET JOB_NAME = @triggerJobName, JOB_GROUP = @triggerJobGroup, DESCRIPTION = @triggerDescription, NEXT_FIRE_TIME = @triggerNextFireTime, PREV_FIRE_TIME = @triggerPreviousFireTime, 
                        TRIGGER_STATE = @triggerState, TRIGGER_TYPE = @triggerType, START_TIME = @triggerStartTime, END_TIME = @triggerEndTime, CALENDAR_NAME = @triggerCalendarName, MISFIRE_INSTR = @triggerMisfireInstruction, PRIORITY = @triggerPriority
                    WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup 
2018-12-31 11:46:04.3061||DEBUG|Quartz.SQL|Prepared SQL: UPDATE QRTZ_SIMPLE_TRIGGERS SET REPEAT_COUNT = @triggerRepeatCount, REPEAT_INTERVAL = @triggerRepeatInterval, TIMES_TRIGGERED = @triggerTimesTriggered WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup 
2018-12-31 11:46:04.3179||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' returned by: a2e314d4-165c-413d-9e06-a6be7e03a2f9 
2018-12-31 11:46:04.3179||DEBUG|Quartz.Core.JobRunShell|Calling Execute on job DEFAULT.AutoStopParking1 
2018-12-31 11:46:04.3179||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:46:04.3389||DEBUG|Components.Services.Implementation.Logging|Message=[Auto stop parking process started.], EmailAddress=[], Method=[Execute], LineNumber=[54] 
2018-12-31 11:46:04.3389||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parking with the parkingId: 1], EmailAddress=[], Method=[Execute], LineNumber=[59] 
2018-12-31 11:46:04.3497||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 11:46:04.3497||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the parkingLotId: 1], EmailAddress=[], Method=[Execute], LineNumber=[64] 
2018-12-31 11:46:04.3497||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[], Method=[Get], LineNumber=[50] 
2018-12-31 11:46:04.3616||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[], Method=[Get], LineNumber=[56] 
2018-12-31 11:46:04.3616||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[], Method=[Get], LineNumber=[66] 
2018-12-31 11:46:04.3801||DEBUG|Components.Services.Implementation.Logging|Message=[Parking vendor index is: 0], EmailAddress=[], Method=[Execute], LineNumber=[70] 
2018-12-31 11:46:04.3801||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user card information with the cardId: 1], EmailAddress=[], Method=[Execute], LineNumber=[72] 
2018-12-31 11:46:04.3801||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user card with the cardId: 1], EmailAddress=[], Method=[Get], LineNumber=[128] 
2018-12-31 11:46:04.3919||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user setting with the mobileNumber: +923028417241], EmailAddress=[], Method=[Execute], LineNumber=[77] 
2018-12-31 11:46:04.3919||DEBUG|Components.Services.Implementation.Logging|Message=[Getting user profile infomation with the mobileNumber: +923028417241], EmailAddress=[], Method=[Execute], LineNumber=[82] 
2018-12-31 11:46:04.4112||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the device information with the mobileNumber: +923028417241], EmailAddress=[], Method=[Execute], LineNumber=[87] 
2018-12-31 11:46:04.4203||DEBUG|Components.Services.Implementation.Logging|Message=[Stop Time: 12/31/2018 6:45:53 AM], EmailAddress=[], Method=[Execute], LineNumber=[96] 
2018-12-31 11:46:04.4203||DEBUG|Components.Services.Implementation.Logging|Message=[Total seconds is: 60], EmailAddress=[], Method=[Execute], LineNumber=[98] 
2018-12-31 11:46:04.4203||DEBUG|Components.Services.Implementation.Logging|Message=[Going to deposit the amount with the cardNumber: 1000-0000-0000-0008], EmailAddress=[], Method=[Execute], LineNumber=[112] 
2018-12-31 11:46:04.4203||DEBUG|Components.Services.Implementation.Logging|Message=[Going to deposit the initial payment.], EmailAddress=[], Method=[_GetInitialParkingPaymentModel], LineNumber=[119] 
2018-12-31 11:46:05.6571||DEBUG|Components.Services.Implementation.Logging|Message=[Initial payment deposited.], EmailAddress=[], Method=[_GetInitialParkingPaymentModel], LineNumber=[135] 
2018-12-31 11:46:05.6571||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the authorize payment url.], EmailAddress=[], Method=[_GetParkingAuthorizeUrl], LineNumber=[165] 
2018-12-31 11:46:06.2972||DEBUG|Components.Services.Implementation.Logging|Message=[Authorize payment url fetched.], EmailAddress=[], Method=[_GetParkingAuthorizeUrl], LineNumber=[180] 
2018-12-31 11:46:06.2972||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the session from the quickpay.], EmailAddress=[], Method=[_GetPaidParkingSession], LineNumber=[187] 
2018-12-31 11:46:08.3711||DEBUG|Components.Services.Implementation.Logging|Message=[Session fetched from the quickpay.], EmailAddress=[], Method=[_GetPaidParkingSession], LineNumber=[199] 
2018-12-31 11:46:08.3711||DEBUG|Components.Services.Implementation.Logging|Message=[Going to process the card for the payment.], EmailAddress=[], Method=[_ProcessCard], LineNumber=[207] 
2018-12-31 11:46:09.7093||DEBUG|Components.Services.Implementation.Logging|Message=[Processed card for the payment has been successfully done.], EmailAddress=[], Method=[_ProcessCard], LineNumber=[227] 
2018-12-31 11:46:09.7093||DEBUG|Components.Services.Implementation.Logging|Message=[Going to get the payment details.], EmailAddress=[], Method=[_GetPaymentDetails], LineNumber=[142] 
2018-12-31 11:46:10.6535||DEBUG|Components.Services.Implementation.Logging|Message=[Payment details fetched.], EmailAddress=[], Method=[_GetPaymentDetails], LineNumber=[159] 
2018-12-31 11:46:10.6535||DEBUG|Components.Services.Implementation.Logging|Message=[Updating the parking status to stop with the parkingId: 1], EmailAddress=[], Method=[Execute], LineNumber=[120] 
2018-12-31 11:46:10.6749||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking with the parkingId: 1], EmailAddress=[], Method=[Execute], LineNumber=[123] 
2018-12-31 11:46:10.6924||DEBUG|Components.Services.Implementation.Logging|Message=[Notification Url is: https://onesignal.com/api/v1/notifications], EmailAddress=[], Method=[RegisterPushNotification], LineNumber=[38] 
2018-12-31 11:46:10.6924||DEBUG|Components.Services.Implementation.Logging|Message=[App Id is: d9fb09ac-446b-46f2-bd8b-d9aa8f4f78c8], EmailAddress=[], Method=[RegisterPushNotification], LineNumber=[39] 
2018-12-31 11:46:10.6924||DEBUG|Components.Services.Implementation.Logging|Message=[Sender Id: 2f57ffac-813e-4c06-85f3-f6f258e57d85], EmailAddress=[], Method=[RegisterPushNotification], LineNumber=[40] 
2018-12-31 11:46:11.5765||DEBUG|Components.Services.Implementation.Logging|Message=[Push is send to one signal], EmailAddress=[], Method=[RegisterPushNotification], LineNumber=[63] 
2018-12-31 11:46:11.5774||DEBUG|Components.Services.Implementation.Logging|Message=[Json is received from the server], EmailAddress=[], Method=[RegisterPushNotification], LineNumber=[65] 
2018-12-31 11:46:11.5774||DEBUG|Components.Services.Implementation.Logging|Message=[Successfully deserialized the json], EmailAddress=[], Method=[RegisterPushNotification], LineNumber=[68] 
2018-12-31 11:46:11.5774||DEBUG|Components.Services.Implementation.Logging|Message=[Goint to send the parking receipt with the parkingId: 1], EmailAddress=[], Method=[Execute], LineNumber=[154] 
2018-12-31 11:46:11.5774||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the mobileNumber: +923028417241], EmailAddress=[], Method=[Execute], LineNumber=[155] 
2018-12-31 11:46:11.5774||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking report with the parkingId: 1], EmailAddress=[], Method=[Execute], LineNumber=[163] 
2018-12-31 11:46:11.6226||DEBUG|Components.Services.Implementation.Logging|Message=[Going to convert the parking report to pdf with the parkingId:1], EmailAddress=[], Method=[Execute], LineNumber=[173] 
2018-12-31 11:46:15.3700||DEBUG|Components.Services.Implementation.Logging|Message=[Auto stop parking process ended.], EmailAddress=[], Method=[Execute], LineNumber=[182] 
2018-12-31 11:46:15.3700||DEBUG|Quartz.Core.JobRunShell|Trigger instruction : DeleteTrigger 
2018-12-31 11:46:15.3700||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' is desired by: 3b6754af-09c9-4183-a296-cda616190cac 
2018-12-31 11:46:15.3700||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' is being obtained: 3b6754af-09c9-4183-a296-cda616190cac 
2018-12-31 11:46:15.3741||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' given to: 3b6754af-09c9-4183-a296-cda616190cac 
2018-12-31 11:46:15.3741||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_STATE, NEXT_FIRE_TIME, JOB_NAME, JOB_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup 
2018-12-31 11:46:15.3741||DEBUG|Quartz.SQL|Prepared SQL: DELETE FROM QRTZ_SIMPLE_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup 
2018-12-31 11:46:15.4030||DEBUG|Quartz.SQL|Prepared SQL: DELETE FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup 
2018-12-31 11:46:15.4202||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup 
2018-12-31 11:46:15.4324||DEBUG|Quartz.SQL|Prepared SQL: DELETE FROM QRTZ_JOB_DETAILS WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup 
2018-12-31 11:46:15.4324||DEBUG|Quartz.Impl.AdoJobStore.StdAdoDelegate|Deleting job: DEFAULT.AutoStopParking1 
2018-12-31 11:46:15.4454||DEBUG|Quartz.SQL|Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @state WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup AND TRIGGER_STATE = @oldState 
2018-12-31 11:46:15.4575||DEBUG|Quartz.SQL|Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @state WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup AND TRIGGER_STATE = @oldState 
2018-12-31 11:46:15.4772||DEBUG|Quartz.SQL|Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND ENTRY_ID = @triggerEntryId 
2018-12-31 11:46:15.4885||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' returned by: 3b6754af-09c9-4183-a296-cda616190cac 
2018-12-31 11:46:15.4885||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:46:15.5043||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 11:46:28.9334||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:46:28.9684||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 11:46:42.7315||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 11:46:42.7678||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:11:18.1947||INFO|Quartz.Util.DBConnectionManager|Registering datasource 'SR-53\MSSQL' with db provider: 'Quartz.Impl.AdoJobStore.Common.DbProvider' 
2018-12-31 19:11:18.2674||INFO|Quartz.Impl.StdSchedulerFactory|Using object serializer: Quartz.Simpl.JsonObjectSerializer, Quartz.Serialization.Json 
2018-12-31 19:11:18.3014||DEBUG|Quartz.Simpl.TaskSchedulingThreadPool|TaskSchedulingThreadPool configured with max concurrency of 10 and TaskScheduler ThreadPoolTaskScheduler. 
2018-12-31 19:11:18.4682||INFO|Quartz.Core.SchedulerSignalerImpl|Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl 
2018-12-31 19:11:18.5365||INFO|Quartz.Core.QuartzScheduler|Quartz Scheduler v.3.0.7.0 created. 
2018-12-31 19:11:18.5488||DEBUG|Quartz.Impl.AdoJobStore.StdAdoDelegate|Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.SimpleTriggerPersistenceDelegate 
2018-12-31 19:11:18.5488||DEBUG|Quartz.Impl.AdoJobStore.StdAdoDelegate|Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CronTriggerPersistenceDelegate 
2018-12-31 19:11:18.5488||DEBUG|Quartz.Impl.AdoJobStore.StdAdoDelegate|Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CalendarIntervalTriggerPersistenceDelegate 
2018-12-31 19:11:18.5488||DEBUG|Quartz.Impl.AdoJobStore.StdAdoDelegate|Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.DailyTimeIntervalTriggerPersistenceDelegate 
2018-12-31 19:11:18.5488||INFO|Quartz.Impl.AdoJobStore.JobStoreTX|Using thread monitor-based data access locking (synchronization). 
2018-12-31 19:11:18.5695||INFO|Quartz.Impl.AdoJobStore.JobStoreTX|JobStoreTX initialized. 
2018-12-31 19:11:18.5695||INFO|Quartz.Core.QuartzScheduler|Scheduler meta-data: Quartz Scheduler (v3.0.7.0) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'Quartz.Core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'Quartz.Simpl.DefaultThreadPool' - with 10 threads.
  Using job-store 'Quartz.Impl.AdoJobStore.JobStoreTX' - which supports persistence. and is not clustered.
 
2018-12-31 19:11:18.5695||INFO|Quartz.Impl.StdSchedulerFactory|Quartz scheduler 'QuartzScheduler' initialized 
2018-12-31 19:11:18.5695||INFO|Quartz.Impl.StdSchedulerFactory|Quartz scheduler version: 3.0.7.0 
2018-12-31 19:11:18.5785||INFO|Quartz.Core.QuartzScheduler|JobFactory set to: BackgroundSchedulers.JobFactory 
2018-12-31 19:11:18.6046||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' is desired by: 95e6ee34-7dc1-44d7-b085-4b2c5eb7dae3 
2018-12-31 19:11:18.6046||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' is being obtained: 95e6ee34-7dc1-44d7-b085-4b2c5eb7dae3 
2018-12-31 19:11:18.6046||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' given to: 95e6ee34-7dc1-44d7-b085-4b2c5eb7dae3 
2018-12-31 19:11:18.7914||DEBUG|Quartz.SQL|Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2) 
2018-12-31 19:11:18.8995||DEBUG|Quartz.SQL|Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2) 
2018-12-31 19:11:18.9147||INFO|Quartz.Impl.AdoJobStore.JobStoreTX|Freed 0 triggers from 'acquired' / 'blocked' state. 
2018-12-31 19:11:18.9249||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:11:18.9530||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 19:11:18.9530||DEBUG|Quartz.SQL|Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND INSTANCE_NAME = @instanceName AND REQUESTS_RECOVERY = @requestsRecovery 
2018-12-31 19:11:18.9807||INFO|Quartz.Impl.AdoJobStore.JobStoreTX|Recovering 0 jobs that were in-progress at the time of the last shut-down. 
2018-12-31 19:11:18.9807||INFO|Quartz.Impl.AdoJobStore.JobStoreTX|Recovery complete. 
2018-12-31 19:11:18.9883||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state 
2018-12-31 19:11:19.0041||INFO|Quartz.Impl.AdoJobStore.JobStoreTX|Removed 0 'complete' triggers. 
2018-12-31 19:11:19.0041||DEBUG|Quartz.SQL|Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' 
2018-12-31 19:11:19.0219||INFO|Quartz.Impl.AdoJobStore.JobStoreTX|Removed 0 stale fired job entries. 
2018-12-31 19:11:19.0219||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' returned by: 95e6ee34-7dc1-44d7-b085-4b2c5eb7dae3 
2018-12-31 19:11:19.0471||INFO|Quartz.Core.QuartzScheduler|Scheduler QuartzScheduler_$_NON_CLUSTERED started. 
2018-12-31 19:11:19.0471||DEBUG|Quartz.Impl.AdoJobStore.MisfireHandler|Scanning for misfires... 
2018-12-31 19:11:19.0744||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 
2018-12-31 19:11:19.1104||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:11:19.1254||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 19:11:19.1436||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:11:22.8581||INFO|Quartz.Core.QuartzScheduler|JobFactory set to: BackgroundSchedulers.JobFactory 
2018-12-31 19:11:22.8581||INFO|Quartz.Core.QuartzScheduler|Scheduler QuartzScheduler_$_NON_CLUSTERED started. 
2018-12-31 19:11:22.8581||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:11:22.8758||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:11:22.9943||DEBUG|Components.Services.Implementation.Logging|Message=[Login process started.], EmailAddress=[], Method=[Login], LineNumber=[366] 
2018-12-31 19:11:22.9943||DEBUG|Components.Services.Implementation.Logging|Message=[Getting user with the username: +923028417241], EmailAddress=[], Method=[Login], LineNumber=[368] 
2018-12-31 19:11:23.5241||DEBUG|Components.Services.Implementation.Logging|Message=[Password sign for the user with the username: +923028417241], EmailAddress=[], Method=[Login], LineNumber=[372] 
2018-12-31 19:11:23.5241||DEBUG|Components.Services.Implementation.Logging|Message=[Getting roles of the user.], EmailAddress=[], Method=[Login], LineNumber=[376] 
2018-12-31 19:11:23.6131||DEBUG|Components.Services.Implementation.Logging|Message=[Generating token of user with the username: +923028417241 and role: User], EmailAddress=[], Method=[Login], LineNumber=[378] 
2018-12-31 19:11:23.6384||DEBUG|Components.Services.Implementation.Logging|Message=[Login process ended.], EmailAddress=[], Method=[Login], LineNumber=[389] 
2018-12-31 19:11:37.6443||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:11:37.6657||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:11:40.9780||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:11:40.9780||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:11:40.9780||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:11:41.2164||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:11:41.2392||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:11:41.2677||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:11:41.2951||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:11:41.3193||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 10,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:11:41.3193||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:11:50.3878||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:11:50.4138||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:11:50.9821||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:11:50.9848||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:11:50.9848||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:11:51.0062||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:11:51.0304||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:11:51.0519||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:11:51.0722||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:11:51.0722||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 20,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:11:51.0722||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:11:55.8425||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:11:55.8425||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:11:55.8425||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:11:55.8619||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:11:55.8807||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:11:55.8995||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:11:55.9165||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:11:55.9165||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 30,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:11:55.9165||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:12:02.4934||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:12:02.5303||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:12:04.1137||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:12:04.1137||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:12:04.1137||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:12:04.1425||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:12:04.1608||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:12:04.1796||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:12:04.1978||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:12:04.1978||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 20,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:12:04.1978||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:12:07.5548||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:12:07.5548||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:12:07.5548||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:12:07.5759||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:12:07.6013||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:12:07.6261||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:12:07.6467||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:12:07.6467||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 20,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:12:07.6467||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:12:15.4573||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:12:15.4784||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:12:19.0535||DEBUG|Quartz.Impl.AdoJobStore.MisfireHandler|Scanning for misfires... 
2018-12-31 19:12:19.0535||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 
2018-12-31 19:12:19.0721||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 19:12:21.0263||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:12:21.0263||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:12:21.0263||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:12:21.0450||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:12:21.0618||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:12:21.0815||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:12:21.0984||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:12:21.0984||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 20,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:12:21.0984||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:12:25.7083||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:12:25.7083||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:12:25.7083||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:12:25.7330||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:12:25.7532||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:12:25.7719||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:12:25.7895||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:12:25.7895||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 20,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:12:25.7895||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:12:28.1046||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:12:28.1320||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:12:40.7853||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:12:40.7853||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:12:40.7853||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:12:40.8064||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:12:40.8281||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:12:40.8586||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:12:40.8767||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:12:40.8767||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 20,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:12:40.8767||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:12:41.5529||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:12:41.5853||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:12:44.0156||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:12:44.0156||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:12:44.0156||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:12:44.0455||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:12:44.0674||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:12:44.0857||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:12:44.1027||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:12:44.1027||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 20,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:12:44.1027||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:12:48.2098||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:12:48.2098||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:12:48.2185||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:12:48.2371||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:12:48.2562||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:12:48.2762||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:12:48.2952||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:12:48.2968||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 20,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:12:48.2968||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:12:51.4910||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:12:51.4910||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:12:51.4910||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:12:51.5102||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:12:51.5303||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:12:51.5506||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:12:51.5726||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:12:51.5726||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 20,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:12:51.5726||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:12:54.4191||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:12:54.4459||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:12:55.7156||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:12:55.7156||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:12:55.7179||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:12:55.7360||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:12:55.7521||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:12:55.7686||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:12:55.7846||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:12:55.7846||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 20,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:12:55.7846||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:13:07.5175||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:13:07.5498||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:13:10.9272||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:13:10.9272||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:13:10.9272||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:13:10.9485||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:13:10.9679||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:13:10.9883||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:13:11.0066||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:13:11.0066||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 30,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:13:11.0066||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:13:19.0535||DEBUG|Quartz.Impl.AdoJobStore.MisfireHandler|Scanning for misfires... 
2018-12-31 19:13:19.0535||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 
2018-12-31 19:13:19.0788||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 19:13:19.9642||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:13:19.9642||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:13:19.9642||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:13:19.9836||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:13:20.0018||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:13:20.0200||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:13:20.0390||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:13:20.0390||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 30,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:13:20.0390||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:13:20.6585||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:13:20.6898||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:13:29.1522||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:13:29.1522||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:13:29.1522||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:13:29.1771||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:13:29.1955||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:13:29.2138||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:13:29.2322||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:13:42.5253||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:13:59.7137||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:14:07.1738||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 30,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:14:07.1738||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:14:19.0624||DEBUG|Quartz.Impl.AdoJobStore.MisfireHandler|Scanning for misfires... 
2018-12-31 19:14:19.0624||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 
2018-12-31 19:14:19.0878||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 19:14:20.3495||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:14:20.3495||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:14:20.3495||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:14:20.3771||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:14:20.3942||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:14:20.4118||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:14:20.4293||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:14:20.4293||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 30,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:14:20.4293||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:14:20.9512||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:14:20.9813||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:14:33.9545||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:14:33.9751||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:14:48.0608||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:14:48.0784||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:15:02.3007||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:15:02.3286||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:15:16.6170||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:15:16.6455||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:15:19.0669||DEBUG|Quartz.Impl.AdoJobStore.MisfireHandler|Scanning for misfires... 
2018-12-31 19:15:19.0669||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 
2018-12-31 19:15:19.0949||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 19:15:31.3691||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:15:31.3872||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:15:31.8879||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:15:31.8879||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:15:31.8900||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:15:31.9083||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:15:31.9261||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:15:31.9444||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:15:31.9619||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:15:31.9619||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 30,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:15:31.9619||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:15:37.4760||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:15:37.4760||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:15:37.4760||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:15:37.4979||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:15:37.5163||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:15:37.5347||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:15:37.5510||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:15:46.4671||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:15:47.0975||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:16:00.5927||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:16:01.6097||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 30,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:16:01.6097||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:16:01.6097||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:16:15.7203||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:16:15.7491||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:16:19.0774||DEBUG|Quartz.Impl.AdoJobStore.MisfireHandler|Scanning for misfires... 
2018-12-31 19:16:19.0774||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 
2018-12-31 19:16:19.1052||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 19:16:28.2836||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:16:28.3181||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:16:42.6536||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:16:42.6776||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:16:56.2525||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:16:56.2694||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:17:09.0535||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:17:09.0710||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:17:12.3233||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:17:12.3233||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:17:12.3233||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:17:12.3550||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:17:12.3756||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:17:12.3946||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:17:12.4134||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:17:14.9227||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 240,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:17:14.9227||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:17:19.0804||DEBUG|Quartz.Impl.AdoJobStore.MisfireHandler|Scanning for misfires... 
2018-12-31 19:17:19.0804||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 
2018-12-31 19:17:19.1076||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 19:17:22.0915||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:17:22.1174||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:17:36.6867||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:17:36.6867||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:17:36.8039||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:17:36.8039||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:17:36.8039||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:17:36.8348||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:17:36.8533||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:17:36.8714||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:17:36.8881||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:17:52.0788||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:17:52.8747||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:18:12.8771||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:18:16.2948||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 240,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:18:16.3019||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:18:16.3019||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:18:19.0815||DEBUG|Quartz.Impl.AdoJobStore.MisfireHandler|Scanning for misfires... 
2018-12-31 19:18:19.0815||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 
2018-12-31 19:18:19.1066||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 19:18:28.7899||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:18:28.8167||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:18:42.0057||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:18:42.0321||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:18:56.0907||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:18:56.1190||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:19:09.7255||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:19:09.7567||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:19:16.5258||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:19:16.5258||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:19:16.5258||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:19:16.5466||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:19:16.5660||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:19:16.5857||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:19:16.6051||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:19:16.6051||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 46,67 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:19:16.6051||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:19:19.0935||DEBUG|Quartz.Impl.AdoJobStore.MisfireHandler|Scanning for misfires... 
2018-12-31 19:19:19.0935||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 
2018-12-31 19:19:19.1172||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 19:19:22.4788||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:19:22.4973||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:19:31.2382||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:19:31.2382||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:19:31.2382||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:19:31.2803||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:19:31.3164||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:19:31.3425||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:19:31.3634||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:19:31.3634||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 50,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:19:31.3634||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:19:34.6913||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:19:34.7181||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:19:40.1618||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:19:40.1618||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:19:40.1618||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:19:40.1962||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:19:40.2149||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:19:40.2339||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:19:40.2509||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:19:40.2509||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 60,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:19:40.2509||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:19:46.0524||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:19:46.0524||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:19:46.0524||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:19:46.0745||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:19:46.0929||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:19:46.1116||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:19:46.1288||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:19:46.1288||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 120,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:19:46.1288||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:19:47.6664||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:19:47.6879||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:19:50.8634||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:19:50.8634||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:19:50.8634||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:19:50.8917||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:19:50.9111||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:19:50.9286||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:19:50.9454||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:19:50.9454||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 166,67 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:19:50.9454||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:19:59.8502||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:19:59.8502||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:19:59.8502||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:19:59.8695||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:19:59.8882||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:19:59.9066||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:19:59.9244||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:19:59.9244||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 200,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:19:59.9244||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:20:00.4048||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:20:00.4048||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:20:03.8016||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:20:03.8016||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:20:03.8016||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:20:03.8229||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:20:03.8417||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:20:03.8620||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:20:03.8815||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:20:03.8815||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 200,17 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:20:03.8815||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:20:14.0539||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:20:14.0750||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:20:19.0945||DEBUG|Quartz.Impl.AdoJobStore.MisfireHandler|Scanning for misfires... 
2018-12-31 19:20:19.0945||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 
2018-12-31 19:20:19.1179||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 19:20:20.5557||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:20:20.5557||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:20:20.5557||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:20:20.5818||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:20:20.6025||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:20:20.6222||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:20:20.6438||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:20:20.6438||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 233,33 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:20:20.6438||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:20:25.8666||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:20:25.8666||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:20:25.8666||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:20:25.8972||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:20:25.9209||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:20:25.9435||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:20:25.9619||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:20:25.9619||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 240,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:20:25.9619||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:20:26.6823||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:20:26.7097||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:20:30.9561||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:20:30.9561||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:20:30.9561||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:20:30.9776||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:20:30.9966||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:20:31.0158||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:20:31.0359||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:20:31.0359||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 296,67 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:20:31.0359||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:20:36.6824||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:20:36.6824||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:20:36.6824||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:20:36.7100||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:20:36.7281||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:20:36.7474||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:20:36.7654||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:20:36.7654||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 296,67 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:20:36.7654||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:20:38.8852||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:20:38.8995||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:20:42.3706||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:20:42.3706||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:20:42.3706||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:20:42.3916||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:20:42.4107||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:20:42.4293||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:20:42.4464||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:20:42.4464||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 310,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:20:42.4464||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:20:46.6956||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:20:46.6956||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:20:46.6956||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:20:46.7156||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:20:46.7342||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:20:46.7532||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:20:46.7711||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:20:46.7711||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 326,67 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:20:46.7711||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:20:52.9501||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:20:52.9774||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:21:07.3812||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:21:07.4108||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:21:19.0936||DEBUG|Quartz.Impl.AdoJobStore.MisfireHandler|Scanning for misfires... 
2018-12-31 19:21:19.0936||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 
2018-12-31 19:21:19.0936||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 19:21:20.4984||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:21:20.5163||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:21:33.6893||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:21:33.7237||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:21:47.2837||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:21:47.3006||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:21:50.4328||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:21:50.4328||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:21:50.4328||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:21:50.4545||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:21:50.4731||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:21:50.4925||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:21:50.5119||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:21:50.5119||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 376,67 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:21:50.5119||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:22:00.1432||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:22:00.1711||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:22:05.3182||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:22:05.3182||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:22:05.3182||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:22:05.3382||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:22:05.3561||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:22:05.3747||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:22:05.3928||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:22:05.3928||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 10,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:22:05.3928||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:22:14.4753||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:22:14.5008||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:22:19.1034||DEBUG|Quartz.Impl.AdoJobStore.MisfireHandler|Scanning for misfires... 
2018-12-31 19:22:19.1034||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 
2018-12-31 19:22:19.1187||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 19:22:28.8401||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:22:28.8580||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:22:43.7147||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:22:43.7474||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:22:55.7682||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:22:55.7854||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:23:03.7926||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:23:03.7926||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:23:03.7926||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:23:03.8142||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:23:03.8340||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:23:03.8548||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:23:03.8738||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:23:04.9992||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 40,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:23:04.9992||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:23:08.9679||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:23:08.9956||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:23:18.6841||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:23:18.6841||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:23:18.6874||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:23:18.7060||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:23:18.7246||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:23:18.7431||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:23:18.7606||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:23:20.6986||DEBUG|Quartz.Impl.AdoJobStore.MisfireHandler|Scanning for misfires... 
2018-12-31 19:23:20.6986||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 46,67 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:23:20.7026||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:23:20.7026||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 
2018-12-31 19:23:20.7220||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 19:23:21.2756||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:23:21.3284||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:23:34.1326||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:23:34.1572||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:23:48.8375||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:23:48.8753||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:23:56.2682||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:23:56.2682||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:23:56.2682||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:23:56.2929||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:23:56.3183||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:23:56.3389||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:23:56.3581||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:23:58.1224||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 60,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:23:58.1256||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:24:02.8830||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:24:02.9111||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:24:12.4540||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:24:12.4540||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:24:12.4540||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:24:12.4747||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:24:12.4951||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:24:12.5153||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:24:12.5342||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:24:12.5342||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 120,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:24:12.5342||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:24:17.3510||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:24:17.3770||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:24:20.7023||DEBUG|Quartz.Impl.AdoJobStore.MisfireHandler|Scanning for misfires... 
2018-12-31 19:24:20.7023||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 
2018-12-31 19:24:20.7272||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 19:24:23.1653||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:24:23.1653||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:24:23.1653||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:24:23.1923||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:24:23.2111||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:24:23.2296||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:24:23.2479||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:24:23.2494||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 180,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:24:23.2494||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:24:30.8878||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:24:30.9154||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:24:33.0860||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:24:33.0860||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:24:33.0860||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:24:33.1071||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:24:33.1254||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:24:33.1438||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:24:33.1610||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:24:33.1610||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 200,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:24:33.1610||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:24:40.0773||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:24:40.0773||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:24:40.0773||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:24:40.1022||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:24:40.1227||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:24:40.1461||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:24:40.1660||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:24:40.1660||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 200,17 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:24:40.1660||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:24:44.3405||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:24:44.3679||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:24:57.4165||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:24:57.4453||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:25:10.0884||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:25:10.1163||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:25:17.6275||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:25:17.6275||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:25:17.6275||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:25:17.6501||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:25:17.6725||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:25:17.6956||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:25:17.7174||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:26:00.3394||DEBUG|Quartz.Impl.AdoJobStore.MisfireHandler|Scanning for misfires... 
2018-12-31 19:26:00.3394||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 200,17 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:26:00.3394||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:26:00.3458||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:26:00.3810||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 
2018-12-31 19:26:00.3810||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:26:00.4018||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 19:26:12.9187||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:26:12.9486||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:26:25.4707||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:26:25.4937||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:26:39.6305||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:26:39.6444||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:26:53.6055||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:26:53.6245||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:27:00.3437||DEBUG|Quartz.Impl.AdoJobStore.MisfireHandler|Scanning for misfires... 
2018-12-31 19:27:00.3437||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 
2018-12-31 19:27:00.3598||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 19:27:07.0497||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:27:07.0660||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:27:19.4050||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:27:19.4294||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:27:34.0067||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:27:34.0553||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:27:46.4266||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:27:46.4557||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:27:59.2749||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:27:59.3006||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:28:00.3440||DEBUG|Quartz.Impl.AdoJobStore.MisfireHandler|Scanning for misfires... 
2018-12-31 19:28:00.3440||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 
2018-12-31 19:28:00.3688||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 19:28:13.7980||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:28:13.8295||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:28:28.4920||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:28:28.5066||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:28:40.8573||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:28:40.8901||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:28:49.8570||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:28:49.8583||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:28:49.8583||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:28:49.8775||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:28:49.8961||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:28:49.9154||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:28:49.9333||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:28:49.9333||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 600,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:28:49.9362||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:28:54.5803||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:28:54.6060||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:28:55.6324||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:28:55.6324||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:28:55.6324||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:28:55.6522||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:28:55.6741||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:28:55.6922||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:28:55.7088||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:28:55.7088||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 600,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:28:55.7088||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:28:59.0212||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:28:59.0212||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:28:59.0212||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:28:59.0450||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:28:59.0631||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:28:59.0816||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:28:59.0989||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:28:59.0989||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 600,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:28:59.0989||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:29:00.3464||DEBUG|Quartz.Impl.AdoJobStore.MisfireHandler|Scanning for misfires... 
2018-12-31 19:29:00.3464||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 
2018-12-31 19:29:00.3595||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 19:29:08.7272||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:29:08.7609||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:29:21.4098||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:29:21.4376||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:29:35.6945||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:29:35.7229||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:29:49.4438||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:29:49.4846||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:30:00.3510||DEBUG|Quartz.Impl.AdoJobStore.MisfireHandler|Scanning for misfires... 
2018-12-31 19:30:00.3510||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 
2018-12-31 19:30:00.3693||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 19:30:01.7630||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:30:01.7907||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:30:13.1016||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:30:13.1016||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:30:13.1016||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:30:13.1220||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:30:13.1407||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:30:13.1612||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:30:13.1804||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:30:13.1895||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 600,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:30:13.1895||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:30:15.8035||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:30:15.8356||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:30:17.0308||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:30:17.0308||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:30:17.0308||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:30:17.0512||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:30:17.0692||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:30:17.0914||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:30:17.1089||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:30:17.1089||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 600,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:30:17.1089||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:30:21.9482||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:30:21.9482||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:30:21.9482||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:30:21.9776||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:30:21.9999||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:30:22.0193||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:30:22.0373||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:30:22.0373||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 600,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:30:22.0373||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:30:26.9255||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:30:26.9255||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:30:26.9255||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:30:26.9606||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:30:26.9815||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:30:27.0007||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:30:27.0182||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:30:27.0182||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 600,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:30:27.0182||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:30:30.7972||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:30:30.8273||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:30:39.3743||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:30:39.3743||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:30:39.3743||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:30:39.3941||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:30:39.4133||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:30:39.4319||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:30:39.4495||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:30:39.4495||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 600,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:30:39.4495||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:30:45.7300||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:30:45.7566||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:30:54.1628||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109] 
2018-12-31 19:30:54.1628||DEBUG|Components.Services.Implementation.Logging|Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114] 
2018-12-31 19:30:54.1628||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50] 
2018-12-31 19:30:54.1837||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56] 
2018-12-31 19:30:54.2022||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66] 
2018-12-31 19:30:54.2203||DEBUG|Components.Services.Implementation.Logging|Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117] 
2018-12-31 19:30:54.2372||DEBUG|Components.Services.Implementation.Logging|Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119] 
2018-12-31 19:30:54.2372||DEBUG|Components.Services.Implementation.Logging|Message=[Converted price is: 600,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122] 
2018-12-31 19:30:54.2372||DEBUG|Components.Services.Implementation.Logging|Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123] 
2018-12-31 19:30:59.2602||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:30:59.2859||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:31:00.3586||DEBUG|Quartz.Impl.AdoJobStore.MisfireHandler|Scanning for misfires... 
2018-12-31 19:31:00.3586||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 
2018-12-31 19:31:00.3838||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 19:31:12.1402||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:31:12.1606||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:31:26.7165||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:31:26.7433||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:31:39.6675||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:31:39.6824||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:31:52.2210||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:31:52.2419||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:32:00.3623||DEBUG|Quartz.Impl.AdoJobStore.MisfireHandler|Scanning for misfires... 
2018-12-31 19:32:00.3623||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 
2018-12-31 19:32:00.3777||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 19:32:07.0928||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:32:07.1077||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:32:21.1515||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:32:21.1691||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-31 19:36:01.8209||INFO|Quartz.Util.DBConnectionManager|Registering datasource 'SR-53\MSSQL' with db provider: 'Quartz.Impl.AdoJobStore.Common.DbProvider' 
2018-12-31 19:36:01.8809||INFO|Quartz.Impl.StdSchedulerFactory|Using object serializer: Quartz.Simpl.JsonObjectSerializer, Quartz.Serialization.Json 
2018-12-31 19:36:01.9009||DEBUG|Quartz.Simpl.TaskSchedulingThreadPool|TaskSchedulingThreadPool configured with max concurrency of 10 and TaskScheduler ThreadPoolTaskScheduler. 
2018-12-31 19:36:01.9505||INFO|Quartz.Core.SchedulerSignalerImpl|Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl 
2018-12-31 19:36:02.0032||INFO|Quartz.Core.QuartzScheduler|Quartz Scheduler v.3.0.7.0 created. 
2018-12-31 19:36:02.0157||DEBUG|Quartz.Impl.AdoJobStore.StdAdoDelegate|Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.SimpleTriggerPersistenceDelegate 
2018-12-31 19:36:02.0157||DEBUG|Quartz.Impl.AdoJobStore.StdAdoDelegate|Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CronTriggerPersistenceDelegate 
2018-12-31 19:36:02.0157||DEBUG|Quartz.Impl.AdoJobStore.StdAdoDelegate|Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CalendarIntervalTriggerPersistenceDelegate 
2018-12-31 19:36:02.0157||DEBUG|Quartz.Impl.AdoJobStore.StdAdoDelegate|Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.DailyTimeIntervalTriggerPersistenceDelegate 
2018-12-31 19:36:02.0157||INFO|Quartz.Impl.AdoJobStore.JobStoreTX|Using thread monitor-based data access locking (synchronization). 
2018-12-31 19:36:02.0157||INFO|Quartz.Impl.AdoJobStore.JobStoreTX|JobStoreTX initialized. 
2018-12-31 19:36:02.0333||INFO|Quartz.Core.QuartzScheduler|Scheduler meta-data: Quartz Scheduler (v3.0.7.0) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'Quartz.Core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'Quartz.Simpl.DefaultThreadPool' - with 10 threads.
  Using job-store 'Quartz.Impl.AdoJobStore.JobStoreTX' - which supports persistence. and is not clustered.
 
2018-12-31 19:36:02.0333||INFO|Quartz.Impl.StdSchedulerFactory|Quartz scheduler 'QuartzScheduler' initialized 
2018-12-31 19:36:02.0333||INFO|Quartz.Impl.StdSchedulerFactory|Quartz scheduler version: 3.0.7.0 
2018-12-31 19:36:02.0333||INFO|Quartz.Core.QuartzScheduler|JobFactory set to: BackgroundSchedulers.JobFactory 
2018-12-31 19:36:02.0584||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' is desired by: 9d42d69f-f07d-44fc-9730-b52aa5297442 
2018-12-31 19:36:02.0584||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' is being obtained: 9d42d69f-f07d-44fc-9730-b52aa5297442 
2018-12-31 19:36:02.0584||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' given to: 9d42d69f-f07d-44fc-9730-b52aa5297442 
2018-12-31 19:36:02.1484||DEBUG|Quartz.SQL|Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2) 
2018-12-31 19:36:02.2158||DEBUG|Quartz.SQL|Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2) 
2018-12-31 19:36:02.2320||INFO|Quartz.Impl.AdoJobStore.JobStoreTX|Freed 0 triggers from 'acquired' / 'blocked' state. 
2018-12-31 19:36:02.2471||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:36:02.2692||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 19:36:02.2692||DEBUG|Quartz.SQL|Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND INSTANCE_NAME = @instanceName AND REQUESTS_RECOVERY = @requestsRecovery 
2018-12-31 19:36:02.2950||INFO|Quartz.Impl.AdoJobStore.JobStoreTX|Recovering 0 jobs that were in-progress at the time of the last shut-down. 
2018-12-31 19:36:02.2960||INFO|Quartz.Impl.AdoJobStore.JobStoreTX|Recovery complete. 
2018-12-31 19:36:02.2960||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state 
2018-12-31 19:36:02.3141||INFO|Quartz.Impl.AdoJobStore.JobStoreTX|Removed 0 'complete' triggers. 
2018-12-31 19:36:02.3141||DEBUG|Quartz.SQL|Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' 
2018-12-31 19:36:02.3290||INFO|Quartz.Impl.AdoJobStore.JobStoreTX|Removed 0 stale fired job entries. 
2018-12-31 19:36:02.3290||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' returned by: 9d42d69f-f07d-44fc-9730-b52aa5297442 
2018-12-31 19:36:02.3534||INFO|Quartz.Core.QuartzScheduler|Scheduler QuartzScheduler_$_NON_CLUSTERED started. 
2018-12-31 19:36:02.3616||DEBUG|Quartz.Impl.AdoJobStore.MisfireHandler|Scanning for misfires... 
2018-12-31 19:36:02.3885||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 
2018-12-31 19:36:02.4019||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-31 19:36:02.4273||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-31 19:36:02.4365||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
