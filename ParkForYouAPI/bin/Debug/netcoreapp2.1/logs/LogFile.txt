2018-12-28 16:34:34.8898 Registering datasource 'SR-53\MSSQL' with db provider: 'Quartz.Impl.AdoJobStore.Common.DbProvider'
2018-12-28 16:34:34.9599 Using object serializer: Quartz.Simpl.JsonObjectSerializer, Quartz.Serialization.Json
2018-12-28 16:34:34.9799 TaskSchedulingThreadPool configured with max concurrency of 10 and TaskScheduler ThreadPoolTaskScheduler.
2018-12-28 16:34:35.0311 Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2018-12-28 16:34:35.0510 Quartz Scheduler v.3.0.7.0 created.
2018-12-28 16:34:35.0678 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.SimpleTriggerPersistenceDelegate
2018-12-28 16:34:35.0678 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CronTriggerPersistenceDelegate
2018-12-28 16:34:35.0678 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CalendarIntervalTriggerPersistenceDelegate
2018-12-28 16:34:35.0678 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.DailyTimeIntervalTriggerPersistenceDelegate
2018-12-28 16:34:35.0744 Using thread monitor-based data access locking (synchronization).
2018-12-28 16:34:35.0744 JobStoreTX initialized.
2018-12-28 16:34:35.0744 Scheduler meta-data: Quartz Scheduler (v3.0.7.0) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'Quartz.Core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'Quartz.Simpl.DefaultThreadPool' - with 10 threads.
  Using job-store 'Quartz.Impl.AdoJobStore.JobStoreTX' - which supports persistence. and is not clustered.

2018-12-28 16:34:35.0744 Quartz scheduler 'QuartzScheduler' initialized
2018-12-28 16:34:35.0744 Quartz scheduler version: 3.0.7.0
2018-12-28 16:34:35.0903 JobFactory set to: BackgroundSchedulers.JobFactory
2018-12-28 16:34:35.1121 Lock 'TRIGGER_ACCESS' is desired by: 237f5719-763e-44b4-8c39-42212574ad2f
2018-12-28 16:34:35.1121 Lock 'TRIGGER_ACCESS' is being obtained: 237f5719-763e-44b4-8c39-42212574ad2f
2018-12-28 16:34:35.1121 Lock 'TRIGGER_ACCESS' given to: 237f5719-763e-44b4-8c39-42212574ad2f
2018-12-28 16:34:35.2107 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2018-12-28 16:34:35.2777 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2018-12-28 16:34:35.2932 Freed 0 triggers from 'acquired' / 'blocked' state.
2018-12-28 16:34:35.2932 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-28 16:34:35.3265 Found 0 triggers that missed their scheduled fire-time.
2018-12-28 16:34:35.3265 Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND INSTANCE_NAME = @instanceName AND REQUESTS_RECOVERY = @requestsRecovery
2018-12-28 16:34:35.3575 Recovering 0 jobs that were in-progress at the time of the last shut-down.
2018-12-28 16:34:35.3575 Recovery complete.
2018-12-28 16:34:35.3575 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state
2018-12-28 16:34:35.3762 Removed 0 'complete' triggers.
2018-12-28 16:34:35.3762 Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler'
2018-12-28 16:34:35.3909 Removed 0 stale fired job entries.
2018-12-28 16:34:35.3909 Lock 'TRIGGER_ACCESS' returned by: 237f5719-763e-44b4-8c39-42212574ad2f
2018-12-28 16:34:35.4178 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2018-12-28 16:34:35.4372 Scanning for misfires...
2018-12-28 16:34:36.4767 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-28 16:34:36.4767 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-28 16:34:36.5126 Found 0 triggers that missed their scheduled fire-time.
2018-12-28 16:34:36.5126 Batch acquisition of 0 triggers
2018-12-28 16:40:48.6945 Registering datasource 'SR-53\MSSQL' with db provider: 'Quartz.Impl.AdoJobStore.Common.DbProvider'
2018-12-28 16:40:48.7546 Using object serializer: Quartz.Simpl.JsonObjectSerializer, Quartz.Serialization.Json
2018-12-28 16:40:48.7741 TaskSchedulingThreadPool configured with max concurrency of 10 and TaskScheduler ThreadPoolTaskScheduler.
2018-12-28 16:40:48.8026 Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2018-12-28 16:40:48.8227 Quartz Scheduler v.3.0.7.0 created.
2018-12-28 16:40:48.8361 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.SimpleTriggerPersistenceDelegate
2018-12-28 16:40:48.8361 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CronTriggerPersistenceDelegate
2018-12-28 16:40:48.8361 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CalendarIntervalTriggerPersistenceDelegate
2018-12-28 16:40:48.8402 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.DailyTimeIntervalTriggerPersistenceDelegate
2018-12-28 16:40:48.8402 Using thread monitor-based data access locking (synchronization).
2018-12-28 16:40:48.8402 JobStoreTX initialized.
2018-12-28 16:40:48.8402 Scheduler meta-data: Quartz Scheduler (v3.0.7.0) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'Quartz.Core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'Quartz.Simpl.DefaultThreadPool' - with 10 threads.
  Using job-store 'Quartz.Impl.AdoJobStore.JobStoreTX' - which supports persistence. and is not clustered.

2018-12-28 16:40:48.8402 Quartz scheduler 'QuartzScheduler' initialized
2018-12-28 16:40:48.8402 Quartz scheduler version: 3.0.7.0
2018-12-28 16:40:49.3682 JobFactory set to: BackgroundSchedulers.JobFactory
2018-12-28 16:40:49.5942 Lock 'TRIGGER_ACCESS' is desired by: a938140b-9a31-44bd-b94a-9cc099d99f0b
2018-12-28 16:40:49.5942 Lock 'TRIGGER_ACCESS' is being obtained: a938140b-9a31-44bd-b94a-9cc099d99f0b
2018-12-28 16:40:49.5942 Lock 'TRIGGER_ACCESS' given to: a938140b-9a31-44bd-b94a-9cc099d99f0b
2018-12-28 16:40:49.6930 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2018-12-28 16:40:49.7654 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2018-12-28 16:40:49.7839 Freed 0 triggers from 'acquired' / 'blocked' state.
2018-12-28 16:40:49.7950 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-28 16:40:49.8177 Found 0 triggers that missed their scheduled fire-time.
2018-12-28 16:40:49.8278 Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND INSTANCE_NAME = @instanceName AND REQUESTS_RECOVERY = @requestsRecovery
2018-12-28 16:40:49.8458 Recovering 0 jobs that were in-progress at the time of the last shut-down.
2018-12-28 16:40:49.8458 Recovery complete.
2018-12-28 16:40:49.8458 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state
2018-12-28 16:40:49.8656 Removed 0 'complete' triggers.
2018-12-28 16:40:49.8656 Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler'
2018-12-28 16:40:49.8816 Removed 0 stale fired job entries.
2018-12-28 16:40:49.8900 Lock 'TRIGGER_ACCESS' returned by: a938140b-9a31-44bd-b94a-9cc099d99f0b
2018-12-28 16:40:49.9087 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2018-12-28 16:40:50.3827 Scanning for misfires...
2018-12-28 16:40:50.3918 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-28 16:40:50.4135 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-28 16:40:50.4135 Found 0 triggers that missed their scheduled fire-time.
2018-12-28 16:40:50.4379 Batch acquisition of 0 triggers
2018-12-28 16:40:54.0975 Message=[Login process started.], EmailAddress=[], Method=[Login], LineNumber=[366]
2018-12-28 16:40:54.0975 Message=[Getting user with the username: +923028417241], EmailAddress=[], Method=[Login], LineNumber=[368]
2018-12-28 16:40:54.5638 Message=[Password sign for the user with the username: +923028417241], EmailAddress=[], Method=[Login], LineNumber=[372]
2018-12-28 16:40:54.5638 Message=[Getting roles of the user.], EmailAddress=[], Method=[Login], LineNumber=[376]
2018-12-28 16:40:54.6572 Message=[Generating token of user with the username: +923028417241 and role: User], EmailAddress=[], Method=[Login], LineNumber=[378]
2018-12-28 16:40:54.6789 Message=[Login process ended.], EmailAddress=[], Method=[Login], LineNumber=[389]
2018-12-28 16:41:04.6028 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-28 16:41:04.6265 Batch acquisition of 0 triggers
2018-12-28 16:41:17.2311 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-28 16:41:17.2612 Batch acquisition of 0 triggers
2018-12-28 16:50:28.3852 Registering datasource 'SR-53\MSSQL' with db provider: 'Quartz.Impl.AdoJobStore.Common.DbProvider'
2018-12-28 16:50:28.4479 Using object serializer: Quartz.Simpl.JsonObjectSerializer, Quartz.Serialization.Json
2018-12-28 16:50:28.4748 TaskSchedulingThreadPool configured with max concurrency of 10 and TaskScheduler ThreadPoolTaskScheduler.
2018-12-28 16:50:28.5230 Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2018-12-28 16:50:28.5689 Quartz Scheduler v.3.0.7.0 created.
2018-12-28 16:50:28.5805 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.SimpleTriggerPersistenceDelegate
2018-12-28 16:50:28.5805 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CronTriggerPersistenceDelegate
2018-12-28 16:50:28.5805 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CalendarIntervalTriggerPersistenceDelegate
2018-12-28 16:50:28.5805 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.DailyTimeIntervalTriggerPersistenceDelegate
2018-12-28 16:50:28.5805 Using thread monitor-based data access locking (synchronization).
2018-12-28 16:50:28.5805 JobStoreTX initialized.
2018-12-28 16:50:28.5944 Scheduler meta-data: Quartz Scheduler (v3.0.7.0) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'Quartz.Core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'Quartz.Simpl.DefaultThreadPool' - with 10 threads.
  Using job-store 'Quartz.Impl.AdoJobStore.JobStoreTX' - which supports persistence. and is not clustered.

2018-12-28 16:50:28.5944 Quartz scheduler 'QuartzScheduler' initialized
2018-12-28 16:50:28.5944 Quartz scheduler version: 3.0.7.0
2018-12-28 16:50:28.5944 JobFactory set to: BackgroundSchedulers.JobFactory
2018-12-28 16:50:28.6191 Lock 'TRIGGER_ACCESS' is desired by: 46246371-153c-43c2-900c-6aebb91a3295
2018-12-28 16:50:28.6191 Lock 'TRIGGER_ACCESS' is being obtained: 46246371-153c-43c2-900c-6aebb91a3295
2018-12-28 16:50:28.6213 Lock 'TRIGGER_ACCESS' given to: 46246371-153c-43c2-900c-6aebb91a3295
2018-12-28 16:50:28.7106 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2018-12-28 16:50:28.7725 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2018-12-28 16:50:28.7912 Freed 0 triggers from 'acquired' / 'blocked' state.
2018-12-28 16:50:28.8148 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-28 16:50:28.8474 Found 0 triggers that missed their scheduled fire-time.
2018-12-28 16:50:28.8567 Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND INSTANCE_NAME = @instanceName AND REQUESTS_RECOVERY = @requestsRecovery
2018-12-28 16:50:28.8717 Recovering 0 jobs that were in-progress at the time of the last shut-down.
2018-12-28 16:50:28.8717 Recovery complete.
2018-12-28 16:50:28.8717 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state
2018-12-28 16:50:28.8923 Removed 0 'complete' triggers.
2018-12-28 16:50:28.8923 Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler'
2018-12-28 16:50:28.9089 Removed 0 stale fired job entries.
2018-12-28 16:50:28.9089 Lock 'TRIGGER_ACCESS' returned by: 46246371-153c-43c2-900c-6aebb91a3295
2018-12-28 16:50:28.9377 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2018-12-28 16:50:40.6908 Registering datasource 'SR-53\MSSQL' with db provider: 'Quartz.Impl.AdoJobStore.Common.DbProvider'
2018-12-28 16:50:40.7395 Using object serializer: Quartz.Simpl.JsonObjectSerializer, Quartz.Serialization.Json
2018-12-28 16:50:40.7514 TaskSchedulingThreadPool configured with max concurrency of 10 and TaskScheduler ThreadPoolTaskScheduler.
2018-12-28 16:50:40.7514 Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2018-12-28 16:50:40.7849 Quartz Scheduler v.3.0.7.0 created.
2018-12-28 16:50:40.7948 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.SimpleTriggerPersistenceDelegate
2018-12-28 16:50:40.7948 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CronTriggerPersistenceDelegate
2018-12-28 16:50:40.7948 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CalendarIntervalTriggerPersistenceDelegate
2018-12-28 16:50:40.7948 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.DailyTimeIntervalTriggerPersistenceDelegate
2018-12-28 16:50:40.7948 Using thread monitor-based data access locking (synchronization).
2018-12-28 16:50:40.7948 JobStoreTX initialized.
2018-12-28 16:50:40.7948 Scheduler meta-data: Quartz Scheduler (v3.0.7.0) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'Quartz.Core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'Quartz.Simpl.DefaultThreadPool' - with 10 threads.
  Using job-store 'Quartz.Impl.AdoJobStore.JobStoreTX' - which supports persistence. and is not clustered.

2018-12-28 16:50:40.7948 Quartz scheduler 'QuartzScheduler' initialized
2018-12-28 16:50:40.8099 Quartz scheduler version: 3.0.7.0
2018-12-28 16:50:40.8099 JobFactory set to: BackgroundSchedulers.JobFactory
2018-12-28 16:50:40.8319 Lock 'TRIGGER_ACCESS' is desired by: 2793427c-c964-44d9-b876-0dba8b9893d8
2018-12-28 16:50:40.8319 Lock 'TRIGGER_ACCESS' is being obtained: 2793427c-c964-44d9-b876-0dba8b9893d8
2018-12-28 16:50:40.8319 Lock 'TRIGGER_ACCESS' given to: 2793427c-c964-44d9-b876-0dba8b9893d8
2018-12-28 16:50:40.8852 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2018-12-28 16:50:40.9030 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2018-12-28 16:50:40.9030 Freed 0 triggers from 'acquired' / 'blocked' state.
2018-12-28 16:50:40.9180 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-28 16:50:40.9180 Found 0 triggers that missed their scheduled fire-time.
2018-12-28 16:50:40.9366 Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND INSTANCE_NAME = @instanceName AND REQUESTS_RECOVERY = @requestsRecovery
2018-12-28 16:50:40.9366 Recovering 0 jobs that were in-progress at the time of the last shut-down.
2018-12-28 16:50:40.9366 Recovery complete.
2018-12-28 16:50:40.9366 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state
2018-12-28 16:50:40.9498 Removed 0 'complete' triggers.
2018-12-28 16:50:40.9498 Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler'
2018-12-28 16:50:40.9498 Removed 0 stale fired job entries.
2018-12-28 16:50:40.9498 Lock 'TRIGGER_ACCESS' returned by: 2793427c-c964-44d9-b876-0dba8b9893d8
2018-12-28 16:50:40.9735 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2018-12-28 16:50:40.9735 JobFactory set to: BackgroundSchedulers.JobFactory
2018-12-28 16:50:40.9735 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2018-12-28 16:50:40.9825 Scanning for misfires...
2018-12-28 16:50:40.9825 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-28 16:50:40.9962 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-28 16:50:40.9962 Found 0 triggers that missed their scheduled fire-time.
2018-12-28 16:50:40.9962 Batch acquisition of 0 triggers
2018-12-28 16:50:41.0380 JobFactory set to: BackgroundSchedulers.JobFactory
2018-12-28 16:50:41.0380 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2018-12-28 16:50:41.0380 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-28 16:50:41.0380 Batch acquisition of 0 triggers
2018-12-28 16:50:53.3740 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-28 16:50:53.3740 Batch acquisition of 0 triggers
2018-12-28 16:52:23.9918 Registering datasource 'SR-53\MSSQL' with db provider: 'Quartz.Impl.AdoJobStore.Common.DbProvider'
2018-12-28 16:52:24.0514 Using object serializer: Quartz.Simpl.JsonObjectSerializer, Quartz.Serialization.Json
2018-12-28 16:52:24.0769 TaskSchedulingThreadPool configured with max concurrency of 10 and TaskScheduler ThreadPoolTaskScheduler.
2018-12-28 16:52:24.1063 Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2018-12-28 16:52:24.1541 Quartz Scheduler v.3.0.7.0 created.
2018-12-28 16:52:24.1541 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.SimpleTriggerPersistenceDelegate
2018-12-28 16:52:24.1541 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CronTriggerPersistenceDelegate
2018-12-28 16:52:24.1541 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CalendarIntervalTriggerPersistenceDelegate
2018-12-28 16:52:24.1693 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.DailyTimeIntervalTriggerPersistenceDelegate
2018-12-28 16:52:24.1693 Using thread monitor-based data access locking (synchronization).
2018-12-28 16:52:24.1693 JobStoreTX initialized.
2018-12-28 16:52:24.1693 Scheduler meta-data: Quartz Scheduler (v3.0.7.0) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'Quartz.Core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'Quartz.Simpl.DefaultThreadPool' - with 10 threads.
  Using job-store 'Quartz.Impl.AdoJobStore.JobStoreTX' - which supports persistence. and is not clustered.

2018-12-28 16:52:24.1693 Quartz scheduler 'QuartzScheduler' initialized
2018-12-28 16:52:24.1693 Quartz scheduler version: 3.0.7.0
2018-12-28 16:52:24.6178 JobFactory set to: BackgroundSchedulers.JobFactory
2018-12-28 16:52:24.8195 Lock 'TRIGGER_ACCESS' is desired by: 5a97ca20-7d90-46e8-8c23-1af2f9dcc3db
2018-12-28 16:52:24.8195 Lock 'TRIGGER_ACCESS' is being obtained: 5a97ca20-7d90-46e8-8c23-1af2f9dcc3db
2018-12-28 16:52:24.8195 Lock 'TRIGGER_ACCESS' given to: 5a97ca20-7d90-46e8-8c23-1af2f9dcc3db
2018-12-28 16:52:24.9174 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2018-12-28 16:52:24.9769 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2018-12-28 16:52:25.0012 Freed 0 triggers from 'acquired' / 'blocked' state.
2018-12-28 16:52:25.0120 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-28 16:52:25.0337 Found 0 triggers that missed their scheduled fire-time.
2018-12-28 16:52:25.0429 Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND INSTANCE_NAME = @instanceName AND REQUESTS_RECOVERY = @requestsRecovery
2018-12-28 16:52:25.0594 Recovering 0 jobs that were in-progress at the time of the last shut-down.
2018-12-28 16:52:25.0594 Recovery complete.
2018-12-28 16:52:25.0594 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state
2018-12-28 16:52:25.0780 Removed 0 'complete' triggers.
2018-12-28 16:52:25.0780 Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler'
2018-12-28 16:52:25.0930 Removed 0 stale fired job entries.
2018-12-28 16:52:25.0930 Lock 'TRIGGER_ACCESS' returned by: 5a97ca20-7d90-46e8-8c23-1af2f9dcc3db
2018-12-28 16:52:25.1176 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2018-12-28 16:52:26.6906 Scanning for misfires...
2018-12-28 16:52:26.7397 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-28 16:52:26.7588 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-28 16:52:26.7898 Batch acquisition of 0 triggers
2018-12-28 16:52:26.7898 Found 0 triggers that missed their scheduled fire-time.
2018-12-28 16:52:36.3310 Registering datasource 'SR-53\MSSQL' with db provider: 'Quartz.Impl.AdoJobStore.Common.DbProvider'
2018-12-28 16:52:36.3989 Using object serializer: Quartz.Simpl.JsonObjectSerializer, Quartz.Serialization.Json
2018-12-28 16:52:36.4193 TaskSchedulingThreadPool configured with max concurrency of 10 and TaskScheduler ThreadPoolTaskScheduler.
2018-12-28 16:52:36.4485 Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2018-12-28 16:52:36.4963 Quartz Scheduler v.3.0.7.0 created.
2018-12-28 16:52:36.4963 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.SimpleTriggerPersistenceDelegate
2018-12-28 16:52:36.4963 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CronTriggerPersistenceDelegate
2018-12-28 16:52:36.5129 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CalendarIntervalTriggerPersistenceDelegate
2018-12-28 16:52:36.5129 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.DailyTimeIntervalTriggerPersistenceDelegate
2018-12-28 16:52:36.5129 Using thread monitor-based data access locking (synchronization).
2018-12-28 16:52:36.5129 JobStoreTX initialized.
2018-12-28 16:52:36.5129 Scheduler meta-data: Quartz Scheduler (v3.0.7.0) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'Quartz.Core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'Quartz.Simpl.DefaultThreadPool' - with 10 threads.
  Using job-store 'Quartz.Impl.AdoJobStore.JobStoreTX' - which supports persistence. and is not clustered.

2018-12-28 16:52:36.5297 Quartz scheduler 'QuartzScheduler' initialized
2018-12-28 16:52:36.5297 Quartz scheduler version: 3.0.7.0
2018-12-28 16:52:36.5297 JobFactory set to: BackgroundSchedulers.JobFactory
2018-12-28 16:52:36.5551 Lock 'TRIGGER_ACCESS' is desired by: 75978023-1e64-40c3-b0d7-e244648339d6
2018-12-28 16:52:36.5551 Lock 'TRIGGER_ACCESS' is being obtained: 75978023-1e64-40c3-b0d7-e244648339d6
2018-12-28 16:52:36.5551 Lock 'TRIGGER_ACCESS' given to: 75978023-1e64-40c3-b0d7-e244648339d6
2018-12-28 16:52:36.6550 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2018-12-28 16:52:36.7027 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2018-12-28 16:52:36.7204 Freed 0 triggers from 'acquired' / 'blocked' state.
2018-12-28 16:52:36.7311 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-28 16:52:36.7513 Found 0 triggers that missed their scheduled fire-time.
2018-12-28 16:52:36.7630 Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND INSTANCE_NAME = @instanceName AND REQUESTS_RECOVERY = @requestsRecovery
2018-12-28 16:52:36.7885 Recovering 0 jobs that were in-progress at the time of the last shut-down.
2018-12-28 16:52:36.7885 Recovery complete.
2018-12-28 16:52:36.7946 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state
2018-12-28 16:52:36.8084 Removed 0 'complete' triggers.
2018-12-28 16:52:36.8084 Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler'
2018-12-28 16:52:36.8249 Removed 0 stale fired job entries.
2018-12-28 16:52:36.8249 Lock 'TRIGGER_ACCESS' returned by: 75978023-1e64-40c3-b0d7-e244648339d6
2018-12-28 16:52:36.8567 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2018-12-28 16:52:36.8743 Scanning for misfires...
2018-12-28 16:52:36.9121 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-28 16:52:36.9334 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-28 16:52:36.9521 Found 0 triggers that missed their scheduled fire-time.
2018-12-28 16:52:36.9782 Batch acquisition of 0 triggers
2018-12-31 11:40:50.7652 Registering datasource 'SR-53\MSSQL' with db provider: 'Quartz.Impl.AdoJobStore.Common.DbProvider'
2018-12-31 11:40:50.8624 Using object serializer: Quartz.Simpl.JsonObjectSerializer, Quartz.Serialization.Json
2018-12-31 11:40:50.8933 TaskSchedulingThreadPool configured with max concurrency of 10 and TaskScheduler ThreadPoolTaskScheduler.
2018-12-31 11:40:50.9262 Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2018-12-31 11:40:50.9811 Quartz Scheduler v.3.0.7.0 created.
2018-12-31 11:40:50.9939 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.SimpleTriggerPersistenceDelegate
2018-12-31 11:40:50.9939 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CronTriggerPersistenceDelegate
2018-12-31 11:40:50.9939 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CalendarIntervalTriggerPersistenceDelegate
2018-12-31 11:40:50.9939 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.DailyTimeIntervalTriggerPersistenceDelegate
2018-12-31 11:40:50.9990 Using thread monitor-based data access locking (synchronization).
2018-12-31 11:40:50.9990 JobStoreTX initialized.
2018-12-31 11:40:50.9990 Scheduler meta-data: Quartz Scheduler (v3.0.7.0) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'Quartz.Core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'Quartz.Simpl.DefaultThreadPool' - with 10 threads.
  Using job-store 'Quartz.Impl.AdoJobStore.JobStoreTX' - which supports persistence. and is not clustered.

2018-12-31 11:40:50.9990 Quartz scheduler 'QuartzScheduler' initialized
2018-12-31 11:40:51.0157 Quartz scheduler version: 3.0.7.0
2018-12-31 11:40:51.0157 JobFactory set to: BackgroundSchedulers.JobFactory
2018-12-31 11:40:51.0451 Lock 'TRIGGER_ACCESS' is desired by: 603aae0f-4a46-4280-b083-b4576f78fac0
2018-12-31 11:40:51.0467 Lock 'TRIGGER_ACCESS' is being obtained: 603aae0f-4a46-4280-b083-b4576f78fac0
2018-12-31 11:40:51.0467 Lock 'TRIGGER_ACCESS' given to: 603aae0f-4a46-4280-b083-b4576f78fac0
2018-12-31 11:40:51.2116 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2018-12-31 11:40:51.2989 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2018-12-31 11:40:51.3150 Freed 0 triggers from 'acquired' / 'blocked' state.
2018-12-31 11:40:51.3150 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:40:51.3495 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 11:40:51.3602 Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND INSTANCE_NAME = @instanceName AND REQUESTS_RECOVERY = @requestsRecovery
2018-12-31 11:40:51.3780 Recovering 0 jobs that were in-progress at the time of the last shut-down.
2018-12-31 11:40:51.3780 Recovery complete.
2018-12-31 11:40:51.3780 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state
2018-12-31 11:40:51.3986 Removed 0 'complete' triggers.
2018-12-31 11:40:51.3986 Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler'
2018-12-31 11:40:51.4137 Removed 0 stale fired job entries.
2018-12-31 11:40:51.4208 Lock 'TRIGGER_ACCESS' returned by: 603aae0f-4a46-4280-b083-b4576f78fac0
2018-12-31 11:40:51.4385 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2018-12-31 11:40:51.4555 Scanning for misfires...
2018-12-31 11:40:51.4759 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:40:51.5189 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-31 11:40:51.5505 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 11:40:51.5505 Batch acquisition of 0 triggers
2018-12-31 11:40:57.9215 JobFactory set to: BackgroundSchedulers.JobFactory
2018-12-31 11:40:57.9215 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2018-12-31 11:40:57.9215 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:40:57.9436 Batch acquisition of 0 triggers
2018-12-31 11:40:58.0429 Message=[Login process started.], EmailAddress=[], Method=[Login], LineNumber=[366]
2018-12-31 11:40:58.0429 Message=[Getting user with the username: +923028417241], EmailAddress=[], Method=[Login], LineNumber=[368]
2018-12-31 11:40:58.5834 Message=[Password sign for the user with the username: +923028417241], EmailAddress=[], Method=[Login], LineNumber=[372]
2018-12-31 11:40:58.5834 Message=[Getting roles of the user.], EmailAddress=[], Method=[Login], LineNumber=[376]
2018-12-31 11:40:58.6756 Message=[Generating token of user with the username: +923028417241 and role: User], EmailAddress=[], Method=[Login], LineNumber=[378]
2018-12-31 11:40:58.7020 Message=[Login process ended.], EmailAddress=[], Method=[Login], LineNumber=[389]
2018-12-31 11:41:11.5496 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:41:11.5851 Batch acquisition of 0 triggers
2018-12-31 11:41:19.8252 Message=[Start parking process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[92]
2018-12-31 11:41:19.8252 Message=[Getting device information with the mobileNumber: +923028417241], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[104]
2018-12-31 11:41:20.0680 Message=[Getting user setting with the mobileNumber: +923028417241], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[109]
2018-12-31 11:41:20.1012 Message=[Getting the user profile information: +923028417241], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[114]
2018-12-31 11:41:20.1245 Message=[Getting parking lot with the Id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[119]
2018-12-31 11:41:20.1245 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 11:41:20.1477 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 11:41:20.1685 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 11:41:20.1897 Message=[Parking vendor index is: 0], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[125]
2018-12-31 11:41:20.1897 Message=[Getting user card information with the cardId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[127]
2018-12-31 11:41:20.1897 Message=[Getting the user card with the cardId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[128]
2018-12-31 11:41:20.2137 Message=[Getting vehicle information with the mobileNumber: +923028417241], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[132]
2018-12-31 11:41:20.2391 Message=[Getting parking information with the parkingId: 0], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[138]
2018-12-31 11:41:20.2603 Message=[Parking total price is of: 10], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[207]
2018-12-31 11:41:20.2649 Message=[Calculated price of minutes 1 is 0.1666666666666666666666666667: ], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[210]
2018-12-31 11:41:20.2649 Message=[Adding the new parking in the system.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[261]
2018-12-31 11:41:20.3884 Message=[Background service register event.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[266]
2018-12-31 11:41:20.4071 Lock 'TRIGGER_ACCESS' is desired by: 68fccb1a-3a43-46aa-8901-9b4fb3141448
2018-12-31 11:41:20.4071 Lock 'TRIGGER_ACCESS' is being obtained: 68fccb1a-3a43-46aa-8901-9b4fb3141448
2018-12-31 11:41:20.4071 Lock 'TRIGGER_ACCESS' given to: 68fccb1a-3a43-46aa-8901-9b4fb3141448
2018-12-31 11:41:20.4223 Prepared SQL: SELECT JOB_NAME FROM QRTZ_JOB_DETAILS WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup
2018-12-31 11:41:20.4607 Prepared SQL: INSERT INTO QRTZ_JOB_DETAILS (SCHED_NAME, JOB_NAME, JOB_GROUP, DESCRIPTION, JOB_CLASS_NAME, IS_DURABLE, IS_NONCONCURRENT, IS_UPDATE_DATA, REQUESTS_RECOVERY, JOB_DATA)  VALUES('QuartzScheduler', @jobName, @jobGroup, @jobDescription, @jobType, @jobDurable, @jobVolatile, @jobStateful, @jobRequestsRecovery, @jobDataMap)
2018-12-31 11:41:20.4789 Message=[Start parking process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[290]
2018-12-31 11:41:20.5016 Prepared SQL: SELECT TRIGGER_NAME FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup
2018-12-31 11:41:20.5404 Prepared SQL: SELECT TRIGGER_GROUP FROM QRTZ_PAUSED_TRIGGER_GRPS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_GROUP = @triggerGroup
2018-12-31 11:41:20.5570 Prepared SQL: SELECT TRIGGER_GROUP FROM QRTZ_PAUSED_TRIGGER_GRPS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_GROUP = @triggerGroup
2018-12-31 11:41:20.5774 Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup
2018-12-31 11:41:20.6046 Prepared SQL: INSERT INTO QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP, JOB_NAME, JOB_GROUP, DESCRIPTION, NEXT_FIRE_TIME, PREV_FIRE_TIME, TRIGGER_STATE, TRIGGER_TYPE, START_TIME, END_TIME, CALENDAR_NAME, MISFIRE_INSTR, JOB_DATA, PRIORITY)  
                        VALUES('QuartzScheduler', @triggerName, @triggerGroup, @triggerJobName, @triggerJobGroup, @triggerDescription, @triggerNextFireTime, @triggerPreviousFireTime, @triggerState, @triggerType, @triggerStartTime, @triggerEndTime, @triggerCalendarName, @triggerMisfireInstruction, @triggerJobJobDataMap, @triggerPriority)
2018-12-31 11:41:20.6233 Prepared SQL: INSERT INTO QRTZ_SIMPLE_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP, REPEAT_COUNT, REPEAT_INTERVAL, TIMES_TRIGGERED)  VALUES('QuartzScheduler', @triggerName, @triggerGroup, @triggerRepeatCount, @triggerRepeatInterval, @triggerTimesTriggered)
2018-12-31 11:41:20.6379 Lock 'TRIGGER_ACCESS' returned by: 68fccb1a-3a43-46aa-8901-9b4fb3141448
2018-12-31 11:41:20.6426 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:41:20.6594 Batch acquisition of 0 triggers
2018-12-31 11:41:33.4185 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:41:33.4362 Batch acquisition of 0 triggers
2018-12-31 11:41:47.3792 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:41:47.3982 Batch acquisition of 0 triggers
2018-12-31 11:41:51.4567 Scanning for misfires...
2018-12-31 11:41:51.4567 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-31 11:41:51.4859 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 11:42:01.4414 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:42:01.4585 Batch acquisition of 0 triggers
2018-12-31 11:42:15.1520 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:42:15.1846 Batch acquisition of 0 triggers
2018-12-31 11:42:29.2262 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:42:29.2585 Prepared SQL: SELECT JOB_NAME,JOB_GROUP,DESCRIPTION,NEXT_FIRE_TIME,PREV_FIRE_TIME,TRIGGER_TYPE,START_TIME,END_TIME,CALENDAR_NAME,MISFIRE_INSTR,PRIORITY,JOB_DATA FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup
2018-12-31 11:42:29.2910 Prepared SQL: SELECT * FROM QRTZ_SIMPLE_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup
2018-12-31 11:42:29.3128 Prepared SQL: SELECT JOB_NAME,JOB_GROUP,DESCRIPTION,JOB_CLASS_NAME,IS_DURABLE,REQUESTS_RECOVERY,JOB_DATA FROM QRTZ_JOB_DETAILS WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup
2018-12-31 11:42:29.3365 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup AND TRIGGER_STATE = @oldState AND NEXT_FIRE_TIME = @nextFireTime
2018-12-31 11:42:29.3560 Prepared SQL: INSERT INTO QRTZ_FIRED_TRIGGERS (SCHED_NAME, ENTRY_ID, TRIGGER_NAME, TRIGGER_GROUP, INSTANCE_NAME, FIRED_TIME, SCHED_TIME, STATE, JOB_NAME, JOB_GROUP, IS_NONCONCURRENT, REQUESTS_RECOVERY, PRIORITY) VALUES('QuartzScheduler', @triggerEntryId, @triggerName, @triggerGroup, @triggerInstanceName, @triggerFireTime, @triggerScheduledTime, @triggerState, @triggerJobName, @triggerJobGroup, @triggerJobStateful, @triggerJobRequestsRecovery, @triggerPriority)
2018-12-31 11:42:29.3702 Batch acquisition of 1 triggers
2018-12-31 11:42:30.3954 Lock 'TRIGGER_ACCESS' is desired by: 6d39dcf9-1ca5-4660-9a87-a6a8d9eb0e9a
2018-12-31 11:42:30.3954 Lock 'TRIGGER_ACCESS' is being obtained: 6d39dcf9-1ca5-4660-9a87-a6a8d9eb0e9a
2018-12-31 11:42:30.3954 Lock 'TRIGGER_ACCESS' given to: 6d39dcf9-1ca5-4660-9a87-a6a8d9eb0e9a
2018-12-31 11:42:30.4279 Prepared SQL: SELECT TRIGGER_STATE FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup
2018-12-31 11:42:30.4525 Prepared SQL: SELECT JOB_NAME,JOB_GROUP,DESCRIPTION,JOB_CLASS_NAME,IS_DURABLE,REQUESTS_RECOVERY,JOB_DATA FROM QRTZ_JOB_DETAILS WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup
2018-12-31 11:42:30.4922 Prepared SQL: UPDATE QRTZ_FIRED_TRIGGERS SET INSTANCE_NAME = @instanceName, FIRED_TIME = @firedTime, SCHED_TIME = @scheduledTime, STATE = @entryState, JOB_NAME = @jobName, JOB_GROUP = @jobGroup, IS_NONCONCURRENT = @isNonConcurrent, REQUESTS_RECOVERY = @requestsRecover WHERE SCHED_NAME = 'QuartzScheduler' AND ENTRY_ID = @entryId
2018-12-31 11:42:30.5115 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @state WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup AND TRIGGER_STATE = @oldState
2018-12-31 11:42:30.5332 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @state WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup AND TRIGGER_STATE = @oldState
2018-12-31 11:42:30.5541 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @state WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup AND TRIGGER_STATE = @oldState
2018-12-31 11:42:30.5743 Prepared SQL: SELECT TRIGGER_NAME FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup
2018-12-31 11:42:30.5925 Prepared SQL: UPDATE QRTZ_TRIGGERS SET JOB_NAME = @triggerJobName, JOB_GROUP = @triggerJobGroup, DESCRIPTION = @triggerDescription, NEXT_FIRE_TIME = @triggerNextFireTime, PREV_FIRE_TIME = @triggerPreviousFireTime, 
                        TRIGGER_STATE = @triggerState, TRIGGER_TYPE = @triggerType, START_TIME = @triggerStartTime, END_TIME = @triggerEndTime, CALENDAR_NAME = @triggerCalendarName, MISFIRE_INSTR = @triggerMisfireInstruction, PRIORITY = @triggerPriority
                    WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup
2018-12-31 11:42:30.6125 Prepared SQL: UPDATE QRTZ_SIMPLE_TRIGGERS SET REPEAT_COUNT = @triggerRepeatCount, REPEAT_INTERVAL = @triggerRepeatInterval, TIMES_TRIGGERED = @triggerTimesTriggered WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup
2018-12-31 11:42:30.6263 Lock 'TRIGGER_ACCESS' returned by: 6d39dcf9-1ca5-4660-9a87-a6a8d9eb0e9a
2018-12-31 11:42:30.6263 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:42:30.6561 Batch acquisition of 0 triggers
2018-12-31 11:42:30.6853 Calling Execute on job DEFAULT.AutoStopParking2
2018-12-31 11:42:30.6914 Message=[Auto stop parking process started.], EmailAddress=[], Method=[Execute], LineNumber=[54]
2018-12-31 11:42:30.6914 Message=[Getting parking with the parkingId: 2], EmailAddress=[], Method=[Execute], LineNumber=[59]
2018-12-31 11:42:30.7095 Message=[Getting the parking lot with the parkingLotId: 1], EmailAddress=[], Method=[Execute], LineNumber=[64]
2018-12-31 11:42:30.7095 Message=[Getting the parking lot with the id: 1], EmailAddress=[], Method=[Get], LineNumber=[50]
2018-12-31 11:42:30.7201 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[], Method=[Get], LineNumber=[56]
2018-12-31 11:42:30.7201 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[], Method=[Get], LineNumber=[66]
2018-12-31 11:42:30.7389 Message=[Parking vendor index is: 0], EmailAddress=[], Method=[Execute], LineNumber=[70]
2018-12-31 11:42:30.7389 Message=[Getting the user card information with the cardId: 1], EmailAddress=[], Method=[Execute], LineNumber=[72]
2018-12-31 11:42:30.7389 Message=[Getting the user card with the cardId: 1], EmailAddress=[], Method=[Get], LineNumber=[128]
2018-12-31 11:42:30.7502 Message=[Getting the user setting with the mobileNumber: +923028417241], EmailAddress=[], Method=[Execute], LineNumber=[77]
2018-12-31 11:42:30.7502 Message=[Getting user profile infomation with the mobileNumber: +923028417241], EmailAddress=[], Method=[Execute], LineNumber=[82]
2018-12-31 11:42:30.7706 Message=[Getting the device information with the mobileNumber: +923028417241], EmailAddress=[], Method=[Execute], LineNumber=[87]
2018-12-31 11:42:30.7812 Message=[Stop Time: 12/31/2018 6:42:19 AM], EmailAddress=[], Method=[Execute], LineNumber=[96]
2018-12-31 11:42:30.7812 Message=[Total seconds is: 60], EmailAddress=[], Method=[Execute], LineNumber=[98]
2018-12-31 11:42:30.7812 Message=[Going to deposit the amount with the cardNumber: 1000-0000-0000-0008], EmailAddress=[], Method=[Execute], LineNumber=[112]
2018-12-31 11:42:30.8138 Message=[Going to deposit the initial payment.], EmailAddress=[], Method=[_GetInitialParkingPaymentModel], LineNumber=[119]
2018-12-31 11:42:32.4517 Message=[Initial payment deposited.], EmailAddress=[], Method=[_GetInitialParkingPaymentModel], LineNumber=[135]
2018-12-31 11:42:32.4594 Message=[Getting the authorize payment url.], EmailAddress=[], Method=[_GetParkingAuthorizeUrl], LineNumber=[165]
2018-12-31 11:42:33.2712 Message=[Authorize payment url fetched.], EmailAddress=[], Method=[_GetParkingAuthorizeUrl], LineNumber=[180]
2018-12-31 11:42:33.2812 Message=[Getting the session from the quickpay.], EmailAddress=[], Method=[_GetPaidParkingSession], LineNumber=[187]
2018-12-31 11:42:35.6920 Message=[Session fetched from the quickpay.], EmailAddress=[], Method=[_GetPaidParkingSession], LineNumber=[199]
2018-12-31 11:42:35.6920 Message=[Going to process the card for the payment.], EmailAddress=[], Method=[_ProcessCard], LineNumber=[207]
2018-12-31 11:42:37.3714 Message=[Processed card for the payment has been successfully done.], EmailAddress=[], Method=[_ProcessCard], LineNumber=[227]
2018-12-31 11:42:37.3714 Message=[Going to get the payment details.], EmailAddress=[], Method=[_GetPaymentDetails], LineNumber=[142]
2018-12-31 11:42:38.0258 Message=[Payment details fetched.], EmailAddress=[], Method=[_GetPaymentDetails], LineNumber=[159]
2018-12-31 11:42:38.0258 Message=[Updating the parking status to stop with the parkingId: 2], EmailAddress=[], Method=[Execute], LineNumber=[120]
2018-12-31 11:42:38.0953 Message=[Getting the parking with the parkingId: 2], EmailAddress=[], Method=[Execute], LineNumber=[123]
2018-12-31 11:42:38.1267 Message=[Notification Url is: https://onesignal.com/api/v1/notifications], EmailAddress=[], Method=[RegisterPushNotification], LineNumber=[38]
2018-12-31 11:42:38.1267 Message=[App Id is: d9fb09ac-446b-46f2-bd8b-d9aa8f4f78c8], EmailAddress=[], Method=[RegisterPushNotification], LineNumber=[39]
2018-12-31 11:42:38.1267 Message=[Sender Id: 2f57ffac-813e-4c06-85f3-f6f258e57d85], EmailAddress=[], Method=[RegisterPushNotification], LineNumber=[40]
2018-12-31 11:42:39.0766 Message=[Push is send to one signal], EmailAddress=[], Method=[RegisterPushNotification], LineNumber=[63]
2018-12-31 11:42:39.0776 Message=[Json is received from the server], EmailAddress=[], Method=[RegisterPushNotification], LineNumber=[65]
2018-12-31 11:42:39.0776 Message=[Successfully deserialized the json], EmailAddress=[], Method=[RegisterPushNotification], LineNumber=[68]
2018-12-31 11:42:39.0776 Message=[Auto stop parking process ended.], EmailAddress=[], Method=[Execute], LineNumber=[182]
2018-12-31 11:42:39.0776 Trigger instruction : DeleteTrigger
2018-12-31 11:42:39.1015 Lock 'TRIGGER_ACCESS' is desired by: 5d071944-b472-4be0-9e41-3a4570804fbb
2018-12-31 11:42:39.1015 Lock 'TRIGGER_ACCESS' is being obtained: 5d071944-b472-4be0-9e41-3a4570804fbb
2018-12-31 11:42:39.1015 Lock 'TRIGGER_ACCESS' given to: 5d071944-b472-4be0-9e41-3a4570804fbb
2018-12-31 11:42:39.1178 Prepared SQL: SELECT TRIGGER_STATE, NEXT_FIRE_TIME, JOB_NAME, JOB_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup
2018-12-31 11:42:39.1492 Prepared SQL: DELETE FROM QRTZ_SIMPLE_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup
2018-12-31 11:42:39.1721 Prepared SQL: DELETE FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup
2018-12-31 11:42:39.1915 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup
2018-12-31 11:42:39.2113 Prepared SQL: DELETE FROM QRTZ_JOB_DETAILS WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup
2018-12-31 11:42:39.2113 Deleting job: DEFAULT.AutoStopParking2
2018-12-31 11:42:39.2279 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @state WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup AND TRIGGER_STATE = @oldState
2018-12-31 11:42:39.2495 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @state WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup AND TRIGGER_STATE = @oldState
2018-12-31 11:42:39.2736 Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND ENTRY_ID = @triggerEntryId
2018-12-31 11:42:39.2921 Lock 'TRIGGER_ACCESS' returned by: 5d071944-b472-4be0-9e41-3a4570804fbb
2018-12-31 11:42:39.2921 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:42:39.3101 Batch acquisition of 0 triggers
2018-12-31 11:42:51.4588 Scanning for misfires...
2018-12-31 11:42:51.4588 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-31 11:42:51.4802 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:42:51.4979 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 11:42:51.5016 Batch acquisition of 0 triggers
2018-12-31 11:43:06.4715 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:43:06.4990 Batch acquisition of 0 triggers
2018-12-31 11:43:19.6780 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:43:19.7097 Batch acquisition of 0 triggers
2018-12-31 11:43:33.8653 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:43:33.8931 Batch acquisition of 0 triggers
2018-12-31 11:43:46.2378 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:43:46.2587 Batch acquisition of 0 triggers
2018-12-31 11:43:51.4802 Scanning for misfires...
2018-12-31 11:43:51.4831 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-31 11:43:51.4831 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 11:44:00.0699 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:44:00.0982 Batch acquisition of 0 triggers
2018-12-31 11:44:12.4224 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:44:12.4406 Batch acquisition of 0 triggers
2018-12-31 11:44:27.3200 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:44:27.3480 Batch acquisition of 0 triggers
2018-12-31 11:44:39.6834 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:44:39.7003 Batch acquisition of 0 triggers
2018-12-31 11:44:51.4931 Scanning for misfires...
2018-12-31 11:44:51.4931 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-31 11:44:51.5174 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 11:44:53.8313 Message=[Start parking process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[92]
2018-12-31 11:44:53.8313 Message=[Getting device information with the mobileNumber: +923028417241], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[104]
2018-12-31 11:44:53.8521 Message=[Getting user setting with the mobileNumber: +923028417241], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[109]
2018-12-31 11:44:53.8731 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:44:53.8759 Message=[Getting the user profile information: +923028417241], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[114]
2018-12-31 11:44:53.9142 Batch acquisition of 0 triggers
2018-12-31 11:44:53.9142 Message=[Getting parking lot with the Id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[119]
2018-12-31 11:44:53.9142 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 11:44:53.9462 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 11:44:53.9672 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 11:44:53.9872 Message=[Parking vendor index is: 0], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[125]
2018-12-31 11:44:53.9872 Message=[Getting user card information with the cardId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[127]
2018-12-31 11:44:53.9872 Message=[Getting the user card with the cardId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[128]
2018-12-31 11:44:54.0092 Message=[Getting vehicle information with the mobileNumber: +923028417241], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[132]
2018-12-31 11:44:54.0310 Message=[Getting parking information with the parkingId: 0], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[138]
2018-12-31 11:44:54.0587 Message=[Parking total price is of: 10], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[207]
2018-12-31 11:44:54.0587 Message=[Calculated price of minutes 1 is 0.1666666666666666666666666667: ], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[210]
2018-12-31 11:44:54.0587 Message=[Adding the new parking in the system.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[261]
2018-12-31 11:44:54.1496 Message=[Background service register event.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[266]
2018-12-31 11:44:54.1496 Lock 'TRIGGER_ACCESS' is desired by: a25bbc3e-4616-48e5-b513-f2c7c527133b
2018-12-31 11:44:54.1496 Lock 'TRIGGER_ACCESS' is being obtained: a25bbc3e-4616-48e5-b513-f2c7c527133b
2018-12-31 11:44:54.1496 Lock 'TRIGGER_ACCESS' given to: a25bbc3e-4616-48e5-b513-f2c7c527133b
2018-12-31 11:44:54.1554 Prepared SQL: SELECT JOB_NAME FROM QRTZ_JOB_DETAILS WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup
2018-12-31 11:44:54.1769 Message=[Start parking process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[StartParking], LineNumber=[290]
2018-12-31 11:44:54.1988 Prepared SQL: INSERT INTO QRTZ_JOB_DETAILS (SCHED_NAME, JOB_NAME, JOB_GROUP, DESCRIPTION, JOB_CLASS_NAME, IS_DURABLE, IS_NONCONCURRENT, IS_UPDATE_DATA, REQUESTS_RECOVERY, JOB_DATA)  VALUES('QuartzScheduler', @jobName, @jobGroup, @jobDescription, @jobType, @jobDurable, @jobVolatile, @jobStateful, @jobRequestsRecovery, @jobDataMap)
2018-12-31 11:44:54.2365 Prepared SQL: SELECT TRIGGER_NAME FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup
2018-12-31 11:44:54.2514 Prepared SQL: SELECT TRIGGER_GROUP FROM QRTZ_PAUSED_TRIGGER_GRPS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_GROUP = @triggerGroup
2018-12-31 11:44:54.2651 Prepared SQL: SELECT TRIGGER_GROUP FROM QRTZ_PAUSED_TRIGGER_GRPS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_GROUP = @triggerGroup
2018-12-31 11:44:54.2804 Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup
2018-12-31 11:44:54.2970 Prepared SQL: INSERT INTO QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP, JOB_NAME, JOB_GROUP, DESCRIPTION, NEXT_FIRE_TIME, PREV_FIRE_TIME, TRIGGER_STATE, TRIGGER_TYPE, START_TIME, END_TIME, CALENDAR_NAME, MISFIRE_INSTR, JOB_DATA, PRIORITY)  
                        VALUES('QuartzScheduler', @triggerName, @triggerGroup, @triggerJobName, @triggerJobGroup, @triggerDescription, @triggerNextFireTime, @triggerPreviousFireTime, @triggerState, @triggerType, @triggerStartTime, @triggerEndTime, @triggerCalendarName, @triggerMisfireInstruction, @triggerJobJobDataMap, @triggerPriority)
2018-12-31 11:44:54.3132 Prepared SQL: INSERT INTO QRTZ_SIMPLE_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP, REPEAT_COUNT, REPEAT_INTERVAL, TIMES_TRIGGERED)  VALUES('QuartzScheduler', @triggerName, @triggerGroup, @triggerRepeatCount, @triggerRepeatInterval, @triggerTimesTriggered)
2018-12-31 11:44:54.3132 Lock 'TRIGGER_ACCESS' returned by: a25bbc3e-4616-48e5-b513-f2c7c527133b
2018-12-31 11:44:54.3132 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:44:54.3432 Batch acquisition of 0 triggers
2018-12-31 11:45:07.1917 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:45:07.2192 Batch acquisition of 0 triggers
2018-12-31 11:45:21.3781 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:45:21.4063 Batch acquisition of 0 triggers
2018-12-31 11:45:35.0016 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:45:35.0319 Batch acquisition of 0 triggers
2018-12-31 11:45:49.2388 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:45:49.2659 Prepared SQL: SELECT JOB_NAME,JOB_GROUP,DESCRIPTION,NEXT_FIRE_TIME,PREV_FIRE_TIME,TRIGGER_TYPE,START_TIME,END_TIME,CALENDAR_NAME,MISFIRE_INSTR,PRIORITY,JOB_DATA FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup
2018-12-31 11:45:49.2889 Prepared SQL: SELECT * FROM QRTZ_SIMPLE_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup
2018-12-31 11:45:49.3023 Prepared SQL: SELECT JOB_NAME,JOB_GROUP,DESCRIPTION,JOB_CLASS_NAME,IS_DURABLE,REQUESTS_RECOVERY,JOB_DATA FROM QRTZ_JOB_DETAILS WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup
2018-12-31 11:45:49.3165 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup AND TRIGGER_STATE = @oldState AND NEXT_FIRE_TIME = @nextFireTime
2018-12-31 11:45:49.3352 Prepared SQL: INSERT INTO QRTZ_FIRED_TRIGGERS (SCHED_NAME, ENTRY_ID, TRIGGER_NAME, TRIGGER_GROUP, INSTANCE_NAME, FIRED_TIME, SCHED_TIME, STATE, JOB_NAME, JOB_GROUP, IS_NONCONCURRENT, REQUESTS_RECOVERY, PRIORITY) VALUES('QuartzScheduler', @triggerEntryId, @triggerName, @triggerGroup, @triggerInstanceName, @triggerFireTime, @triggerScheduledTime, @triggerState, @triggerJobName, @triggerJobGroup, @triggerJobStateful, @triggerJobRequestsRecovery, @triggerPriority)
2018-12-31 11:45:49.3476 Batch acquisition of 1 triggers
2018-12-31 11:45:51.4997 Scanning for misfires...
2018-12-31 11:45:51.4997 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-31 11:45:51.5234 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 11:46:04.1513 Lock 'TRIGGER_ACCESS' is desired by: a2e314d4-165c-413d-9e06-a6be7e03a2f9
2018-12-31 11:46:04.1513 Lock 'TRIGGER_ACCESS' is being obtained: a2e314d4-165c-413d-9e06-a6be7e03a2f9
2018-12-31 11:46:04.1601 Lock 'TRIGGER_ACCESS' given to: a2e314d4-165c-413d-9e06-a6be7e03a2f9
2018-12-31 11:46:04.1722 Prepared SQL: SELECT TRIGGER_STATE FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup
2018-12-31 11:46:04.1897 Prepared SQL: SELECT JOB_NAME,JOB_GROUP,DESCRIPTION,JOB_CLASS_NAME,IS_DURABLE,REQUESTS_RECOVERY,JOB_DATA FROM QRTZ_JOB_DETAILS WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup
2018-12-31 11:46:04.2034 Prepared SQL: UPDATE QRTZ_FIRED_TRIGGERS SET INSTANCE_NAME = @instanceName, FIRED_TIME = @firedTime, SCHED_TIME = @scheduledTime, STATE = @entryState, JOB_NAME = @jobName, JOB_GROUP = @jobGroup, IS_NONCONCURRENT = @isNonConcurrent, REQUESTS_RECOVERY = @requestsRecover WHERE SCHED_NAME = 'QuartzScheduler' AND ENTRY_ID = @entryId
2018-12-31 11:46:04.2187 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @state WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup AND TRIGGER_STATE = @oldState
2018-12-31 11:46:04.2391 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @state WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup AND TRIGGER_STATE = @oldState
2018-12-31 11:46:04.2593 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @state WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup AND TRIGGER_STATE = @oldState
2018-12-31 11:46:04.2793 Prepared SQL: SELECT TRIGGER_NAME FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup
2018-12-31 11:46:04.2912 Prepared SQL: UPDATE QRTZ_TRIGGERS SET JOB_NAME = @triggerJobName, JOB_GROUP = @triggerJobGroup, DESCRIPTION = @triggerDescription, NEXT_FIRE_TIME = @triggerNextFireTime, PREV_FIRE_TIME = @triggerPreviousFireTime, 
                        TRIGGER_STATE = @triggerState, TRIGGER_TYPE = @triggerType, START_TIME = @triggerStartTime, END_TIME = @triggerEndTime, CALENDAR_NAME = @triggerCalendarName, MISFIRE_INSTR = @triggerMisfireInstruction, PRIORITY = @triggerPriority
                    WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup
2018-12-31 11:46:04.3061 Prepared SQL: UPDATE QRTZ_SIMPLE_TRIGGERS SET REPEAT_COUNT = @triggerRepeatCount, REPEAT_INTERVAL = @triggerRepeatInterval, TIMES_TRIGGERED = @triggerTimesTriggered WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup
2018-12-31 11:46:04.3179 Lock 'TRIGGER_ACCESS' returned by: a2e314d4-165c-413d-9e06-a6be7e03a2f9
2018-12-31 11:46:04.3179 Calling Execute on job DEFAULT.AutoStopParking1
2018-12-31 11:46:04.3179 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:46:04.3389 Message=[Auto stop parking process started.], EmailAddress=[], Method=[Execute], LineNumber=[54]
2018-12-31 11:46:04.3389 Message=[Getting parking with the parkingId: 1], EmailAddress=[], Method=[Execute], LineNumber=[59]
2018-12-31 11:46:04.3497 Batch acquisition of 0 triggers
2018-12-31 11:46:04.3497 Message=[Getting the parking lot with the parkingLotId: 1], EmailAddress=[], Method=[Execute], LineNumber=[64]
2018-12-31 11:46:04.3497 Message=[Getting the parking lot with the id: 1], EmailAddress=[], Method=[Get], LineNumber=[50]
2018-12-31 11:46:04.3616 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[], Method=[Get], LineNumber=[56]
2018-12-31 11:46:04.3616 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[], Method=[Get], LineNumber=[66]
2018-12-31 11:46:04.3801 Message=[Parking vendor index is: 0], EmailAddress=[], Method=[Execute], LineNumber=[70]
2018-12-31 11:46:04.3801 Message=[Getting the user card information with the cardId: 1], EmailAddress=[], Method=[Execute], LineNumber=[72]
2018-12-31 11:46:04.3801 Message=[Getting the user card with the cardId: 1], EmailAddress=[], Method=[Get], LineNumber=[128]
2018-12-31 11:46:04.3919 Message=[Getting the user setting with the mobileNumber: +923028417241], EmailAddress=[], Method=[Execute], LineNumber=[77]
2018-12-31 11:46:04.3919 Message=[Getting user profile infomation with the mobileNumber: +923028417241], EmailAddress=[], Method=[Execute], LineNumber=[82]
2018-12-31 11:46:04.4112 Message=[Getting the device information with the mobileNumber: +923028417241], EmailAddress=[], Method=[Execute], LineNumber=[87]
2018-12-31 11:46:04.4203 Message=[Stop Time: 12/31/2018 6:45:53 AM], EmailAddress=[], Method=[Execute], LineNumber=[96]
2018-12-31 11:46:04.4203 Message=[Total seconds is: 60], EmailAddress=[], Method=[Execute], LineNumber=[98]
2018-12-31 11:46:04.4203 Message=[Going to deposit the amount with the cardNumber: 1000-0000-0000-0008], EmailAddress=[], Method=[Execute], LineNumber=[112]
2018-12-31 11:46:04.4203 Message=[Going to deposit the initial payment.], EmailAddress=[], Method=[_GetInitialParkingPaymentModel], LineNumber=[119]
2018-12-31 11:46:05.6571 Message=[Initial payment deposited.], EmailAddress=[], Method=[_GetInitialParkingPaymentModel], LineNumber=[135]
2018-12-31 11:46:05.6571 Message=[Getting the authorize payment url.], EmailAddress=[], Method=[_GetParkingAuthorizeUrl], LineNumber=[165]
2018-12-31 11:46:06.2972 Message=[Authorize payment url fetched.], EmailAddress=[], Method=[_GetParkingAuthorizeUrl], LineNumber=[180]
2018-12-31 11:46:06.2972 Message=[Getting the session from the quickpay.], EmailAddress=[], Method=[_GetPaidParkingSession], LineNumber=[187]
2018-12-31 11:46:08.3711 Message=[Session fetched from the quickpay.], EmailAddress=[], Method=[_GetPaidParkingSession], LineNumber=[199]
2018-12-31 11:46:08.3711 Message=[Going to process the card for the payment.], EmailAddress=[], Method=[_ProcessCard], LineNumber=[207]
2018-12-31 11:46:09.7093 Message=[Processed card for the payment has been successfully done.], EmailAddress=[], Method=[_ProcessCard], LineNumber=[227]
2018-12-31 11:46:09.7093 Message=[Going to get the payment details.], EmailAddress=[], Method=[_GetPaymentDetails], LineNumber=[142]
2018-12-31 11:46:10.6535 Message=[Payment details fetched.], EmailAddress=[], Method=[_GetPaymentDetails], LineNumber=[159]
2018-12-31 11:46:10.6535 Message=[Updating the parking status to stop with the parkingId: 1], EmailAddress=[], Method=[Execute], LineNumber=[120]
2018-12-31 11:46:10.6749 Message=[Getting the parking with the parkingId: 1], EmailAddress=[], Method=[Execute], LineNumber=[123]
2018-12-31 11:46:10.6924 Message=[Notification Url is: https://onesignal.com/api/v1/notifications], EmailAddress=[], Method=[RegisterPushNotification], LineNumber=[38]
2018-12-31 11:46:10.6924 Message=[App Id is: d9fb09ac-446b-46f2-bd8b-d9aa8f4f78c8], EmailAddress=[], Method=[RegisterPushNotification], LineNumber=[39]
2018-12-31 11:46:10.6924 Message=[Sender Id: 2f57ffac-813e-4c06-85f3-f6f258e57d85], EmailAddress=[], Method=[RegisterPushNotification], LineNumber=[40]
2018-12-31 11:46:11.5765 Message=[Push is send to one signal], EmailAddress=[], Method=[RegisterPushNotification], LineNumber=[63]
2018-12-31 11:46:11.5774 Message=[Json is received from the server], EmailAddress=[], Method=[RegisterPushNotification], LineNumber=[65]
2018-12-31 11:46:11.5774 Message=[Successfully deserialized the json], EmailAddress=[], Method=[RegisterPushNotification], LineNumber=[68]
2018-12-31 11:46:11.5774 Message=[Goint to send the parking receipt with the parkingId: 1], EmailAddress=[], Method=[Execute], LineNumber=[154]
2018-12-31 11:46:11.5774 Message=[Getting the user profile information with the mobileNumber: +923028417241], EmailAddress=[], Method=[Execute], LineNumber=[155]
2018-12-31 11:46:11.5774 Message=[Getting the parking report with the parkingId: 1], EmailAddress=[], Method=[Execute], LineNumber=[163]
2018-12-31 11:46:11.6226 Message=[Going to convert the parking report to pdf with the parkingId:1], EmailAddress=[], Method=[Execute], LineNumber=[173]
2018-12-31 11:46:15.3700 Message=[Auto stop parking process ended.], EmailAddress=[], Method=[Execute], LineNumber=[182]
2018-12-31 11:46:15.3700 Trigger instruction : DeleteTrigger
2018-12-31 11:46:15.3700 Lock 'TRIGGER_ACCESS' is desired by: 3b6754af-09c9-4183-a296-cda616190cac
2018-12-31 11:46:15.3700 Lock 'TRIGGER_ACCESS' is being obtained: 3b6754af-09c9-4183-a296-cda616190cac
2018-12-31 11:46:15.3741 Lock 'TRIGGER_ACCESS' given to: 3b6754af-09c9-4183-a296-cda616190cac
2018-12-31 11:46:15.3741 Prepared SQL: SELECT TRIGGER_STATE, NEXT_FIRE_TIME, JOB_NAME, JOB_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup
2018-12-31 11:46:15.3741 Prepared SQL: DELETE FROM QRTZ_SIMPLE_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup
2018-12-31 11:46:15.4030 Prepared SQL: DELETE FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_NAME = @triggerName AND TRIGGER_GROUP = @triggerGroup
2018-12-31 11:46:15.4202 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup
2018-12-31 11:46:15.4324 Prepared SQL: DELETE FROM QRTZ_JOB_DETAILS WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup
2018-12-31 11:46:15.4324 Deleting job: DEFAULT.AutoStopParking1
2018-12-31 11:46:15.4454 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @state WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup AND TRIGGER_STATE = @oldState
2018-12-31 11:46:15.4575 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @state WHERE SCHED_NAME = 'QuartzScheduler' AND JOB_NAME = @jobName AND JOB_GROUP = @jobGroup AND TRIGGER_STATE = @oldState
2018-12-31 11:46:15.4772 Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND ENTRY_ID = @triggerEntryId
2018-12-31 11:46:15.4885 Lock 'TRIGGER_ACCESS' returned by: 3b6754af-09c9-4183-a296-cda616190cac
2018-12-31 11:46:15.4885 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:46:15.5043 Batch acquisition of 0 triggers
2018-12-31 11:46:28.9334 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:46:28.9684 Batch acquisition of 0 triggers
2018-12-31 11:46:42.7315 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 11:46:42.7678 Batch acquisition of 0 triggers
2018-12-31 19:11:18.1947 Registering datasource 'SR-53\MSSQL' with db provider: 'Quartz.Impl.AdoJobStore.Common.DbProvider'
2018-12-31 19:11:18.2674 Using object serializer: Quartz.Simpl.JsonObjectSerializer, Quartz.Serialization.Json
2018-12-31 19:11:18.3014 TaskSchedulingThreadPool configured with max concurrency of 10 and TaskScheduler ThreadPoolTaskScheduler.
2018-12-31 19:11:18.4682 Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2018-12-31 19:11:18.5365 Quartz Scheduler v.3.0.7.0 created.
2018-12-31 19:11:18.5488 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.SimpleTriggerPersistenceDelegate
2018-12-31 19:11:18.5488 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CronTriggerPersistenceDelegate
2018-12-31 19:11:18.5488 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CalendarIntervalTriggerPersistenceDelegate
2018-12-31 19:11:18.5488 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.DailyTimeIntervalTriggerPersistenceDelegate
2018-12-31 19:11:18.5488 Using thread monitor-based data access locking (synchronization).
2018-12-31 19:11:18.5695 JobStoreTX initialized.
2018-12-31 19:11:18.5695 Scheduler meta-data: Quartz Scheduler (v3.0.7.0) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'Quartz.Core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'Quartz.Simpl.DefaultThreadPool' - with 10 threads.
  Using job-store 'Quartz.Impl.AdoJobStore.JobStoreTX' - which supports persistence. and is not clustered.

2018-12-31 19:11:18.5695 Quartz scheduler 'QuartzScheduler' initialized
2018-12-31 19:11:18.5695 Quartz scheduler version: 3.0.7.0
2018-12-31 19:11:18.5785 JobFactory set to: BackgroundSchedulers.JobFactory
2018-12-31 19:11:18.6046 Lock 'TRIGGER_ACCESS' is desired by: 95e6ee34-7dc1-44d7-b085-4b2c5eb7dae3
2018-12-31 19:11:18.6046 Lock 'TRIGGER_ACCESS' is being obtained: 95e6ee34-7dc1-44d7-b085-4b2c5eb7dae3
2018-12-31 19:11:18.6046 Lock 'TRIGGER_ACCESS' given to: 95e6ee34-7dc1-44d7-b085-4b2c5eb7dae3
2018-12-31 19:11:18.7914 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2018-12-31 19:11:18.8995 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2018-12-31 19:11:18.9147 Freed 0 triggers from 'acquired' / 'blocked' state.
2018-12-31 19:11:18.9249 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:11:18.9530 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 19:11:18.9530 Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND INSTANCE_NAME = @instanceName AND REQUESTS_RECOVERY = @requestsRecovery
2018-12-31 19:11:18.9807 Recovering 0 jobs that were in-progress at the time of the last shut-down.
2018-12-31 19:11:18.9807 Recovery complete.
2018-12-31 19:11:18.9883 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state
2018-12-31 19:11:19.0041 Removed 0 'complete' triggers.
2018-12-31 19:11:19.0041 Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler'
2018-12-31 19:11:19.0219 Removed 0 stale fired job entries.
2018-12-31 19:11:19.0219 Lock 'TRIGGER_ACCESS' returned by: 95e6ee34-7dc1-44d7-b085-4b2c5eb7dae3
2018-12-31 19:11:19.0471 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2018-12-31 19:11:19.0471 Scanning for misfires...
2018-12-31 19:11:19.0744 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-31 19:11:19.1104 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:11:19.1254 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 19:11:19.1436 Batch acquisition of 0 triggers
2018-12-31 19:11:22.8581 JobFactory set to: BackgroundSchedulers.JobFactory
2018-12-31 19:11:22.8581 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2018-12-31 19:11:22.8581 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:11:22.8758 Batch acquisition of 0 triggers
2018-12-31 19:11:22.9943 Message=[Login process started.], EmailAddress=[], Method=[Login], LineNumber=[366]
2018-12-31 19:11:22.9943 Message=[Getting user with the username: +923028417241], EmailAddress=[], Method=[Login], LineNumber=[368]
2018-12-31 19:11:23.5241 Message=[Password sign for the user with the username: +923028417241], EmailAddress=[], Method=[Login], LineNumber=[372]
2018-12-31 19:11:23.5241 Message=[Getting roles of the user.], EmailAddress=[], Method=[Login], LineNumber=[376]
2018-12-31 19:11:23.6131 Message=[Generating token of user with the username: +923028417241 and role: User], EmailAddress=[], Method=[Login], LineNumber=[378]
2018-12-31 19:11:23.6384 Message=[Login process ended.], EmailAddress=[], Method=[Login], LineNumber=[389]
2018-12-31 19:11:37.6443 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:11:37.6657 Batch acquisition of 0 triggers
2018-12-31 19:11:40.9780 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:11:40.9780 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:11:40.9780 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:11:41.2164 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:11:41.2392 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:11:41.2677 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:11:41.2951 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:11:41.3193 Message=[Converted price is: 10,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:11:41.3193 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:11:50.3878 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:11:50.4138 Batch acquisition of 0 triggers
2018-12-31 19:11:50.9821 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:11:50.9848 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:11:50.9848 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:11:51.0062 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:11:51.0304 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:11:51.0519 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:11:51.0722 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:11:51.0722 Message=[Converted price is: 20,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:11:51.0722 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:11:55.8425 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:11:55.8425 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:11:55.8425 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:11:55.8619 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:11:55.8807 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:11:55.8995 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:11:55.9165 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:11:55.9165 Message=[Converted price is: 30,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:11:55.9165 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:12:02.4934 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:12:02.5303 Batch acquisition of 0 triggers
2018-12-31 19:12:04.1137 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:12:04.1137 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:12:04.1137 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:12:04.1425 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:12:04.1608 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:12:04.1796 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:12:04.1978 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:12:04.1978 Message=[Converted price is: 20,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:12:04.1978 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:12:07.5548 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:12:07.5548 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:12:07.5548 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:12:07.5759 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:12:07.6013 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:12:07.6261 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:12:07.6467 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:12:07.6467 Message=[Converted price is: 20,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:12:07.6467 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:12:15.4573 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:12:15.4784 Batch acquisition of 0 triggers
2018-12-31 19:12:19.0535 Scanning for misfires...
2018-12-31 19:12:19.0535 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-31 19:12:19.0721 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 19:12:21.0263 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:12:21.0263 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:12:21.0263 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:12:21.0450 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:12:21.0618 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:12:21.0815 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:12:21.0984 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:12:21.0984 Message=[Converted price is: 20,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:12:21.0984 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:12:25.7083 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:12:25.7083 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:12:25.7083 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:12:25.7330 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:12:25.7532 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:12:25.7719 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:12:25.7895 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:12:25.7895 Message=[Converted price is: 20,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:12:25.7895 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:12:28.1046 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:12:28.1320 Batch acquisition of 0 triggers
2018-12-31 19:12:40.7853 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:12:40.7853 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:12:40.7853 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:12:40.8064 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:12:40.8281 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:12:40.8586 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:12:40.8767 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:12:40.8767 Message=[Converted price is: 20,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:12:40.8767 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:12:41.5529 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:12:41.5853 Batch acquisition of 0 triggers
2018-12-31 19:12:44.0156 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:12:44.0156 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:12:44.0156 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:12:44.0455 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:12:44.0674 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:12:44.0857 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:12:44.1027 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:12:44.1027 Message=[Converted price is: 20,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:12:44.1027 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:12:48.2098 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:12:48.2098 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:12:48.2185 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:12:48.2371 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:12:48.2562 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:12:48.2762 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:12:48.2952 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:12:48.2968 Message=[Converted price is: 20,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:12:48.2968 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:12:51.4910 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:12:51.4910 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:12:51.4910 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:12:51.5102 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:12:51.5303 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:12:51.5506 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:12:51.5726 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:12:51.5726 Message=[Converted price is: 20,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:12:51.5726 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:12:54.4191 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:12:54.4459 Batch acquisition of 0 triggers
2018-12-31 19:12:55.7156 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:12:55.7156 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:12:55.7179 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:12:55.7360 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:12:55.7521 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:12:55.7686 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:12:55.7846 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:12:55.7846 Message=[Converted price is: 20,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:12:55.7846 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:13:07.5175 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:13:07.5498 Batch acquisition of 0 triggers
2018-12-31 19:13:10.9272 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:13:10.9272 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:13:10.9272 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:13:10.9485 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:13:10.9679 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:13:10.9883 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:13:11.0066 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:13:11.0066 Message=[Converted price is: 30,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:13:11.0066 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:13:19.0535 Scanning for misfires...
2018-12-31 19:13:19.0535 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-31 19:13:19.0788 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 19:13:19.9642 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:13:19.9642 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:13:19.9642 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:13:19.9836 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:13:20.0018 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:13:20.0200 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:13:20.0390 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:13:20.0390 Message=[Converted price is: 30,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:13:20.0390 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:13:20.6585 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:13:20.6898 Batch acquisition of 0 triggers
2018-12-31 19:13:29.1522 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:13:29.1522 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:13:29.1522 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:13:29.1771 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:13:29.1955 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:13:29.2138 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:13:29.2322 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:13:42.5253 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:13:59.7137 Batch acquisition of 0 triggers
2018-12-31 19:14:07.1738 Message=[Converted price is: 30,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:14:07.1738 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:14:19.0624 Scanning for misfires...
2018-12-31 19:14:19.0624 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-31 19:14:19.0878 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 19:14:20.3495 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:14:20.3495 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:14:20.3495 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:14:20.3771 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:14:20.3942 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:14:20.4118 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:14:20.4293 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:14:20.4293 Message=[Converted price is: 30,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:14:20.4293 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:14:20.9512 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:14:20.9813 Batch acquisition of 0 triggers
2018-12-31 19:14:33.9545 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:14:33.9751 Batch acquisition of 0 triggers
2018-12-31 19:14:48.0608 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:14:48.0784 Batch acquisition of 0 triggers
2018-12-31 19:15:02.3007 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:15:02.3286 Batch acquisition of 0 triggers
2018-12-31 19:15:16.6170 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:15:16.6455 Batch acquisition of 0 triggers
2018-12-31 19:15:19.0669 Scanning for misfires...
2018-12-31 19:15:19.0669 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-31 19:15:19.0949 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 19:15:31.3691 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:15:31.3872 Batch acquisition of 0 triggers
2018-12-31 19:15:31.8879 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:15:31.8879 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:15:31.8900 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:15:31.9083 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:15:31.9261 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:15:31.9444 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:15:31.9619 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:15:31.9619 Message=[Converted price is: 30,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:15:31.9619 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:15:37.4760 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:15:37.4760 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:15:37.4760 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:15:37.4979 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:15:37.5163 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:15:37.5347 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:15:37.5510 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:15:46.4671 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:15:47.0975 Batch acquisition of 0 triggers
2018-12-31 19:16:00.5927 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:16:01.6097 Message=[Converted price is: 30,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:16:01.6097 Batch acquisition of 0 triggers
2018-12-31 19:16:01.6097 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:16:15.7203 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:16:15.7491 Batch acquisition of 0 triggers
2018-12-31 19:16:19.0774 Scanning for misfires...
2018-12-31 19:16:19.0774 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-31 19:16:19.1052 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 19:16:28.2836 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:16:28.3181 Batch acquisition of 0 triggers
2018-12-31 19:16:42.6536 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:16:42.6776 Batch acquisition of 0 triggers
2018-12-31 19:16:56.2525 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:16:56.2694 Batch acquisition of 0 triggers
2018-12-31 19:17:09.0535 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:17:09.0710 Batch acquisition of 0 triggers
2018-12-31 19:17:12.3233 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:17:12.3233 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:17:12.3233 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:17:12.3550 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:17:12.3756 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:17:12.3946 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:17:12.4134 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:17:14.9227 Message=[Converted price is: 240,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:17:14.9227 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:17:19.0804 Scanning for misfires...
2018-12-31 19:17:19.0804 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-31 19:17:19.1076 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 19:17:22.0915 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:17:22.1174 Batch acquisition of 0 triggers
2018-12-31 19:17:36.6867 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:17:36.6867 Batch acquisition of 0 triggers
2018-12-31 19:17:36.8039 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:17:36.8039 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:17:36.8039 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:17:36.8348 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:17:36.8533 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:17:36.8714 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:17:36.8881 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:17:52.0788 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:17:52.8747 Batch acquisition of 0 triggers
2018-12-31 19:18:12.8771 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:18:16.2948 Message=[Converted price is: 240,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:18:16.3019 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:18:16.3019 Batch acquisition of 0 triggers
2018-12-31 19:18:19.0815 Scanning for misfires...
2018-12-31 19:18:19.0815 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-31 19:18:19.1066 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 19:18:28.7899 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:18:28.8167 Batch acquisition of 0 triggers
2018-12-31 19:18:42.0057 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:18:42.0321 Batch acquisition of 0 triggers
2018-12-31 19:18:56.0907 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:18:56.1190 Batch acquisition of 0 triggers
2018-12-31 19:19:09.7255 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:19:09.7567 Batch acquisition of 0 triggers
2018-12-31 19:19:16.5258 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:19:16.5258 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:19:16.5258 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:19:16.5466 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:19:16.5660 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:19:16.5857 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:19:16.6051 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:19:16.6051 Message=[Converted price is: 46,67 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:19:16.6051 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:19:19.0935 Scanning for misfires...
2018-12-31 19:19:19.0935 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-31 19:19:19.1172 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 19:19:22.4788 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:19:22.4973 Batch acquisition of 0 triggers
2018-12-31 19:19:31.2382 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:19:31.2382 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:19:31.2382 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:19:31.2803 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:19:31.3164 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:19:31.3425 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:19:31.3634 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:19:31.3634 Message=[Converted price is: 50,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:19:31.3634 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:19:34.6913 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:19:34.7181 Batch acquisition of 0 triggers
2018-12-31 19:19:40.1618 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:19:40.1618 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:19:40.1618 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:19:40.1962 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:19:40.2149 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:19:40.2339 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:19:40.2509 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:19:40.2509 Message=[Converted price is: 60,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:19:40.2509 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:19:46.0524 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:19:46.0524 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:19:46.0524 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:19:46.0745 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:19:46.0929 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:19:46.1116 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:19:46.1288 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:19:46.1288 Message=[Converted price is: 120,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:19:46.1288 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:19:47.6664 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:19:47.6879 Batch acquisition of 0 triggers
2018-12-31 19:19:50.8634 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:19:50.8634 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:19:50.8634 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:19:50.8917 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:19:50.9111 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:19:50.9286 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:19:50.9454 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:19:50.9454 Message=[Converted price is: 166,67 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:19:50.9454 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:19:59.8502 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:19:59.8502 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:19:59.8502 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:19:59.8695 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:19:59.8882 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:19:59.9066 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:19:59.9244 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:19:59.9244 Message=[Converted price is: 200,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:19:59.9244 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:20:00.4048 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:20:00.4048 Batch acquisition of 0 triggers
2018-12-31 19:20:03.8016 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:20:03.8016 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:20:03.8016 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:20:03.8229 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:20:03.8417 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:20:03.8620 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:20:03.8815 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:20:03.8815 Message=[Converted price is: 200,17 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:20:03.8815 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:20:14.0539 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:20:14.0750 Batch acquisition of 0 triggers
2018-12-31 19:20:19.0945 Scanning for misfires...
2018-12-31 19:20:19.0945 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-31 19:20:19.1179 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 19:20:20.5557 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:20:20.5557 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:20:20.5557 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:20:20.5818 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:20:20.6025 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:20:20.6222 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:20:20.6438 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:20:20.6438 Message=[Converted price is: 233,33 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:20:20.6438 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:20:25.8666 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:20:25.8666 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:20:25.8666 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:20:25.8972 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:20:25.9209 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:20:25.9435 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:20:25.9619 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:20:25.9619 Message=[Converted price is: 240,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:20:25.9619 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:20:26.6823 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:20:26.7097 Batch acquisition of 0 triggers
2018-12-31 19:20:30.9561 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:20:30.9561 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:20:30.9561 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:20:30.9776 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:20:30.9966 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:20:31.0158 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:20:31.0359 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:20:31.0359 Message=[Converted price is: 296,67 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:20:31.0359 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:20:36.6824 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:20:36.6824 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:20:36.6824 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:20:36.7100 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:20:36.7281 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:20:36.7474 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:20:36.7654 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:20:36.7654 Message=[Converted price is: 296,67 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:20:36.7654 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:20:38.8852 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:20:38.8995 Batch acquisition of 0 triggers
2018-12-31 19:20:42.3706 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:20:42.3706 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:20:42.3706 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:20:42.3916 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:20:42.4107 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:20:42.4293 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:20:42.4464 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:20:42.4464 Message=[Converted price is: 310,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:20:42.4464 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:20:46.6956 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:20:46.6956 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:20:46.6956 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:20:46.7156 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:20:46.7342 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:20:46.7532 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:20:46.7711 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:20:46.7711 Message=[Converted price is: 326,67 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:20:46.7711 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:20:52.9501 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:20:52.9774 Batch acquisition of 0 triggers
2018-12-31 19:21:07.3812 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:21:07.4108 Batch acquisition of 0 triggers
2018-12-31 19:21:19.0936 Scanning for misfires...
2018-12-31 19:21:19.0936 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-31 19:21:19.0936 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 19:21:20.4984 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:21:20.5163 Batch acquisition of 0 triggers
2018-12-31 19:21:33.6893 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:21:33.7237 Batch acquisition of 0 triggers
2018-12-31 19:21:47.2837 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:21:47.3006 Batch acquisition of 0 triggers
2018-12-31 19:21:50.4328 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:21:50.4328 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:21:50.4328 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:21:50.4545 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:21:50.4731 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:21:50.4925 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:21:50.5119 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:21:50.5119 Message=[Converted price is: 376,67 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:21:50.5119 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:22:00.1432 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:22:00.1711 Batch acquisition of 0 triggers
2018-12-31 19:22:05.3182 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:22:05.3182 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:22:05.3182 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:22:05.3382 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:22:05.3561 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:22:05.3747 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:22:05.3928 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:22:05.3928 Message=[Converted price is: 10,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:22:05.3928 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:22:14.4753 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:22:14.5008 Batch acquisition of 0 triggers
2018-12-31 19:22:19.1034 Scanning for misfires...
2018-12-31 19:22:19.1034 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-31 19:22:19.1187 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 19:22:28.8401 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:22:28.8580 Batch acquisition of 0 triggers
2018-12-31 19:22:43.7147 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:22:43.7474 Batch acquisition of 0 triggers
2018-12-31 19:22:55.7682 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:22:55.7854 Batch acquisition of 0 triggers
2018-12-31 19:23:03.7926 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:23:03.7926 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:23:03.7926 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:23:03.8142 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:23:03.8340 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:23:03.8548 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:23:03.8738 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:23:04.9992 Message=[Converted price is: 40,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:23:04.9992 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:23:08.9679 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:23:08.9956 Batch acquisition of 0 triggers
2018-12-31 19:23:18.6841 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:23:18.6841 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:23:18.6874 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:23:18.7060 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:23:18.7246 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:23:18.7431 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:23:18.7606 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:23:20.6986 Scanning for misfires...
2018-12-31 19:23:20.6986 Message=[Converted price is: 46,67 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:23:20.7026 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:23:20.7026 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-31 19:23:20.7220 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 19:23:21.2756 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:23:21.3284 Batch acquisition of 0 triggers
2018-12-31 19:23:34.1326 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:23:34.1572 Batch acquisition of 0 triggers
2018-12-31 19:23:48.8375 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:23:48.8753 Batch acquisition of 0 triggers
2018-12-31 19:23:56.2682 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:23:56.2682 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:23:56.2682 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:23:56.2929 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:23:56.3183 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:23:56.3389 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:23:56.3581 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:23:58.1224 Message=[Converted price is: 60,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:23:58.1256 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:24:02.8830 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:24:02.9111 Batch acquisition of 0 triggers
2018-12-31 19:24:12.4540 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:24:12.4540 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:24:12.4540 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:24:12.4747 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:24:12.4951 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:24:12.5153 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:24:12.5342 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:24:12.5342 Message=[Converted price is: 120,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:24:12.5342 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:24:17.3510 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:24:17.3770 Batch acquisition of 0 triggers
2018-12-31 19:24:20.7023 Scanning for misfires...
2018-12-31 19:24:20.7023 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-31 19:24:20.7272 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 19:24:23.1653 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:24:23.1653 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:24:23.1653 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:24:23.1923 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:24:23.2111 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:24:23.2296 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:24:23.2479 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:24:23.2494 Message=[Converted price is: 180,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:24:23.2494 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:24:30.8878 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:24:30.9154 Batch acquisition of 0 triggers
2018-12-31 19:24:33.0860 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:24:33.0860 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:24:33.0860 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:24:33.1071 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:24:33.1254 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:24:33.1438 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:24:33.1610 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:24:33.1610 Message=[Converted price is: 200,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:24:33.1610 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:24:40.0773 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:24:40.0773 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:24:40.0773 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:24:40.1022 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:24:40.1227 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:24:40.1461 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:24:40.1660 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:24:40.1660 Message=[Converted price is: 200,17 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:24:40.1660 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:24:44.3405 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:24:44.3679 Batch acquisition of 0 triggers
2018-12-31 19:24:57.4165 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:24:57.4453 Batch acquisition of 0 triggers
2018-12-31 19:25:10.0884 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:25:10.1163 Batch acquisition of 0 triggers
2018-12-31 19:25:17.6275 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:25:17.6275 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:25:17.6275 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:25:17.6501 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:25:17.6725 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:25:17.6956 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:25:17.7174 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:26:00.3394 Scanning for misfires...
2018-12-31 19:26:00.3394 Message=[Converted price is: 200,17 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:26:00.3394 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:26:00.3458 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:26:00.3810 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-31 19:26:00.3810 Batch acquisition of 0 triggers
2018-12-31 19:26:00.4018 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 19:26:12.9187 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:26:12.9486 Batch acquisition of 0 triggers
2018-12-31 19:26:25.4707 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:26:25.4937 Batch acquisition of 0 triggers
2018-12-31 19:26:39.6305 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:26:39.6444 Batch acquisition of 0 triggers
2018-12-31 19:26:53.6055 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:26:53.6245 Batch acquisition of 0 triggers
2018-12-31 19:27:00.3437 Scanning for misfires...
2018-12-31 19:27:00.3437 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-31 19:27:00.3598 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 19:27:07.0497 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:27:07.0660 Batch acquisition of 0 triggers
2018-12-31 19:27:19.4050 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:27:19.4294 Batch acquisition of 0 triggers
2018-12-31 19:27:34.0067 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:27:34.0553 Batch acquisition of 0 triggers
2018-12-31 19:27:46.4266 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:27:46.4557 Batch acquisition of 0 triggers
2018-12-31 19:27:59.2749 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:27:59.3006 Batch acquisition of 0 triggers
2018-12-31 19:28:00.3440 Scanning for misfires...
2018-12-31 19:28:00.3440 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-31 19:28:00.3688 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 19:28:13.7980 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:28:13.8295 Batch acquisition of 0 triggers
2018-12-31 19:28:28.4920 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:28:28.5066 Batch acquisition of 0 triggers
2018-12-31 19:28:40.8573 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:28:40.8901 Batch acquisition of 0 triggers
2018-12-31 19:28:49.8570 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:28:49.8583 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:28:49.8583 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:28:49.8775 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:28:49.8961 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:28:49.9154 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:28:49.9333 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:28:49.9333 Message=[Converted price is: 600,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:28:49.9362 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:28:54.5803 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:28:54.6060 Batch acquisition of 0 triggers
2018-12-31 19:28:55.6324 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:28:55.6324 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:28:55.6324 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:28:55.6522 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:28:55.6741 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:28:55.6922 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:28:55.7088 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:28:55.7088 Message=[Converted price is: 600,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:28:55.7088 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:28:59.0212 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:28:59.0212 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:28:59.0212 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:28:59.0450 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:28:59.0631 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:28:59.0816 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:28:59.0989 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:28:59.0989 Message=[Converted price is: 600,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:28:59.0989 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:29:00.3464 Scanning for misfires...
2018-12-31 19:29:00.3464 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-31 19:29:00.3595 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 19:29:08.7272 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:29:08.7609 Batch acquisition of 0 triggers
2018-12-31 19:29:21.4098 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:29:21.4376 Batch acquisition of 0 triggers
2018-12-31 19:29:35.6945 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:29:35.7229 Batch acquisition of 0 triggers
2018-12-31 19:29:49.4438 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:29:49.4846 Batch acquisition of 0 triggers
2018-12-31 19:30:00.3510 Scanning for misfires...
2018-12-31 19:30:00.3510 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-31 19:30:00.3693 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 19:30:01.7630 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:30:01.7907 Batch acquisition of 0 triggers
2018-12-31 19:30:13.1016 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:30:13.1016 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:30:13.1016 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:30:13.1220 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:30:13.1407 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:30:13.1612 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:30:13.1804 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:30:13.1895 Message=[Converted price is: 600,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:30:13.1895 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:30:15.8035 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:30:15.8356 Batch acquisition of 0 triggers
2018-12-31 19:30:17.0308 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:30:17.0308 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:30:17.0308 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:30:17.0512 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:30:17.0692 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:30:17.0914 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:30:17.1089 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:30:17.1089 Message=[Converted price is: 600,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:30:17.1089 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:30:21.9482 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:30:21.9482 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:30:21.9482 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:30:21.9776 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:30:21.9999 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:30:22.0193 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:30:22.0373 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:30:22.0373 Message=[Converted price is: 600,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:30:22.0373 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:30:26.9255 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:30:26.9255 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:30:26.9255 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:30:26.9606 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:30:26.9815 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:30:27.0007 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:30:27.0182 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:30:27.0182 Message=[Converted price is: 600,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:30:27.0182 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:30:30.7972 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:30:30.8273 Batch acquisition of 0 triggers
2018-12-31 19:30:39.3743 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:30:39.3743 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:30:39.3743 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:30:39.3941 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:30:39.4133 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:30:39.4319 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:30:39.4495 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:30:39.4495 Message=[Converted price is: 600,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:30:39.4495 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:30:45.7300 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:30:45.7566 Batch acquisition of 0 triggers
2018-12-31 19:30:54.1628 Message=[Parking price process started.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[109]
2018-12-31 19:30:54.1628 Message=[Getting parkinglot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[114]
2018-12-31 19:30:54.1628 Message=[Getting the parking lot with the id: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[50]
2018-12-31 19:30:54.1837 Message=[Getting the chargesheet with the parkinglotId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[56]
2018-12-31 19:30:54.2022 Message=[Getting the chargesheet prices with the chargesheetId: 1], EmailAddress=[faizan.karimi@sixlogics.com], Method=[Get], LineNumber=[66]
2018-12-31 19:30:54.2203 Message=[Getting the user profile information with the userId: 59a3a856-9f3b-429b-8e7a-df97a5f96cea], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[117]
2018-12-31 19:30:54.2372 Message=[User country in the user profile is: Pakistan], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[119]
2018-12-31 19:30:54.2372 Message=[Converted price is: 600,00 kr.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[122]
2018-12-31 19:30:54.2372 Message=[Parking price process ended.], EmailAddress=[faizan.karimi@sixlogics.com], Method=[GetParkingPrice], LineNumber=[123]
2018-12-31 19:30:59.2602 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:30:59.2859 Batch acquisition of 0 triggers
2018-12-31 19:31:00.3586 Scanning for misfires...
2018-12-31 19:31:00.3586 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-31 19:31:00.3838 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 19:31:12.1402 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:31:12.1606 Batch acquisition of 0 triggers
2018-12-31 19:31:26.7165 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:31:26.7433 Batch acquisition of 0 triggers
2018-12-31 19:31:39.6675 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:31:39.6824 Batch acquisition of 0 triggers
2018-12-31 19:31:52.2210 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:31:52.2419 Batch acquisition of 0 triggers
2018-12-31 19:32:00.3623 Scanning for misfires...
2018-12-31 19:32:00.3623 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-31 19:32:00.3777 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 19:32:07.0928 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:32:07.1077 Batch acquisition of 0 triggers
2018-12-31 19:32:21.1515 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:32:21.1691 Batch acquisition of 0 triggers
2018-12-31 19:36:01.8209 Registering datasource 'SR-53\MSSQL' with db provider: 'Quartz.Impl.AdoJobStore.Common.DbProvider'
2018-12-31 19:36:01.8809 Using object serializer: Quartz.Simpl.JsonObjectSerializer, Quartz.Serialization.Json
2018-12-31 19:36:01.9009 TaskSchedulingThreadPool configured with max concurrency of 10 and TaskScheduler ThreadPoolTaskScheduler.
2018-12-31 19:36:01.9505 Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2018-12-31 19:36:02.0032 Quartz Scheduler v.3.0.7.0 created.
2018-12-31 19:36:02.0157 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.SimpleTriggerPersistenceDelegate
2018-12-31 19:36:02.0157 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CronTriggerPersistenceDelegate
2018-12-31 19:36:02.0157 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CalendarIntervalTriggerPersistenceDelegate
2018-12-31 19:36:02.0157 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.DailyTimeIntervalTriggerPersistenceDelegate
2018-12-31 19:36:02.0157 Using thread monitor-based data access locking (synchronization).
2018-12-31 19:36:02.0157 JobStoreTX initialized.
2018-12-31 19:36:02.0333 Scheduler meta-data: Quartz Scheduler (v3.0.7.0) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'Quartz.Core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'Quartz.Simpl.DefaultThreadPool' - with 10 threads.
  Using job-store 'Quartz.Impl.AdoJobStore.JobStoreTX' - which supports persistence. and is not clustered.

2018-12-31 19:36:02.0333 Quartz scheduler 'QuartzScheduler' initialized
2018-12-31 19:36:02.0333 Quartz scheduler version: 3.0.7.0
2018-12-31 19:36:02.0333 JobFactory set to: BackgroundSchedulers.JobFactory
2018-12-31 19:36:02.0584 Lock 'TRIGGER_ACCESS' is desired by: 9d42d69f-f07d-44fc-9730-b52aa5297442
2018-12-31 19:36:02.0584 Lock 'TRIGGER_ACCESS' is being obtained: 9d42d69f-f07d-44fc-9730-b52aa5297442
2018-12-31 19:36:02.0584 Lock 'TRIGGER_ACCESS' given to: 9d42d69f-f07d-44fc-9730-b52aa5297442
2018-12-31 19:36:02.1484 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2018-12-31 19:36:02.2158 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2018-12-31 19:36:02.2320 Freed 0 triggers from 'acquired' / 'blocked' state.
2018-12-31 19:36:02.2471 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:36:02.2692 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 19:36:02.2692 Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND INSTANCE_NAME = @instanceName AND REQUESTS_RECOVERY = @requestsRecovery
2018-12-31 19:36:02.2950 Recovering 0 jobs that were in-progress at the time of the last shut-down.
2018-12-31 19:36:02.2960 Recovery complete.
2018-12-31 19:36:02.2960 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state
2018-12-31 19:36:02.3141 Removed 0 'complete' triggers.
2018-12-31 19:36:02.3141 Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler'
2018-12-31 19:36:02.3290 Removed 0 stale fired job entries.
2018-12-31 19:36:02.3290 Lock 'TRIGGER_ACCESS' returned by: 9d42d69f-f07d-44fc-9730-b52aa5297442
2018-12-31 19:36:02.3534 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2018-12-31 19:36:02.3616 Scanning for misfires...
2018-12-31 19:36:02.3885 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2018-12-31 19:36:02.4019 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2018-12-31 19:36:02.4273 Found 0 triggers that missed their scheduled fire-time.
2018-12-31 19:36:02.4365 Batch acquisition of 0 triggers
2019-01-10 15:12:50.6069 Registering datasource 'SR-53\MSSQL' with db provider: 'Quartz.Impl.AdoJobStore.Common.DbProvider'
2019-01-10 15:12:50.6671 Using object serializer: Quartz.Simpl.JsonObjectSerializer, Quartz.Serialization.Json
2019-01-10 15:12:50.7009 TaskSchedulingThreadPool configured with max concurrency of 10 and TaskScheduler ThreadPoolTaskScheduler.
2019-01-10 15:12:50.7229 Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2019-01-10 15:12:50.7512 Quartz Scheduler v.3.0.7.0 created.
2019-01-10 15:12:50.7512 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.SimpleTriggerPersistenceDelegate
2019-01-10 15:12:50.7512 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CronTriggerPersistenceDelegate
2019-01-10 15:12:50.7660 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CalendarIntervalTriggerPersistenceDelegate
2019-01-10 15:12:50.7660 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.DailyTimeIntervalTriggerPersistenceDelegate
2019-01-10 15:12:50.7660 Using thread monitor-based data access locking (synchronization).
2019-01-10 15:12:50.7660 JobStoreTX initialized.
2019-01-10 15:12:50.7660 Scheduler meta-data: Quartz Scheduler (v3.0.7.0) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'Quartz.Core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'Quartz.Simpl.DefaultThreadPool' - with 10 threads.
  Using job-store 'Quartz.Impl.AdoJobStore.JobStoreTX' - which supports persistence. and is not clustered.

2019-01-10 15:12:50.7660 Quartz scheduler 'QuartzScheduler' initialized
2019-01-10 15:12:50.7660 Quartz scheduler version: 3.0.7.0
2019-01-10 15:12:50.7814 JobFactory set to: BackgroundSchedulers.JobFactory
2019-01-10 15:12:50.8027 Lock 'TRIGGER_ACCESS' is desired by: e6c2d3fe-fae8-4c47-bc50-dbe8c127ab1b
2019-01-10 15:12:50.8027 Lock 'TRIGGER_ACCESS' is being obtained: e6c2d3fe-fae8-4c47-bc50-dbe8c127ab1b
2019-01-10 15:12:50.8027 Lock 'TRIGGER_ACCESS' given to: e6c2d3fe-fae8-4c47-bc50-dbe8c127ab1b
2019-01-10 15:12:50.9785 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2019-01-10 15:12:51.0404 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2019-01-10 15:12:51.0450 Freed 0 triggers from 'acquired' / 'blocked' state.
2019-01-10 15:12:51.0450 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 15:12:51.0692 Found 0 triggers that missed their scheduled fire-time.
2019-01-10 15:12:51.0789 Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND INSTANCE_NAME = @instanceName AND REQUESTS_RECOVERY = @requestsRecovery
2019-01-10 15:12:51.0789 Recovering 0 jobs that were in-progress at the time of the last shut-down.
2019-01-10 15:12:51.0789 Recovery complete.
2019-01-10 15:12:51.0933 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state
2019-01-10 15:12:51.0933 Removed 0 'complete' triggers.
2019-01-10 15:12:51.0933 Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler'
2019-01-10 15:12:51.1121 Removed 0 stale fired job entries.
2019-01-10 15:12:51.1121 Lock 'TRIGGER_ACCESS' returned by: e6c2d3fe-fae8-4c47-bc50-dbe8c127ab1b
2019-01-10 15:12:51.1309 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2019-01-10 15:12:51.1381 Scanning for misfires...
2019-01-10 15:12:51.1381 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2019-01-10 15:12:51.1559 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 15:12:51.1559 Found 0 triggers that missed their scheduled fire-time.
2019-01-10 15:12:51.1694 Batch acquisition of 0 triggers
2019-01-10 15:13:03.9592 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 15:13:03.9656 Batch acquisition of 0 triggers
2019-01-10 15:13:16.7385 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 15:13:16.7522 Batch acquisition of 0 triggers
2019-01-10 15:13:56.8128 Registering datasource 'SR-53\MSSQL' with db provider: 'Quartz.Impl.AdoJobStore.Common.DbProvider'
2019-01-10 15:13:56.8792 Using object serializer: Quartz.Simpl.JsonObjectSerializer, Quartz.Serialization.Json
2019-01-10 15:13:56.9052 TaskSchedulingThreadPool configured with max concurrency of 10 and TaskScheduler ThreadPoolTaskScheduler.
2019-01-10 15:13:56.9415 Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2019-01-10 15:13:57.0123 Quartz Scheduler v.3.0.7.0 created.
2019-01-10 15:13:57.0246 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.SimpleTriggerPersistenceDelegate
2019-01-10 15:13:57.0246 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CronTriggerPersistenceDelegate
2019-01-10 15:13:57.0246 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CalendarIntervalTriggerPersistenceDelegate
2019-01-10 15:13:57.0246 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.DailyTimeIntervalTriggerPersistenceDelegate
2019-01-10 15:13:57.0246 Using thread monitor-based data access locking (synchronization).
2019-01-10 15:13:57.0246 JobStoreTX initialized.
2019-01-10 15:13:57.0375 Scheduler meta-data: Quartz Scheduler (v3.0.7.0) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'Quartz.Core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'Quartz.Simpl.DefaultThreadPool' - with 10 threads.
  Using job-store 'Quartz.Impl.AdoJobStore.JobStoreTX' - which supports persistence. and is not clustered.

2019-01-10 15:13:57.0375 Quartz scheduler 'QuartzScheduler' initialized
2019-01-10 15:13:57.0375 Quartz scheduler version: 3.0.7.0
2019-01-10 15:13:57.0375 JobFactory set to: BackgroundSchedulers.JobFactory
2019-01-10 15:13:57.0642 Lock 'TRIGGER_ACCESS' is desired by: 2235723b-895a-4f3b-8849-ba2d44fc142f
2019-01-10 15:13:57.0642 Lock 'TRIGGER_ACCESS' is being obtained: 2235723b-895a-4f3b-8849-ba2d44fc142f
2019-01-10 15:13:57.0677 Lock 'TRIGGER_ACCESS' given to: 2235723b-895a-4f3b-8849-ba2d44fc142f
2019-01-10 15:13:57.2232 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2019-01-10 15:13:57.3043 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2019-01-10 15:13:57.3431 Freed 0 triggers from 'acquired' / 'blocked' state.
2019-01-10 15:13:57.3536 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 15:13:57.3759 Found 0 triggers that missed their scheduled fire-time.
2019-01-10 15:13:57.3865 Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND INSTANCE_NAME = @instanceName AND REQUESTS_RECOVERY = @requestsRecovery
2019-01-10 15:13:57.4026 Recovering 0 jobs that were in-progress at the time of the last shut-down.
2019-01-10 15:13:57.4026 Recovery complete.
2019-01-10 15:13:57.4026 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state
2019-01-10 15:13:57.4221 Removed 0 'complete' triggers.
2019-01-10 15:13:57.4254 Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler'
2019-01-10 15:13:57.4254 Removed 0 stale fired job entries.
2019-01-10 15:13:57.4431 Lock 'TRIGGER_ACCESS' returned by: 2235723b-895a-4f3b-8849-ba2d44fc142f
2019-01-10 15:13:57.4600 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2019-01-10 15:13:57.4600 Scanning for misfires...
2019-01-10 15:13:57.5026 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2019-01-10 15:13:57.5026 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 15:13:57.5346 Found 0 triggers that missed their scheduled fire-time.
2019-01-10 15:13:57.5552 Batch acquisition of 0 triggers
2019-01-10 15:14:04.1893 JobFactory set to: BackgroundSchedulers.JobFactory
2019-01-10 15:14:04.1893 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2019-01-10 15:14:04.1893 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 15:14:04.2260 Batch acquisition of 0 triggers
2019-01-10 15:14:05.4445 Message=[User login process started.], EmailAddress=[], Method=[UserLogin], LineNumber=[308]
2019-01-10 15:17:17.0742 Registering datasource 'SR-53\MSSQL' with db provider: 'Quartz.Impl.AdoJobStore.Common.DbProvider'
2019-01-10 15:17:17.1370 Using object serializer: Quartz.Simpl.JsonObjectSerializer, Quartz.Serialization.Json
2019-01-10 15:17:17.1607 TaskSchedulingThreadPool configured with max concurrency of 10 and TaskScheduler ThreadPoolTaskScheduler.
2019-01-10 15:17:17.1899 Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2019-01-10 15:17:17.2350 Quartz Scheduler v.3.0.7.0 created.
2019-01-10 15:17:17.2350 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.SimpleTriggerPersistenceDelegate
2019-01-10 15:17:17.2350 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CronTriggerPersistenceDelegate
2019-01-10 15:17:17.2350 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CalendarIntervalTriggerPersistenceDelegate
2019-01-10 15:17:17.2503 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.DailyTimeIntervalTriggerPersistenceDelegate
2019-01-10 15:17:17.2503 Using thread monitor-based data access locking (synchronization).
2019-01-10 15:17:17.2503 JobStoreTX initialized.
2019-01-10 15:17:17.2503 Scheduler meta-data: Quartz Scheduler (v3.0.7.0) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'Quartz.Core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'Quartz.Simpl.DefaultThreadPool' - with 10 threads.
  Using job-store 'Quartz.Impl.AdoJobStore.JobStoreTX' - which supports persistence. and is not clustered.

2019-01-10 15:17:17.2503 Quartz scheduler 'QuartzScheduler' initialized
2019-01-10 15:17:17.2503 Quartz scheduler version: 3.0.7.0
2019-01-10 15:17:17.2657 JobFactory set to: BackgroundSchedulers.JobFactory
2019-01-10 15:17:17.2870 Lock 'TRIGGER_ACCESS' is desired by: 2eb45f50-2a1c-4507-9797-d1b3b46b04fb
2019-01-10 15:17:17.2870 Lock 'TRIGGER_ACCESS' is being obtained: 2eb45f50-2a1c-4507-9797-d1b3b46b04fb
2019-01-10 15:17:17.2870 Lock 'TRIGGER_ACCESS' given to: 2eb45f50-2a1c-4507-9797-d1b3b46b04fb
2019-01-10 15:17:17.3921 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2019-01-10 15:17:17.4626 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2019-01-10 15:17:17.4780 Freed 0 triggers from 'acquired' / 'blocked' state.
2019-01-10 15:17:17.4884 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 15:17:17.5099 Found 0 triggers that missed their scheduled fire-time.
2019-01-10 15:17:17.5192 Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND INSTANCE_NAME = @instanceName AND REQUESTS_RECOVERY = @requestsRecovery
2019-01-10 15:17:17.5349 Recovering 0 jobs that were in-progress at the time of the last shut-down.
2019-01-10 15:17:17.5349 Recovery complete.
2019-01-10 15:17:17.5349 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state
2019-01-10 15:17:17.5551 Removed 0 'complete' triggers.
2019-01-10 15:17:17.5551 Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler'
2019-01-10 15:17:17.5733 Removed 0 stale fired job entries.
2019-01-10 15:17:17.5828 Lock 'TRIGGER_ACCESS' returned by: 2eb45f50-2a1c-4507-9797-d1b3b46b04fb
2019-01-10 15:17:17.6018 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2019-01-10 15:17:17.6173 Scanning for misfires...
2019-01-10 15:17:17.6830 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 15:17:17.6895 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2019-01-10 15:17:17.7373 Found 0 triggers that missed their scheduled fire-time.
2019-01-10 15:17:17.7373 Batch acquisition of 0 triggers
2019-01-10 15:17:22.7672 JobFactory set to: BackgroundSchedulers.JobFactory
2019-01-10 15:17:22.7747 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2019-01-10 15:17:22.7747 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 15:17:22.8034 Batch acquisition of 0 triggers
2019-01-10 15:17:23.7160 Message=[User login process started.], EmailAddress=[], Method=[UserLogin], LineNumber=[308]
2019-01-10 15:17:35.6854 Message=[Updating the user with the mobileNumber: +923028417241], EmailAddress=[], Method=[UserLogin], LineNumber=[322]
2019-01-10 15:17:35.6854 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 15:17:35.7209 Batch acquisition of 0 triggers
2019-01-10 15:17:35.9524 Message=[Update device process started.], EmailAddress=[], Method=[Update], LineNumber=[45]
2019-01-10 15:17:36.5225 Message=[Updating the user device information with the mobileNumber: +923028417241], EmailAddress=[], Method=[Update], LineNumber=[54]
2019-01-10 15:17:36.5608 Message=[Update device process ended.], EmailAddress=[], Method=[Update], LineNumber=[61]
2019-01-10 15:17:36.5608 Message=[User login process ended.], EmailAddress=[], Method=[UserLogin], LineNumber=[340]
2019-01-10 15:17:44.0985 Message=[User login process started.], EmailAddress=[], Method=[UserLogin], LineNumber=[308]
2019-01-10 15:20:38.7633 Registering datasource 'SR-53\MSSQL' with db provider: 'Quartz.Impl.AdoJobStore.Common.DbProvider'
2019-01-10 15:20:38.8470 Using object serializer: Quartz.Simpl.JsonObjectSerializer, Quartz.Serialization.Json
2019-01-10 15:20:38.8674 TaskSchedulingThreadPool configured with max concurrency of 10 and TaskScheduler ThreadPoolTaskScheduler.
2019-01-10 15:20:38.9014 Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2019-01-10 15:20:38.9656 Quartz Scheduler v.3.0.7.0 created.
2019-01-10 15:20:38.9779 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.SimpleTriggerPersistenceDelegate
2019-01-10 15:20:38.9779 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CronTriggerPersistenceDelegate
2019-01-10 15:20:38.9779 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CalendarIntervalTriggerPersistenceDelegate
2019-01-10 15:20:38.9779 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.DailyTimeIntervalTriggerPersistenceDelegate
2019-01-10 15:20:38.9779 Using thread monitor-based data access locking (synchronization).
2019-01-10 15:20:38.9779 JobStoreTX initialized.
2019-01-10 15:20:38.9914 Scheduler meta-data: Quartz Scheduler (v3.0.7.0) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'Quartz.Core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'Quartz.Simpl.DefaultThreadPool' - with 10 threads.
  Using job-store 'Quartz.Impl.AdoJobStore.JobStoreTX' - which supports persistence. and is not clustered.

2019-01-10 15:20:38.9914 Quartz scheduler 'QuartzScheduler' initialized
2019-01-10 15:20:38.9914 Quartz scheduler version: 3.0.7.0
2019-01-10 15:20:38.9914 JobFactory set to: BackgroundSchedulers.JobFactory
2019-01-10 15:20:39.0163 Lock 'TRIGGER_ACCESS' is desired by: 869af544-b8ff-4d90-a112-3c1a7079a82c
2019-01-10 15:20:39.0163 Lock 'TRIGGER_ACCESS' is being obtained: 869af544-b8ff-4d90-a112-3c1a7079a82c
2019-01-10 15:20:39.0163 Lock 'TRIGGER_ACCESS' given to: 869af544-b8ff-4d90-a112-3c1a7079a82c
2019-01-10 15:20:39.1121 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2019-01-10 15:20:39.1797 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2019-01-10 15:20:39.1960 Freed 0 triggers from 'acquired' / 'blocked' state.
2019-01-10 15:20:39.2176 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 15:20:39.2708 Found 0 triggers that missed their scheduled fire-time.
2019-01-10 15:20:39.2807 Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND INSTANCE_NAME = @instanceName AND REQUESTS_RECOVERY = @requestsRecovery
2019-01-10 15:20:39.2974 Recovering 0 jobs that were in-progress at the time of the last shut-down.
2019-01-10 15:20:39.2974 Recovery complete.
2019-01-10 15:20:39.3036 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state
2019-01-10 15:20:39.3036 Removed 0 'complete' triggers.
2019-01-10 15:20:39.3203 Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler'
2019-01-10 15:20:39.3203 Removed 0 stale fired job entries.
2019-01-10 15:20:39.3387 Lock 'TRIGGER_ACCESS' returned by: 869af544-b8ff-4d90-a112-3c1a7079a82c
2019-01-10 15:20:39.3570 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2019-01-10 15:20:39.3668 Scanning for misfires...
2019-01-10 15:20:39.4159 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2019-01-10 15:20:39.4348 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 15:20:39.4592 Found 0 triggers that missed their scheduled fire-time.
2019-01-10 15:20:39.4920 Batch acquisition of 0 triggers
2019-01-10 15:20:42.9308 JobFactory set to: BackgroundSchedulers.JobFactory
2019-01-10 15:20:42.9308 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2019-01-10 15:20:42.9308 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 15:20:43.0111 Batch acquisition of 0 triggers
2019-01-10 15:20:43.8289 Message=[User login process started.], EmailAddress=[], Method=[UserLogin], LineNumber=[308]
2019-01-10 15:20:47.7368 Message=[Exception is: Infrastructure.Exceptions.Park4YouException: USER_INVALID_USERNAME_PASSWORD
   at ParkForYouAPI.Controllers.AccountController.UserLogin(UserLoginRequest userLoginRequest) in C:\Betway\ParkingForYou\NewAPI\ParkForYouAPI\Controllers\AccountController.cs:line 333
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at ParkForYouAPI.Middlewares.CustomMessageHandler.Invoke(HttpContext context) in C:\Betway\ParkingForYou\NewAPI\ParkForYouAPI\Middlewares\CustomMessageHandler.cs:line 43], EmailAddress=[], Method=[_HandleExceptionAsync], LineNumber=[77]
2019-01-10 15:20:56.6835 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 15:20:58.5479 Message=[User login process started.], EmailAddress=[], Method=[UserLogin], LineNumber=[308]
2019-01-10 15:20:58.5479 Batch acquisition of 0 triggers
2019-01-10 15:21:01.8523 Message=[Updating the user with the mobileNumber: +923028417241], EmailAddress=[], Method=[UserLogin], LineNumber=[320]
2019-01-10 15:21:02.6963 Message=[Update device process started.], EmailAddress=[], Method=[Update], LineNumber=[45]
2019-01-10 15:21:02.9234 Message=[Updating the user device information with the mobileNumber: +923028417241], EmailAddress=[], Method=[Update], LineNumber=[54]
2019-01-10 15:21:02.9593 Message=[Update device process ended.], EmailAddress=[], Method=[Update], LineNumber=[61]
2019-01-10 15:21:02.9593 Message=[User login process ended.], EmailAddress=[], Method=[UserLogin], LineNumber=[337]
2019-01-10 15:21:32.3215 Registering datasource 'SR-53\MSSQL' with db provider: 'Quartz.Impl.AdoJobStore.Common.DbProvider'
2019-01-10 15:21:32.3831 Using object serializer: Quartz.Simpl.JsonObjectSerializer, Quartz.Serialization.Json
2019-01-10 15:21:32.3959 TaskSchedulingThreadPool configured with max concurrency of 10 and TaskScheduler ThreadPoolTaskScheduler.
2019-01-10 15:21:32.4046 Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2019-01-10 15:21:32.4304 Quartz Scheduler v.3.0.7.0 created.
2019-01-10 15:21:32.4416 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.SimpleTriggerPersistenceDelegate
2019-01-10 15:21:32.4416 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CronTriggerPersistenceDelegate
2019-01-10 15:21:32.4416 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CalendarIntervalTriggerPersistenceDelegate
2019-01-10 15:21:32.4416 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.DailyTimeIntervalTriggerPersistenceDelegate
2019-01-10 15:21:32.4416 Using thread monitor-based data access locking (synchronization).
2019-01-10 15:21:32.4416 JobStoreTX initialized.
2019-01-10 15:21:32.4533 Scheduler meta-data: Quartz Scheduler (v3.0.7.0) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'Quartz.Core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'Quartz.Simpl.DefaultThreadPool' - with 10 threads.
  Using job-store 'Quartz.Impl.AdoJobStore.JobStoreTX' - which supports persistence. and is not clustered.

2019-01-10 15:21:32.4533 Quartz scheduler 'QuartzScheduler' initialized
2019-01-10 15:21:32.4533 Quartz scheduler version: 3.0.7.0
2019-01-10 15:21:32.4533 JobFactory set to: BackgroundSchedulers.JobFactory
2019-01-10 15:21:32.4798 Lock 'TRIGGER_ACCESS' is desired by: 317b4e72-ef28-4c79-9f1e-4fd20b50ed5f
2019-01-10 15:21:32.4798 Lock 'TRIGGER_ACCESS' is being obtained: 317b4e72-ef28-4c79-9f1e-4fd20b50ed5f
2019-01-10 15:21:32.4828 Lock 'TRIGGER_ACCESS' given to: 317b4e72-ef28-4c79-9f1e-4fd20b50ed5f
2019-01-10 15:21:32.5447 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2019-01-10 15:21:32.5631 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2019-01-10 15:21:32.5631 Freed 0 triggers from 'acquired' / 'blocked' state.
2019-01-10 15:21:32.5778 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 15:21:32.5778 Found 0 triggers that missed their scheduled fire-time.
2019-01-10 15:21:32.5970 Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND INSTANCE_NAME = @instanceName AND REQUESTS_RECOVERY = @requestsRecovery
2019-01-10 15:21:32.5970 Recovering 0 jobs that were in-progress at the time of the last shut-down.
2019-01-10 15:21:32.5970 Recovery complete.
2019-01-10 15:21:32.5970 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state
2019-01-10 15:21:32.6108 Removed 0 'complete' triggers.
2019-01-10 15:21:32.6108 Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler'
2019-01-10 15:21:32.6108 Removed 0 stale fired job entries.
2019-01-10 15:21:32.6237 Lock 'TRIGGER_ACCESS' returned by: 317b4e72-ef28-4c79-9f1e-4fd20b50ed5f
2019-01-10 15:21:32.6237 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2019-01-10 15:21:32.6440 Scanning for misfires...
2019-01-10 15:21:32.6582 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2019-01-10 15:21:32.6582 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 15:21:32.6714 Found 0 triggers that missed their scheduled fire-time.
2019-01-10 15:21:32.6714 Batch acquisition of 0 triggers
2019-01-10 15:21:33.2925 JobFactory set to: BackgroundSchedulers.JobFactory
2019-01-10 15:21:33.2968 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2019-01-10 15:21:33.2968 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 15:21:33.2968 Batch acquisition of 0 triggers
2019-01-10 15:21:33.3810 Message=[Login process started.], EmailAddress=[], Method=[Login], LineNumber=[367]
2019-01-10 15:21:33.3810 Message=[Getting user with the username: +923028417241], EmailAddress=[], Method=[Login], LineNumber=[369]
2019-01-10 15:21:33.7311 Message=[Password sign for the user with the username: +923028417241], EmailAddress=[], Method=[Login], LineNumber=[373]
2019-01-10 15:21:33.7343 Message=[Getting roles of the user.], EmailAddress=[], Method=[Login], LineNumber=[377]
2019-01-10 15:21:33.7757 Message=[Generating token of user with the username: +923028417241 and role: User], EmailAddress=[], Method=[Login], LineNumber=[379]
2019-01-10 15:21:33.8694 Message=[Login process ended.], EmailAddress=[], Method=[Login], LineNumber=[390]
2019-01-10 15:21:40.2840 Registering datasource 'SR-53\MSSQL' with db provider: 'Quartz.Impl.AdoJobStore.Common.DbProvider'
2019-01-10 15:21:40.3453 Using object serializer: Quartz.Simpl.JsonObjectSerializer, Quartz.Serialization.Json
2019-01-10 15:21:40.3661 TaskSchedulingThreadPool configured with max concurrency of 10 and TaskScheduler ThreadPoolTaskScheduler.
2019-01-10 15:21:40.3941 Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2019-01-10 15:21:40.4455 Quartz Scheduler v.3.0.7.0 created.
2019-01-10 15:21:40.4569 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.SimpleTriggerPersistenceDelegate
2019-01-10 15:21:40.4569 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CronTriggerPersistenceDelegate
2019-01-10 15:21:40.4569 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CalendarIntervalTriggerPersistenceDelegate
2019-01-10 15:21:40.4569 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.DailyTimeIntervalTriggerPersistenceDelegate
2019-01-10 15:21:40.4569 Using thread monitor-based data access locking (synchronization).
2019-01-10 15:21:40.4569 JobStoreTX initialized.
2019-01-10 15:21:40.4708 Scheduler meta-data: Quartz Scheduler (v3.0.7.0) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'Quartz.Core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'Quartz.Simpl.DefaultThreadPool' - with 10 threads.
  Using job-store 'Quartz.Impl.AdoJobStore.JobStoreTX' - which supports persistence. and is not clustered.

2019-01-10 15:21:40.4708 Quartz scheduler 'QuartzScheduler' initialized
2019-01-10 15:21:40.4708 Quartz scheduler version: 3.0.7.0
2019-01-10 15:21:40.4708 JobFactory set to: BackgroundSchedulers.JobFactory
2019-01-10 15:21:40.4965 Lock 'TRIGGER_ACCESS' is desired by: 6abee673-c0e9-47e7-b242-4a9bd0e55d12
2019-01-10 15:21:40.4965 Lock 'TRIGGER_ACCESS' is being obtained: 6abee673-c0e9-47e7-b242-4a9bd0e55d12
2019-01-10 15:21:40.4965 Lock 'TRIGGER_ACCESS' given to: 6abee673-c0e9-47e7-b242-4a9bd0e55d12
2019-01-10 15:21:40.6230 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2019-01-10 15:21:40.6872 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2019-01-10 15:21:40.7024 Freed 0 triggers from 'acquired' / 'blocked' state.
2019-01-10 15:21:40.7168 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 15:21:40.7382 Found 0 triggers that missed their scheduled fire-time.
2019-01-10 15:21:40.7382 Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND INSTANCE_NAME = @instanceName AND REQUESTS_RECOVERY = @requestsRecovery
2019-01-10 15:21:40.7641 Recovering 0 jobs that were in-progress at the time of the last shut-down.
2019-01-10 15:21:40.7641 Recovery complete.
2019-01-10 15:21:40.7709 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state
2019-01-10 15:21:40.7864 Removed 0 'complete' triggers.
2019-01-10 15:21:40.7864 Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler'
2019-01-10 15:21:40.8073 Removed 0 stale fired job entries.
2019-01-10 15:21:40.8158 Lock 'TRIGGER_ACCESS' returned by: 6abee673-c0e9-47e7-b242-4a9bd0e55d12
2019-01-10 15:21:40.8411 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2019-01-10 15:21:40.8587 Scanning for misfires...
2019-01-10 15:21:40.8846 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 15:21:40.9119 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2019-01-10 15:21:40.9331 Batch acquisition of 0 triggers
2019-01-10 15:21:40.9641 Found 0 triggers that missed their scheduled fire-time.
2019-01-10 15:21:44.9054 JobFactory set to: BackgroundSchedulers.JobFactory
2019-01-10 15:21:44.9054 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2019-01-10 15:21:44.9183 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 15:21:44.9433 Batch acquisition of 0 triggers
2019-01-10 15:21:45.8217 Message=[Login process started.], EmailAddress=[], Method=[Login], LineNumber=[367]
2019-01-10 15:21:46.0815 Message=[Getting user with the username: +923028417241], EmailAddress=[], Method=[Login], LineNumber=[369]
2019-01-10 15:21:47.5227 Message=[Password sign for the user with the username: +923028417241], EmailAddress=[], Method=[Login], LineNumber=[373]
2019-01-10 15:21:49.1395 Message=[Getting roles of the user.], EmailAddress=[], Method=[Login], LineNumber=[377]
2019-01-10 15:21:49.4781 Message=[Generating token of user with the username: +923028417241 and role: User], EmailAddress=[], Method=[Login], LineNumber=[379]
2019-01-10 15:21:50.0378 Message=[Login process ended.], EmailAddress=[], Method=[Login], LineNumber=[390]
2019-01-10 15:21:54.9526 Message=[Login process started.], EmailAddress=[], Method=[Login], LineNumber=[367]
2019-01-10 15:21:55.4249 Message=[Getting user with the username: +923028417241], EmailAddress=[], Method=[Login], LineNumber=[369]
2019-01-10 15:21:56.0710 Message=[Password sign for the user with the username: +923028417241], EmailAddress=[], Method=[Login], LineNumber=[373]
2019-01-10 16:21:22.4199 Registering datasource 'SR-53\MSSQL' with db provider: 'Quartz.Impl.AdoJobStore.Common.DbProvider'
2019-01-10 16:21:22.4988 Using object serializer: Quartz.Simpl.JsonObjectSerializer, Quartz.Serialization.Json
2019-01-10 16:21:22.5292 TaskSchedulingThreadPool configured with max concurrency of 10 and TaskScheduler ThreadPoolTaskScheduler.
2019-01-10 16:21:22.5878 Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2019-01-10 16:21:22.6623 Quartz Scheduler v.3.0.7.0 created.
2019-01-10 16:21:22.6623 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.SimpleTriggerPersistenceDelegate
2019-01-10 16:21:22.6775 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CronTriggerPersistenceDelegate
2019-01-10 16:21:22.6775 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CalendarIntervalTriggerPersistenceDelegate
2019-01-10 16:21:22.6775 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.DailyTimeIntervalTriggerPersistenceDelegate
2019-01-10 16:21:22.6775 Using thread monitor-based data access locking (synchronization).
2019-01-10 16:21:22.6775 JobStoreTX initialized.
2019-01-10 16:21:22.6775 Scheduler meta-data: Quartz Scheduler (v3.0.7.0) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'Quartz.Core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'Quartz.Simpl.DefaultThreadPool' - with 10 threads.
  Using job-store 'Quartz.Impl.AdoJobStore.JobStoreTX' - which supports persistence. and is not clustered.

2019-01-10 16:21:22.6956 Quartz scheduler 'QuartzScheduler' initialized
2019-01-10 16:21:22.6956 Quartz scheduler version: 3.0.7.0
2019-01-10 16:21:22.6956 JobFactory set to: BackgroundSchedulers.JobFactory
2019-01-10 16:21:22.7204 Lock 'TRIGGER_ACCESS' is desired by: 092a90a7-6302-404f-a1ee-3fff6c3b169a
2019-01-10 16:21:22.7204 Lock 'TRIGGER_ACCESS' is being obtained: 092a90a7-6302-404f-a1ee-3fff6c3b169a
2019-01-10 16:21:22.7204 Lock 'TRIGGER_ACCESS' given to: 092a90a7-6302-404f-a1ee-3fff6c3b169a
2019-01-10 16:21:22.8938 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2019-01-10 16:21:22.9993 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2019-01-10 16:21:23.0206 Freed 0 triggers from 'acquired' / 'blocked' state.
2019-01-10 16:21:23.0206 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 16:21:23.0638 Found 0 triggers that missed their scheduled fire-time.
2019-01-10 16:21:23.0745 Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND INSTANCE_NAME = @instanceName AND REQUESTS_RECOVERY = @requestsRecovery
2019-01-10 16:21:23.0966 Recovering 0 jobs that were in-progress at the time of the last shut-down.
2019-01-10 16:21:23.0979 Recovery complete.
2019-01-10 16:21:23.0979 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state
2019-01-10 16:21:23.1175 Removed 0 'complete' triggers.
2019-01-10 16:21:23.1175 Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler'
2019-01-10 16:21:23.1323 Removed 0 stale fired job entries.
2019-01-10 16:21:23.1323 Lock 'TRIGGER_ACCESS' returned by: 092a90a7-6302-404f-a1ee-3fff6c3b169a
2019-01-10 16:21:23.1564 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2019-01-10 16:21:23.1696 Scanning for misfires...
2019-01-10 16:21:23.1880 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2019-01-10 16:21:23.1880 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 16:21:23.2447 Found 0 triggers that missed their scheduled fire-time.
2019-01-10 16:21:23.2710 Batch acquisition of 0 triggers
2019-01-10 16:21:37.0271 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 16:21:37.0430 Batch acquisition of 0 triggers
2019-01-10 16:21:37.2595 JobFactory set to: BackgroundSchedulers.JobFactory
2019-01-10 16:21:37.2595 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 16:21:37.2595 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2019-01-10 16:21:37.2835 Batch acquisition of 0 triggers
2019-01-10 16:21:38.2862 Message=[Login process started.], EmailAddress=[], Method=[Login], LineNumber=[367]
2019-01-10 16:21:38.5864 Message=[Getting user with the username: info@park4youserver.com], EmailAddress=[], Method=[Login], LineNumber=[369]
2019-01-10 16:21:40.8744 Message=[Password sign for the user with the username: info@park4youserver.com], EmailAddress=[], Method=[Login], LineNumber=[373]
2019-01-10 16:22:19.9195 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 16:22:19.9398 Batch acquisition of 0 triggers
2019-01-10 16:22:20.1049 Message=[Exception is: Infrastructure.Exceptions.Park4YouException: USER_INVALID_USERNAME_PASSWORD
   at ParkForYouAPI.Controllers.AccountController.Login(LoginRequest loginRequest) in C:\Betway\ParkingForYou\NewAPI\ParkForYouAPI\Controllers\AccountController.cs:line 386
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at ParkForYouAPI.Middlewares.CustomMessageHandler.Invoke(HttpContext context) in C:\Betway\ParkingForYou\NewAPI\ParkForYouAPI\Middlewares\CustomMessageHandler.cs:line 43], EmailAddress=[], Method=[_HandleExceptionAsync], LineNumber=[77]
2019-01-10 16:22:23.0087 Scanning for misfires...
2019-01-10 16:22:23.0087 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2019-01-10 16:22:23.0242 Found 0 triggers that missed their scheduled fire-time.
2019-01-10 16:22:35.0615 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 16:22:35.0819 Batch acquisition of 0 triggers
2019-01-10 16:22:48.9246 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 16:22:48.9457 Batch acquisition of 0 triggers
2019-01-10 16:23:04.2202 Message=[Login process started.], EmailAddress=[], Method=[Login], LineNumber=[367]
2019-01-10 16:23:04.5522 Message=[Getting user with the username: info@park4youserver.com], EmailAddress=[], Method=[Login], LineNumber=[369]
2019-01-10 16:23:05.6537 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 16:23:05.7141 Batch acquisition of 0 triggers
2019-01-10 16:23:05.7141 Message=[Password sign for the user with the username: info@park4youserver.com], EmailAddress=[], Method=[Login], LineNumber=[373]
2019-01-10 16:24:14.0924 Registering datasource 'SR-53\MSSQL' with db provider: 'Quartz.Impl.AdoJobStore.Common.DbProvider'
2019-01-10 16:24:14.1771 Using object serializer: Quartz.Simpl.JsonObjectSerializer, Quartz.Serialization.Json
2019-01-10 16:24:14.2145 TaskSchedulingThreadPool configured with max concurrency of 10 and TaskScheduler ThreadPoolTaskScheduler.
2019-01-10 16:24:14.2533 Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2019-01-10 16:24:14.3082 Quartz Scheduler v.3.0.7.0 created.
2019-01-10 16:24:14.3226 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.SimpleTriggerPersistenceDelegate
2019-01-10 16:24:14.3226 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CronTriggerPersistenceDelegate
2019-01-10 16:24:14.3226 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CalendarIntervalTriggerPersistenceDelegate
2019-01-10 16:24:14.3226 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.DailyTimeIntervalTriggerPersistenceDelegate
2019-01-10 16:24:14.3226 Using thread monitor-based data access locking (synchronization).
2019-01-10 16:24:14.3226 JobStoreTX initialized.
2019-01-10 16:24:14.3385 Scheduler meta-data: Quartz Scheduler (v3.0.7.0) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'Quartz.Core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'Quartz.Simpl.DefaultThreadPool' - with 10 threads.
  Using job-store 'Quartz.Impl.AdoJobStore.JobStoreTX' - which supports persistence. and is not clustered.

2019-01-10 16:24:14.3385 Quartz scheduler 'QuartzScheduler' initialized
2019-01-10 16:24:14.3385 Quartz scheduler version: 3.0.7.0
2019-01-10 16:24:14.3385 JobFactory set to: BackgroundSchedulers.JobFactory
2019-01-10 16:24:14.3699 Lock 'TRIGGER_ACCESS' is desired by: d1c1b14b-fd35-4ac0-9a2f-e7b7f5a472c7
2019-01-10 16:24:14.3699 Lock 'TRIGGER_ACCESS' is being obtained: d1c1b14b-fd35-4ac0-9a2f-e7b7f5a472c7
2019-01-10 16:24:14.3699 Lock 'TRIGGER_ACCESS' given to: d1c1b14b-fd35-4ac0-9a2f-e7b7f5a472c7
2019-01-10 16:24:14.4777 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2019-01-10 16:24:14.5792 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2019-01-10 16:24:14.5986 Freed 0 triggers from 'acquired' / 'blocked' state.
2019-01-10 16:24:14.5986 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 16:24:14.6401 Found 0 triggers that missed their scheduled fire-time.
2019-01-10 16:24:14.6507 Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND INSTANCE_NAME = @instanceName AND REQUESTS_RECOVERY = @requestsRecovery
2019-01-10 16:24:14.6737 Recovering 0 jobs that were in-progress at the time of the last shut-down.
2019-01-10 16:24:14.6737 Recovery complete.
2019-01-10 16:24:14.6737 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state
2019-01-10 16:24:14.6958 Removed 0 'complete' triggers.
2019-01-10 16:24:14.6958 Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler'
2019-01-10 16:24:14.7133 Removed 0 stale fired job entries.
2019-01-10 16:24:14.7211 Lock 'TRIGGER_ACCESS' returned by: d1c1b14b-fd35-4ac0-9a2f-e7b7f5a472c7
2019-01-10 16:24:14.7410 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2019-01-10 16:24:14.7569 Scanning for misfires...
2019-01-10 16:24:14.7837 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2019-01-10 16:24:14.7970 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 16:24:14.8239 Found 0 triggers that missed their scheduled fire-time.
2019-01-10 16:24:14.8411 Batch acquisition of 0 triggers
2019-01-10 16:24:23.5875 JobFactory set to: BackgroundSchedulers.JobFactory
2019-01-10 16:24:23.5924 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 16:24:23.5924 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2019-01-10 16:24:23.6197 Batch acquisition of 0 triggers
2019-01-10 16:24:24.6554 Message=[Login process started.], EmailAddress=[], Method=[Login], LineNumber=[367]
2019-01-10 16:24:24.9840 Message=[Getting user with the username: info@park4youserver.com], EmailAddress=[], Method=[Login], LineNumber=[369]
2019-01-10 16:24:26.6238 Message=[Password sign for the user with the username: info@park4youserver.com], EmailAddress=[], Method=[Login], LineNumber=[373]
2019-01-10 16:24:48.4178 Registering datasource 'SR-53\MSSQL' with db provider: 'Quartz.Impl.AdoJobStore.Common.DbProvider'
2019-01-10 16:24:48.4860 Using object serializer: Quartz.Simpl.JsonObjectSerializer, Quartz.Serialization.Json
2019-01-10 16:24:48.5088 TaskSchedulingThreadPool configured with max concurrency of 10 and TaskScheduler ThreadPoolTaskScheduler.
2019-01-10 16:24:48.5442 Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2019-01-10 16:24:48.6148 Quartz Scheduler v.3.0.7.0 created.
2019-01-10 16:24:48.6279 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.SimpleTriggerPersistenceDelegate
2019-01-10 16:24:48.6279 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CronTriggerPersistenceDelegate
2019-01-10 16:24:48.6279 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CalendarIntervalTriggerPersistenceDelegate
2019-01-10 16:24:48.6341 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.DailyTimeIntervalTriggerPersistenceDelegate
2019-01-10 16:24:48.6341 Using thread monitor-based data access locking (synchronization).
2019-01-10 16:24:48.6341 JobStoreTX initialized.
2019-01-10 16:24:48.6341 Scheduler meta-data: Quartz Scheduler (v3.0.7.0) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'Quartz.Core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'Quartz.Simpl.DefaultThreadPool' - with 10 threads.
  Using job-store 'Quartz.Impl.AdoJobStore.JobStoreTX' - which supports persistence. and is not clustered.

2019-01-10 16:24:48.6513 Quartz scheduler 'QuartzScheduler' initialized
2019-01-10 16:24:48.6513 Quartz scheduler version: 3.0.7.0
2019-01-10 16:24:48.6513 JobFactory set to: BackgroundSchedulers.JobFactory
2019-01-10 16:24:48.6782 Lock 'TRIGGER_ACCESS' is desired by: 9b2438ef-bd78-4872-b953-a327bbd412b1
2019-01-10 16:24:48.6782 Lock 'TRIGGER_ACCESS' is being obtained: 9b2438ef-bd78-4872-b953-a327bbd412b1
2019-01-10 16:24:48.6782 Lock 'TRIGGER_ACCESS' given to: 9b2438ef-bd78-4872-b953-a327bbd412b1
2019-01-10 16:24:48.7827 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2019-01-10 16:24:48.8607 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2019-01-10 16:24:48.8850 Freed 0 triggers from 'acquired' / 'blocked' state.
2019-01-10 16:24:48.8988 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 16:24:48.9289 Found 0 triggers that missed their scheduled fire-time.
2019-01-10 16:24:48.9404 Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND INSTANCE_NAME = @instanceName AND REQUESTS_RECOVERY = @requestsRecovery
2019-01-10 16:24:48.9594 Recovering 0 jobs that were in-progress at the time of the last shut-down.
2019-01-10 16:24:48.9594 Recovery complete.
2019-01-10 16:24:48.9594 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state
2019-01-10 16:24:48.9814 Removed 0 'complete' triggers.
2019-01-10 16:24:48.9854 Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler'
2019-01-10 16:24:48.9854 Removed 0 stale fired job entries.
2019-01-10 16:24:49.0065 Lock 'TRIGGER_ACCESS' returned by: 9b2438ef-bd78-4872-b953-a327bbd412b1
2019-01-10 16:24:49.0262 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2019-01-10 16:24:49.0262 Scanning for misfires...
2019-01-10 16:24:49.0893 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2019-01-10 16:24:49.1063 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 16:24:49.1525 Found 0 triggers that missed their scheduled fire-time.
2019-01-10 16:24:49.1652 Batch acquisition of 0 triggers
2019-01-10 16:24:52.6601 JobFactory set to: BackgroundSchedulers.JobFactory
2019-01-10 16:24:52.6723 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2019-01-10 16:24:52.6723 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 16:24:52.7360 Batch acquisition of 0 triggers
2019-01-10 16:24:53.8367 Message=[Login process started.], EmailAddress=[], Method=[Login], LineNumber=[367]
2019-01-10 16:24:54.1802 Message=[Getting user with the username: info@park4youserver.com], EmailAddress=[], Method=[Login], LineNumber=[369]
2019-01-10 16:24:55.6813 Message=[Password sign for the user with the username: info@park4youserver.com], EmailAddress=[], Method=[Login], LineNumber=[373]
2019-01-10 16:24:57.6827 Message=[Getting roles of the user.], EmailAddress=[], Method=[Login], LineNumber=[379]
2019-01-10 16:30:00.8716 Registering datasource 'SR-53\MSSQL' with db provider: 'Quartz.Impl.AdoJobStore.Common.DbProvider'
2019-01-10 16:30:00.9436 Using object serializer: Quartz.Simpl.JsonObjectSerializer, Quartz.Serialization.Json
2019-01-10 16:30:00.9700 TaskSchedulingThreadPool configured with max concurrency of 10 and TaskScheduler ThreadPoolTaskScheduler.
2019-01-10 16:30:01.0055 Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2019-01-10 16:30:01.0567 Quartz Scheduler v.3.0.7.0 created.
2019-01-10 16:30:01.0700 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.SimpleTriggerPersistenceDelegate
2019-01-10 16:30:01.0700 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CronTriggerPersistenceDelegate
2019-01-10 16:30:01.0700 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CalendarIntervalTriggerPersistenceDelegate
2019-01-10 16:30:01.0700 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.DailyTimeIntervalTriggerPersistenceDelegate
2019-01-10 16:30:01.0700 Using thread monitor-based data access locking (synchronization).
2019-01-10 16:30:01.0700 JobStoreTX initialized.
2019-01-10 16:30:01.0874 Scheduler meta-data: Quartz Scheduler (v3.0.7.0) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'Quartz.Core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'Quartz.Simpl.DefaultThreadPool' - with 10 threads.
  Using job-store 'Quartz.Impl.AdoJobStore.JobStoreTX' - which supports persistence. and is not clustered.

2019-01-10 16:30:01.0874 Quartz scheduler 'QuartzScheduler' initialized
2019-01-10 16:30:01.0874 Quartz scheduler version: 3.0.7.0
2019-01-10 16:30:01.0874 JobFactory set to: BackgroundSchedulers.JobFactory
2019-01-10 16:30:01.1155 Lock 'TRIGGER_ACCESS' is desired by: ecf23297-517f-4951-8791-fccfd2515f36
2019-01-10 16:30:01.1155 Lock 'TRIGGER_ACCESS' is being obtained: ecf23297-517f-4951-8791-fccfd2515f36
2019-01-10 16:30:01.1155 Lock 'TRIGGER_ACCESS' given to: ecf23297-517f-4951-8791-fccfd2515f36
2019-01-10 16:30:01.2318 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2019-01-10 16:30:01.3094 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2019-01-10 16:30:01.3311 Freed 0 triggers from 'acquired' / 'blocked' state.
2019-01-10 16:30:01.3420 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 16:30:01.3639 Found 0 triggers that missed their scheduled fire-time.
2019-01-10 16:30:01.3733 Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND INSTANCE_NAME = @instanceName AND REQUESTS_RECOVERY = @requestsRecovery
2019-01-10 16:30:01.3905 Recovering 0 jobs that were in-progress at the time of the last shut-down.
2019-01-10 16:30:01.3905 Recovery complete.
2019-01-10 16:30:01.3905 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state
2019-01-10 16:30:01.4112 Removed 0 'complete' triggers.
2019-01-10 16:30:01.4112 Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler'
2019-01-10 16:30:01.4268 Removed 0 stale fired job entries.
2019-01-10 16:30:01.4344 Lock 'TRIGGER_ACCESS' returned by: ecf23297-517f-4951-8791-fccfd2515f36
2019-01-10 16:30:01.4544 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2019-01-10 16:30:01.4544 Scanning for misfires...
2019-01-10 16:30:01.5344 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2019-01-10 16:30:01.5513 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 16:30:01.5818 Found 0 triggers that missed their scheduled fire-time.
2019-01-10 16:30:01.6287 Batch acquisition of 0 triggers
2019-01-10 16:30:03.7599 JobFactory set to: BackgroundSchedulers.JobFactory
2019-01-10 16:30:03.7599 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2019-01-10 16:30:03.7740 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 16:30:03.8128 Batch acquisition of 0 triggers
2019-01-10 16:30:03.8951 Message=[Login process started.], EmailAddress=[], Method=[Login], LineNumber=[367]
2019-01-10 16:30:03.8951 Message=[Getting user with the username: info@park4youserver.com], EmailAddress=[], Method=[Login], LineNumber=[369]
2019-01-10 16:30:04.3476 Message=[Password sign for the user with the username: info@park4youserver.com], EmailAddress=[], Method=[Login], LineNumber=[373]
2019-01-10 16:30:04.6488 Message=[Exception is: Infrastructure.Exceptions.Park4YouException: USER_INVALID_USERNAME_PASSWORD
   at ParkForYouAPI.Controllers.AccountController.Login(LoginRequest loginRequest) in C:\Betway\ParkingForYou\NewAPI\ParkForYouAPI\Controllers\AccountController.cs:line 386
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at ParkForYouAPI.Middlewares.CustomMessageHandler.Invoke(HttpContext context) in C:\Betway\ParkingForYou\NewAPI\ParkForYouAPI\Middlewares\CustomMessageHandler.cs:line 43], EmailAddress=[], Method=[_HandleExceptionAsync], LineNumber=[77]
2019-01-10 16:30:14.0659 Message=[Login process started.], EmailAddress=[], Method=[Login], LineNumber=[367]
2019-01-10 16:30:14.3715 Message=[Getting user with the username: info@park4youserver.com], EmailAddress=[], Method=[Login], LineNumber=[369]
2019-01-10 16:30:15.5237 Message=[Password sign for the user with the username: info@park4youserver.com], EmailAddress=[], Method=[Login], LineNumber=[373]
2019-01-10 16:31:48.5701 Registering datasource 'SR-53\MSSQL' with db provider: 'Quartz.Impl.AdoJobStore.Common.DbProvider'
2019-01-10 16:31:48.6422 Using object serializer: Quartz.Simpl.JsonObjectSerializer, Quartz.Serialization.Json
2019-01-10 16:31:48.6699 TaskSchedulingThreadPool configured with max concurrency of 10 and TaskScheduler ThreadPoolTaskScheduler.
2019-01-10 16:31:48.7198 Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2019-01-10 16:31:48.7672 Quartz Scheduler v.3.0.7.0 created.
2019-01-10 16:31:48.7789 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.SimpleTriggerPersistenceDelegate
2019-01-10 16:31:48.7789 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CronTriggerPersistenceDelegate
2019-01-10 16:31:48.7789 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CalendarIntervalTriggerPersistenceDelegate
2019-01-10 16:31:48.7789 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.DailyTimeIntervalTriggerPersistenceDelegate
2019-01-10 16:31:48.7789 Using thread monitor-based data access locking (synchronization).
2019-01-10 16:31:48.7789 JobStoreTX initialized.
2019-01-10 16:31:48.7938 Scheduler meta-data: Quartz Scheduler (v3.0.7.0) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'Quartz.Core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'Quartz.Simpl.DefaultThreadPool' - with 10 threads.
  Using job-store 'Quartz.Impl.AdoJobStore.JobStoreTX' - which supports persistence. and is not clustered.

2019-01-10 16:31:48.7938 Quartz scheduler 'QuartzScheduler' initialized
2019-01-10 16:31:48.7938 Quartz scheduler version: 3.0.7.0
2019-01-10 16:31:48.7938 JobFactory set to: BackgroundSchedulers.JobFactory
2019-01-10 16:31:48.8196 Lock 'TRIGGER_ACCESS' is desired by: c980cd33-0754-4aa0-8e26-47aad1a9d4b8
2019-01-10 16:31:48.8196 Lock 'TRIGGER_ACCESS' is being obtained: c980cd33-0754-4aa0-8e26-47aad1a9d4b8
2019-01-10 16:31:48.8196 Lock 'TRIGGER_ACCESS' given to: c980cd33-0754-4aa0-8e26-47aad1a9d4b8
2019-01-10 16:31:48.9382 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2019-01-10 16:31:49.0112 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2019-01-10 16:31:49.0266 Freed 0 triggers from 'acquired' / 'blocked' state.
2019-01-10 16:31:49.0381 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 16:31:49.0601 Found 0 triggers that missed their scheduled fire-time.
2019-01-10 16:31:49.0707 Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND INSTANCE_NAME = @instanceName AND REQUESTS_RECOVERY = @requestsRecovery
2019-01-10 16:31:49.0909 Recovering 0 jobs that were in-progress at the time of the last shut-down.
2019-01-10 16:31:49.0909 Recovery complete.
2019-01-10 16:31:49.0987 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state
2019-01-10 16:31:49.1138 Removed 0 'complete' triggers.
2019-01-10 16:31:49.1138 Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler'
2019-01-10 16:31:49.1296 Removed 0 stale fired job entries.
2019-01-10 16:31:49.1296 Lock 'TRIGGER_ACCESS' returned by: c980cd33-0754-4aa0-8e26-47aad1a9d4b8
2019-01-10 16:31:49.1546 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2019-01-10 16:31:49.1693 Scanning for misfires...
2019-01-10 16:31:49.1951 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 16:31:49.1951 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2019-01-10 16:31:49.2604 Found 0 triggers that missed their scheduled fire-time.
2019-01-10 16:31:49.2604 Batch acquisition of 0 triggers
2019-01-10 16:31:55.9127 JobFactory set to: BackgroundSchedulers.JobFactory
2019-01-10 16:31:55.9127 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-10 16:31:55.9127 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2019-01-10 16:31:55.9427 Batch acquisition of 0 triggers
2019-01-10 16:31:56.9093 Message=[Login process started.], EmailAddress=[], Method=[Login], LineNumber=[367]
2019-01-10 16:31:57.1884 Message=[Getting user with the username: info@park4youserver.com], EmailAddress=[], Method=[Login], LineNumber=[369]
2019-01-10 16:31:58.5416 Message=[Password sign for the user with the username: info@park4youserver.com], EmailAddress=[], Method=[Login], LineNumber=[373]
2019-01-10 16:32:00.8287 Message=[Getting roles of the user.], EmailAddress=[], Method=[Login], LineNumber=[379]
2019-01-10 16:32:01.1598 Message=[Generating token of user with the username: info@park4youserver.com and role: Admin], EmailAddress=[], Method=[Login], LineNumber=[381]
2019-01-10 16:32:01.9944 Message=[Login process ended.], EmailAddress=[], Method=[Login], LineNumber=[392]
2019-01-21 11:50:39.4853 Registering datasource 'SR-53\MSSQL' with db provider: 'Quartz.Impl.AdoJobStore.Common.DbProvider'
2019-01-21 11:50:39.5759 Using object serializer: Quartz.Simpl.JsonObjectSerializer, Quartz.Serialization.Json
2019-01-21 11:50:39.6184 TaskSchedulingThreadPool configured with max concurrency of 10 and TaskScheduler ThreadPoolTaskScheduler.
2019-01-21 11:50:39.6872 Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2019-01-21 11:50:39.7635 Quartz Scheduler v.3.0.7.0 created.
2019-01-21 11:50:39.7635 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.SimpleTriggerPersistenceDelegate
2019-01-21 11:50:39.7635 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CronTriggerPersistenceDelegate
2019-01-21 11:50:39.7783 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CalendarIntervalTriggerPersistenceDelegate
2019-01-21 11:50:39.7783 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.DailyTimeIntervalTriggerPersistenceDelegate
2019-01-21 11:50:39.7783 Using thread monitor-based data access locking (synchronization).
2019-01-21 11:50:39.7783 JobStoreTX initialized.
2019-01-21 11:50:39.7783 Scheduler meta-data: Quartz Scheduler (v3.0.7.0) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'Quartz.Core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'Quartz.Simpl.DefaultThreadPool' - with 10 threads.
  Using job-store 'Quartz.Impl.AdoJobStore.JobStoreTX' - which supports persistence. and is not clustered.

2019-01-21 11:50:39.7783 Quartz scheduler 'QuartzScheduler' initialized
2019-01-21 11:50:39.7783 Quartz scheduler version: 3.0.7.0
2019-01-21 11:50:39.7958 JobFactory set to: BackgroundSchedulers.JobFactory
2019-01-21 11:50:39.8227 Lock 'TRIGGER_ACCESS' is desired by: 0006e3e7-cb2c-4d85-a3de-d049a87cc039
2019-01-21 11:50:39.8251 Lock 'TRIGGER_ACCESS' is being obtained: 0006e3e7-cb2c-4d85-a3de-d049a87cc039
2019-01-21 11:50:39.8251 Lock 'TRIGGER_ACCESS' given to: 0006e3e7-cb2c-4d85-a3de-d049a87cc039
2019-01-21 11:50:40.0896 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2019-01-21 11:50:40.1760 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2019-01-21 11:50:40.1912 Freed 0 triggers from 'acquired' / 'blocked' state.
2019-01-21 11:50:40.2011 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-21 11:50:40.2275 Found 0 triggers that missed their scheduled fire-time.
2019-01-21 11:50:40.2372 Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND INSTANCE_NAME = @instanceName AND REQUESTS_RECOVERY = @requestsRecovery
2019-01-21 11:50:40.2533 Recovering 0 jobs that were in-progress at the time of the last shut-down.
2019-01-21 11:50:40.2533 Recovery complete.
2019-01-21 11:50:40.2533 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state
2019-01-21 11:50:40.2732 Removed 0 'complete' triggers.
2019-01-21 11:50:40.2732 Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler'
2019-01-21 11:50:40.2879 Removed 0 stale fired job entries.
2019-01-21 11:50:40.2948 Lock 'TRIGGER_ACCESS' returned by: 0006e3e7-cb2c-4d85-a3de-d049a87cc039
2019-01-21 11:50:40.3151 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2019-01-21 11:50:40.3151 Scanning for misfires...
2019-01-21 11:50:40.3646 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2019-01-21 11:50:40.3880 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-21 11:50:40.4074 Found 0 triggers that missed their scheduled fire-time.
2019-01-21 11:50:40.4311 Batch acquisition of 0 triggers
2019-01-21 11:50:55.2930 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-21 11:50:55.3151 Batch acquisition of 0 triggers
2019-01-21 11:50:56.2300 JobFactory set to: BackgroundSchedulers.JobFactory
2019-01-21 11:50:56.2320 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-21 11:50:56.2320 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2019-01-21 11:50:56.2468 Batch acquisition of 0 triggers
2019-01-21 11:50:56.3617 Message=[Login process started.], EmailAddress=[], Method=[Login], LineNumber=[367]
2019-01-21 11:50:56.3617 Message=[Getting user with the username: +923028417241], EmailAddress=[], Method=[Login], LineNumber=[369]
2019-01-21 11:50:56.4185 Message=[Password sign for the user with the username: +923028417241], EmailAddress=[], Method=[Login], LineNumber=[373]
2019-01-21 11:50:56.6291 Message=[Getting roles of the user.], EmailAddress=[], Method=[Login], LineNumber=[378]
2019-01-21 11:50:56.6610 Message=[Generating token of user with the username: +923028417241 and role: User], EmailAddress=[], Method=[Login], LineNumber=[380]
2019-01-21 11:50:56.6952 Message=[Login process ended.], EmailAddress=[], Method=[Login], LineNumber=[391]
2019-01-21 11:51:09.7874 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-21 11:51:09.8107 Batch acquisition of 0 triggers
2019-01-21 11:51:24.3707 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-21 11:51:24.3925 Batch acquisition of 0 triggers
2019-01-21 11:51:39.2353 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-21 11:51:39.2571 Batch acquisition of 0 triggers
2019-01-21 11:51:40.3255 Scanning for misfires...
2019-01-21 11:51:40.3255 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2019-01-21 11:51:40.3422 Found 0 triggers that missed their scheduled fire-time.
2019-01-21 11:51:51.3258 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-21 11:51:51.3445 Batch acquisition of 0 triggers
2019-01-21 11:52:07.9358 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-21 11:52:08.3922 Batch acquisition of 0 triggers
2019-01-21 11:52:23.4981 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-21 11:52:23.5194 Batch acquisition of 0 triggers
2019-01-21 11:52:37.6507 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-21 11:52:37.6795 Batch acquisition of 0 triggers
2019-01-21 11:52:40.3259 Scanning for misfires...
2019-01-21 11:52:40.3259 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2019-01-21 11:52:40.3406 Found 0 triggers that missed their scheduled fire-time.
2019-01-21 11:53:18.1790 Registering datasource 'SR-53\MSSQL' with db provider: 'Quartz.Impl.AdoJobStore.Common.DbProvider'
2019-01-21 11:53:18.2381 Using object serializer: Quartz.Simpl.JsonObjectSerializer, Quartz.Serialization.Json
2019-01-21 11:53:18.2576 TaskSchedulingThreadPool configured with max concurrency of 10 and TaskScheduler ThreadPoolTaskScheduler.
2019-01-21 11:53:18.2883 Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2019-01-21 11:53:18.3462 Quartz Scheduler v.3.0.7.0 created.
2019-01-21 11:53:18.3595 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.SimpleTriggerPersistenceDelegate
2019-01-21 11:53:18.3595 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CronTriggerPersistenceDelegate
2019-01-21 11:53:18.3595 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CalendarIntervalTriggerPersistenceDelegate
2019-01-21 11:53:18.3595 Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.DailyTimeIntervalTriggerPersistenceDelegate
2019-01-21 11:53:18.3595 Using thread monitor-based data access locking (synchronization).
2019-01-21 11:53:18.3595 JobStoreTX initialized.
2019-01-21 11:53:18.3756 Scheduler meta-data: Quartz Scheduler (v3.0.7.0) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'Quartz.Core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'Quartz.Simpl.DefaultThreadPool' - with 10 threads.
  Using job-store 'Quartz.Impl.AdoJobStore.JobStoreTX' - which supports persistence. and is not clustered.

2019-01-21 11:53:18.3756 Quartz scheduler 'QuartzScheduler' initialized
2019-01-21 11:53:18.3756 Quartz scheduler version: 3.0.7.0
2019-01-21 11:53:18.3756 JobFactory set to: BackgroundSchedulers.JobFactory
2019-01-21 11:53:18.3996 Lock 'TRIGGER_ACCESS' is desired by: 589f2dd9-5265-4621-ba83-c66bc4ea4cca
2019-01-21 11:53:18.3996 Lock 'TRIGGER_ACCESS' is being obtained: 589f2dd9-5265-4621-ba83-c66bc4ea4cca
2019-01-21 11:53:18.3996 Lock 'TRIGGER_ACCESS' given to: 589f2dd9-5265-4621-ba83-c66bc4ea4cca
2019-01-21 11:53:18.4949 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2019-01-21 11:53:18.5725 Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2)
2019-01-21 11:53:18.5871 Freed 0 triggers from 'acquired' / 'blocked' state.
2019-01-21 11:53:18.5979 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-21 11:53:18.6277 Found 0 triggers that missed their scheduled fire-time.
2019-01-21 11:53:18.6398 Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND INSTANCE_NAME = @instanceName AND REQUESTS_RECOVERY = @requestsRecovery
2019-01-21 11:53:18.6568 Recovering 0 jobs that were in-progress at the time of the last shut-down.
2019-01-21 11:53:18.6568 Recovery complete.
2019-01-21 11:53:18.6568 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state
2019-01-21 11:53:18.6769 Removed 0 'complete' triggers.
2019-01-21 11:53:18.6769 Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler'
2019-01-21 11:53:18.6930 Removed 0 stale fired job entries.
2019-01-21 11:53:18.7002 Lock 'TRIGGER_ACCESS' returned by: 589f2dd9-5265-4621-ba83-c66bc4ea4cca
2019-01-21 11:53:18.7175 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2019-01-21 11:53:18.7175 Scanning for misfires...
2019-01-21 11:53:18.7581 Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1
2019-01-21 11:53:18.7787 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-21 11:53:18.8226 Found 0 triggers that missed their scheduled fire-time.
2019-01-21 11:53:18.8226 Batch acquisition of 0 triggers
2019-01-21 11:53:29.8519 JobFactory set to: BackgroundSchedulers.JobFactory
2019-01-21 11:53:29.8624 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-21 11:53:29.8624 Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2019-01-21 11:53:29.8840 Batch acquisition of 0 triggers
2019-01-21 11:53:42.0226 Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC
2019-01-21 11:53:42.0397 Batch acquisition of 0 triggers
