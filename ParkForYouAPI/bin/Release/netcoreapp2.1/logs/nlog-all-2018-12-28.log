2018-12-28 16:50:07.5493||INFO|Quartz.Util.DBConnectionManager|Registering datasource 'SR-53\MSSQL' with db provider: 'Quartz.Impl.AdoJobStore.Common.DbProvider' 
2018-12-28 16:50:07.6285||INFO|Quartz.Impl.StdSchedulerFactory|Using object serializer: Quartz.Simpl.JsonObjectSerializer, Quartz.Serialization.Json 
2018-12-28 16:50:07.6488||DEBUG|Quartz.Simpl.TaskSchedulingThreadPool|TaskSchedulingThreadPool configured with max concurrency of 10 and TaskScheduler ThreadPoolTaskScheduler. 
2018-12-28 16:50:12.7214||INFO|Quartz.Util.DBConnectionManager|Registering datasource 'SR-53\MSSQL' with db provider: 'Quartz.Impl.AdoJobStore.Common.DbProvider' 
2018-12-28 16:50:12.7780||INFO|Quartz.Impl.StdSchedulerFactory|Using object serializer: Quartz.Simpl.JsonObjectSerializer, Quartz.Serialization.Json 
2018-12-28 16:50:12.7780||DEBUG|Quartz.Simpl.TaskSchedulingThreadPool|TaskSchedulingThreadPool configured with max concurrency of 10 and TaskScheduler ThreadPoolTaskScheduler. 
2018-12-28 16:50:12.7999||INFO|Quartz.Core.SchedulerSignalerImpl|Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl 
2018-12-28 16:50:12.8284||INFO|Quartz.Core.QuartzScheduler|Quartz Scheduler v.3.0.7.0 created. 
2018-12-28 16:50:12.8284||DEBUG|Quartz.Impl.AdoJobStore.StdAdoDelegate|Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.SimpleTriggerPersistenceDelegate 
2018-12-28 16:50:12.8284||DEBUG|Quartz.Impl.AdoJobStore.StdAdoDelegate|Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CronTriggerPersistenceDelegate 
2018-12-28 16:50:12.8409||DEBUG|Quartz.Impl.AdoJobStore.StdAdoDelegate|Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.CalendarIntervalTriggerPersistenceDelegate 
2018-12-28 16:50:12.8409||DEBUG|Quartz.Impl.AdoJobStore.StdAdoDelegate|Adding TriggerPersistenceDelegate of type: Quartz.Impl.AdoJobStore.DailyTimeIntervalTriggerPersistenceDelegate 
2018-12-28 16:50:12.8409||INFO|Quartz.Impl.AdoJobStore.JobStoreTX|Using thread monitor-based data access locking (synchronization). 
2018-12-28 16:50:12.8409||INFO|Quartz.Impl.AdoJobStore.JobStoreTX|JobStoreTX initialized. 
2018-12-28 16:50:12.8409||INFO|Quartz.Core.QuartzScheduler|Scheduler meta-data: Quartz Scheduler (v3.0.7.0) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'Quartz.Core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'Quartz.Simpl.DefaultThreadPool' - with 10 threads.
  Using job-store 'Quartz.Impl.AdoJobStore.JobStoreTX' - which supports persistence. and is not clustered.
 
2018-12-28 16:50:12.8409||INFO|Quartz.Impl.StdSchedulerFactory|Quartz scheduler 'QuartzScheduler' initialized 
2018-12-28 16:50:12.8409||INFO|Quartz.Impl.StdSchedulerFactory|Quartz scheduler version: 3.0.7.0 
2018-12-28 16:50:12.8409||INFO|Quartz.Core.QuartzScheduler|JobFactory set to: BackgroundSchedulers.JobFactory 
2018-12-28 16:50:12.8723||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' is desired by: 00619dc1-a9e0-4d91-b011-dc007af6ef31 
2018-12-28 16:50:12.8723||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' is being obtained: 00619dc1-a9e0-4d91-b011-dc007af6ef31 
2018-12-28 16:50:12.8723||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' given to: 00619dc1-a9e0-4d91-b011-dc007af6ef31 
2018-12-28 16:50:12.9264||DEBUG|Quartz.SQL|Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2) 
2018-12-28 16:50:12.9444||DEBUG|Quartz.SQL|Prepared SQL: UPDATE QRTZ_TRIGGERS SET TRIGGER_STATE = @newState WHERE SCHED_NAME = 'QuartzScheduler' AND (TRIGGER_STATE = @oldState1 OR TRIGGER_STATE = @oldState2) 
2018-12-28 16:50:12.9444||INFO|Quartz.Impl.AdoJobStore.JobStoreTX|Freed 0 triggers from 'acquired' / 'blocked' state. 
2018-12-28 16:50:12.9597||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-28 16:50:12.9704||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-28 16:50:12.9704||DEBUG|Quartz.SQL|Prepared SQL: SELECT * FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND INSTANCE_NAME = @instanceName AND REQUESTS_RECOVERY = @requestsRecovery 
2018-12-28 16:50:12.9835||INFO|Quartz.Impl.AdoJobStore.JobStoreTX|Recovering 0 jobs that were in-progress at the time of the last shut-down. 
2018-12-28 16:50:12.9835||INFO|Quartz.Impl.AdoJobStore.JobStoreTX|Recovery complete. 
2018-12-28 16:50:12.9835||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state 
2018-12-28 16:50:12.9835||INFO|Quartz.Impl.AdoJobStore.JobStoreTX|Removed 0 'complete' triggers. 
2018-12-28 16:50:12.9835||DEBUG|Quartz.SQL|Prepared SQL: DELETE FROM QRTZ_FIRED_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' 
2018-12-28 16:50:12.9986||INFO|Quartz.Impl.AdoJobStore.JobStoreTX|Removed 0 stale fired job entries. 
2018-12-28 16:50:12.9986||DEBUG|Quartz.Impl.AdoJobStore.SimpleSemaphore|Lock 'TRIGGER_ACCESS' returned by: 00619dc1-a9e0-4d91-b011-dc007af6ef31 
2018-12-28 16:50:13.0162||INFO|Quartz.Core.QuartzScheduler|Scheduler QuartzScheduler_$_NON_CLUSTERED started. 
2018-12-28 16:50:13.0162||INFO|Quartz.Core.QuartzScheduler|JobFactory set to: BackgroundSchedulers.JobFactory 
2018-12-28 16:50:13.0162||INFO|Quartz.Core.QuartzScheduler|Scheduler QuartzScheduler_$_NON_CLUSTERED started. 
2018-12-28 16:50:13.0162||DEBUG|Quartz.Impl.AdoJobStore.MisfireHandler|Scanning for misfires... 
2018-12-28 16:50:13.0379||DEBUG|Quartz.SQL|Prepared SQL: SELECT COUNT(TRIGGER_NAME) FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME < @nextFireTime AND TRIGGER_STATE = @state1 
2018-12-28 16:50:13.0379||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-28 16:50:13.0459||DEBUG|Quartz.Impl.AdoJobStore.JobStoreTX|Found 0 triggers that missed their scheduled fire-time. 
2018-12-28 16:50:13.0459||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
2018-12-28 16:50:13.0839||INFO|Quartz.Core.QuartzScheduler|JobFactory set to: BackgroundSchedulers.JobFactory 
2018-12-28 16:50:13.0839||INFO|Quartz.Core.QuartzScheduler|Scheduler QuartzScheduler_$_NON_CLUSTERED started. 
2018-12-28 16:50:13.0839||DEBUG|Quartz.SQL|Prepared SQL: SELECT TRIGGER_NAME, TRIGGER_GROUP, NEXT_FIRE_TIME, PRIORITY FROM QRTZ_TRIGGERS WHERE SCHED_NAME = 'QuartzScheduler' AND TRIGGER_STATE = @state AND NEXT_FIRE_TIME <= @noLaterThan AND (MISFIRE_INSTR = -1 OR (MISFIRE_INSTR <> -1 AND NEXT_FIRE_TIME >= @noEarlierThan)) ORDER BY NEXT_FIRE_TIME ASC, PRIORITY DESC 
2018-12-28 16:50:13.0839||DEBUG|Quartz.Core.QuartzSchedulerThread|Batch acquisition of 0 triggers 
